{"metadata":{"kernel_spec":{"name":"SQL","language":"sql","display_name":"SQL"},"language_info":{"name":"sql","version":""}},"nbformat":4,"nbformat_minor":2,"cells":[{"cell_type":"markdown","source":["# [AWMSdb]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']","object_type":"Database"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["USE [master]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']","object_type":"Database"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Database [AWMSdb]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE DATABASE [AWMSdb]\r\n CONTAINMENT = NONE\r\n ON  PRIMARY \r\n( NAME = N'AWMSdb', FILENAME = N'C:\\Program Files\\Microsoft SQL Server\\MSSQL15.MSSQLSERVER\\MSSQL\\DATA\\AWMSdb.mdf' , SIZE = 270336KB , MAXSIZE = UNLIMITED, FILEGROWTH = 65536KB )\r\n LOG ON \r\n( NAME = N'AWMSdb_log', FILENAME = N'C:\\Program Files\\Microsoft SQL Server\\MSSQL15.MSSQLSERVER\\MSSQL\\DATA\\AWMSdb_log.ldf' , SIZE = 532480KB , MAXSIZE = 2048GB , FILEGROWTH = 65536KB )\r\n WITH CATALOG_COLLATION = DATABASE_DEFAULT\r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET COMPATIBILITY_LEVEL = 150\r\n","GO\r\n","IF (1 = FULLTEXTSERVICEPROPERTY('IsFullTextInstalled'))\r\nbegin\r\nEXEC [AWMSdb].[dbo].[sp_fulltext_database] @action = 'enable'\r\nend\r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET ANSI_NULL_DEFAULT OFF \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET ANSI_NULLS OFF \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET ANSI_PADDING OFF \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET ANSI_WARNINGS OFF \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET ARITHABORT OFF \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET AUTO_CLOSE OFF \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET AUTO_SHRINK OFF \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET AUTO_UPDATE_STATISTICS ON \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET CURSOR_CLOSE_ON_COMMIT OFF \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET CURSOR_DEFAULT  GLOBAL \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET CONCAT_NULL_YIELDS_NULL OFF \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET NUMERIC_ROUNDABORT OFF \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET QUOTED_IDENTIFIER OFF \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET RECURSIVE_TRIGGERS OFF \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET  DISABLE_BROKER \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET AUTO_UPDATE_STATISTICS_ASYNC OFF \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET DATE_CORRELATION_OPTIMIZATION OFF \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET TRUSTWORTHY OFF \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET ALLOW_SNAPSHOT_ISOLATION OFF \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET PARAMETERIZATION SIMPLE \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET READ_COMMITTED_SNAPSHOT ON \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET HONOR_BROKER_PRIORITY OFF \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET RECOVERY FULL \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET  MULTI_USER \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET PAGE_VERIFY CHECKSUM  \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET DB_CHAINING OFF \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET FILESTREAM( NON_TRANSACTED_ACCESS = OFF ) \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET TARGET_RECOVERY_TIME = 60 SECONDS \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET DELAYED_DURABILITY = DISABLED \r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET ACCELERATED_DATABASE_RECOVERY = OFF  \r\n","GO\r\n","EXEC sys.sp_db_vardecimal_storage_format N'AWMSdb', N'ON'\r\n","GO\r\n","ALTER DATABASE [AWMSdb] SET QUERY_STORE = OFF\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']","object_type":"Database"}},{"cell_type":"markdown","source":["# [dbo].[ImportItemType]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='ImportItemType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["USE [AWMSdb]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='ImportItemType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  UserDefinedTableType [dbo].[ImportItemType]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE TYPE [dbo].[ImportItemType] AS TABLE(\r\n\t[PK] [int] NULL,\r\n\t[Tag] [nvarchar](255) NULL,\r\n\t[Description] [nvarchar](255) NULL,\r\n\t[UnitID] [nvarchar](255) NULL,\r\n\t[Qty] [decimal](18, 2) NULL,\r\n\t[OverQty] [decimal](18, 2) NULL,\r\n\t[ShortageQty] [decimal](18, 2) NULL,\r\n\t[DamageQty] [decimal](18, 2) NULL,\r\n\t[IncorectQty] [decimal](18, 2) NULL,\r\n\t[ScopeID] [nvarchar](255) NULL,\r\n\t[HeatNo] [nvarchar](255) NULL,\r\n\t[BatchNo] [nvarchar](255) NULL,\r\n\t[Remark] [nvarchar](255) NULL,\r\n\t[Price] [decimal](18, 2) NULL,\r\n\t[UnitPriceID] [nvarchar](255) NULL,\r\n\t[NetW] [decimal](18, 2) NULL,\r\n\t[GrossW] [decimal](18, 2) NULL,\r\n\t[BaseMaterial] [nvarchar](255) NULL\r\n)\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='ImportItemType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"cell_type":"markdown","source":["# [dbo].[IntItemIdList]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='IntItemIdList' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  UserDefinedTableType [dbo].[IntItemIdList]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE TYPE [dbo].[IntItemIdList] AS TABLE(\r\n\t[Value] [int] NULL\r\n)\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='IntItemIdList' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"cell_type":"markdown","source":["# [dbo].[IntList]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='IntList' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  UserDefinedTableType [dbo].[IntList]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE TYPE [dbo].[IntList] AS TABLE(\r\n\t[Value] [int] NULL\r\n)\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='IntList' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"cell_type":"markdown","source":["# [dbo].[IntLocItemsList]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='IntLocItemsList' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  UserDefinedTableType [dbo].[IntLocItemsList]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE TYPE [dbo].[IntLocItemsList] AS TABLE(\r\n\t[Value] [int] NULL\r\n)\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='IntLocItemsList' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"cell_type":"markdown","source":["# [dbo].[ItemIDList]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='ItemIDList' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  UserDefinedTableType [dbo].[ItemIDList]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE TYPE [dbo].[ItemIDList] AS TABLE(\r\n\t[ItemId] [int] NULL\r\n)\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='ItemIDList' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"cell_type":"markdown","source":["# [dbo].[ItemIDListType]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='ItemIDListType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  UserDefinedTableType [dbo].[ItemIDListType]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE TYPE [dbo].[ItemIDListType] AS TABLE(\r\n\t[ItemID] [int] NULL\r\n)\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='ItemIDListType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"cell_type":"markdown","source":["# [dbo].[ItemTableType]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='ItemTableType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  UserDefinedTableType [dbo].[ItemTableType]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE TYPE [dbo].[ItemTableType] AS TABLE(\r\n\t[PK] [int] NULL,\r\n\t[Tag] [nvarchar](50) NULL,\r\n\t[Description] [nvarchar](255) NULL,\r\n\t[UnitID] [nvarchar](50) NULL,\r\n\t[Qty] [decimal](18, 2) NULL,\r\n\t[OverQty] [decimal](18, 2) NULL,\r\n\t[ShortageQty] [decimal](18, 2) NULL,\r\n\t[DamageQty] [decimal](18, 2) NULL,\r\n\t[IncorectQty] [decimal](18, 2) NULL,\r\n\t[ScopeID] [nvarchar](50) NULL,\r\n\t[HeatNo] [nvarchar](50) NULL,\r\n\t[BatchNo] [nvarchar](50) NULL,\r\n\t[Remark] [nvarchar](255) NULL,\r\n\t[Price] [decimal](18, 2) NULL,\r\n\t[UnitPriceID] [nvarchar](50) NULL,\r\n\t[NetW] [decimal](18, 2) NULL,\r\n\t[GrossW] [decimal](18, 2) NULL,\r\n\t[BaseMaterial] [nvarchar](50) NULL,\r\n\t[EnteredBy] [int] NULL,\r\n\t[EnteredDate] [datetime] NULL\r\n)\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='ItemTableType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"cell_type":"markdown","source":["# [dbo].[LocItemIDListType]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='LocItemIDListType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  UserDefinedTableType [dbo].[LocItemIDListType]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE TYPE [dbo].[LocItemIDListType] AS TABLE(\r\n\t[LocItemID] [int] NULL\r\n)\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='LocItemIDListType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"cell_type":"markdown","source":["# [dbo].[NewHMVDtoType]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='NewHMVDtoType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  UserDefinedTableType [dbo].[NewHMVDtoType]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE TYPE [dbo].[NewHMVDtoType] AS TABLE(\r\n\t[HmvQty] [decimal](18, 2) NULL,\r\n\t[HmvDelQty] [decimal](18, 2) NULL,\r\n\t[HmvRejQty] [decimal](18, 2) NULL,\r\n\t[LocItemID] [int] NULL,\r\n\t[Remark] [nvarchar](300) NULL,\r\n\t[MRCNo] [nvarchar](50) NULL,\r\n\t[TypeName] [nvarchar](50) NULL\r\n)\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='NewHMVDtoType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"cell_type":"markdown","source":["# [dbo].[NewMRVDtoType]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='NewMRVDtoType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  UserDefinedTableType [dbo].[NewMRVDtoType]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE TYPE [dbo].[NewMRVDtoType] AS TABLE(\r\n\t[ReqMrvQty] [decimal](18, 2) NULL,\r\n\t[DelMrvQty] [decimal](18, 2) NULL,\r\n\t[DelMrvRejQty] [decimal](18, 2) NULL,\r\n\t[LocItemID] [int] NULL,\r\n\t[Remark] [nvarchar](255) NULL,\r\n\t[SelectedLocation] [int] NULL\r\n)\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='NewMRVDtoType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"cell_type":"markdown","source":["# [dbo].[NewMRVDtoType3]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='NewMRVDtoType3' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  UserDefinedTableType [dbo].[NewMRVDtoType3]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE TYPE [dbo].[NewMRVDtoType3] AS TABLE(\r\n\t[ReqMrvQty] [decimal](18, 0) NULL,\r\n\t[DelMrvQty] [decimal](18, 0) NULL,\r\n\t[DelMrvRejQty] [decimal](18, 0) NULL,\r\n\t[LocItemID] [int] NULL,\r\n\t[Remark] [nvarchar](255) NULL,\r\n\t[MRCNO] [nvarchar](50) NULL,\r\n\t[SelectedLocation] [int] NULL\r\n)\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='NewMRVDtoType3' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"cell_type":"markdown","source":["# [dbo].[NewMRVDtoType4]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='NewMRVDtoType4' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  UserDefinedTableType [dbo].[NewMRVDtoType4]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE TYPE [dbo].[NewMRVDtoType4] AS TABLE(\r\n\t[ReqMrvQty] [decimal](18, 0) NULL,\r\n\t[DelMrvQty] [decimal](18, 0) NULL,\r\n\t[DelMrvRejQty] [decimal](18, 0) NULL,\r\n\t[LocItemID] [int] NULL,\r\n\t[Remark] [nvarchar](255) NULL,\r\n\t[MRCNO] [nvarchar](50) NULL,\r\n\t[SelectedLocation] [int] NULL\r\n)\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='NewMRVDtoType4' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"cell_type":"markdown","source":["# [dbo].[NewMRVDtoType5]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='NewMRVDtoType5' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  UserDefinedTableType [dbo].[NewMRVDtoType5]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE TYPE [dbo].[NewMRVDtoType5] AS TABLE(\r\n\t[ReqMrvQty] [decimal](18, 2) NULL,\r\n\t[DelMrvQty] [decimal](18, 2) NULL,\r\n\t[DelMrvRejQty] [decimal](18, 2) NULL,\r\n\t[LocItemID] [int] NULL,\r\n\t[Remark] [nvarchar](255) NULL,\r\n\t[MRCNo] [nvarchar](50) NULL,\r\n\t[SelectedLocation] [int] NULL,\r\n\t[TypeName] [nvarchar](50) NULL\r\n)\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='NewMRVDtoType5' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"cell_type":"markdown","source":["# [dbo].[NewRequestDtoType]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='NewRequestDtoType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  UserDefinedTableType [dbo].[NewRequestDtoType]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE TYPE [dbo].[NewRequestDtoType] AS TABLE(\r\n\t[ReqMivQty] [decimal](18, 2) NULL,\r\n\t[ReserveMivQty] [decimal](18, 2) NULL,\r\n\t[LocItemID] [int] NULL\r\n)\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='NewRequestDtoType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"cell_type":"markdown","source":["# [dbo].[PackagePKIDDtoType]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='PackagePKIDDtoType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  UserDefinedTableType [dbo].[PackagePKIDDtoType]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE TYPE [dbo].[PackagePKIDDtoType] AS TABLE(\r\n\t[PKID] [int] NULL\r\n)\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='PackagePKIDDtoType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"cell_type":"markdown","source":["# [dbo].[PackageType]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='PackageType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  UserDefinedTableType [dbo].[PackageType]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE TYPE [dbo].[PackageType] AS TABLE(\r\n\t[PK] [int] NULL,\r\n\t[NetW] [decimal](18, 2) NULL,\r\n\t[GrossW] [decimal](18, 2) NULL,\r\n\t[Dimension] [nvarchar](100) NULL,\r\n\t[Volume] [nvarchar](100) NULL,\r\n\t[ArrivalDate] [date] NULL,\r\n\t[Desciption] [nvarchar](500) NULL,\r\n\t[Remark] [nvarchar](500) NULL,\r\n\t[PLId] [int] NULL,\r\n\t[EnteredBy] [int] NULL,\r\n\t[EnteredDate] [date] NULL\r\n)\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='PackageType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"cell_type":"markdown","source":["# [dbo].[RequestDtoType]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='RequestDtoType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  UserDefinedTableType [dbo].[RequestDtoType]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE TYPE [dbo].[RequestDtoType] AS TABLE(\r\n\t[CompanyID] [int] NULL,\r\n\t[ContractId] [int] NULL,\r\n\t[MRCNO] [nvarchar](50) NULL,\r\n\t[AreaUnitID] [int] NULL,\r\n\t[ReqMivQty] [decimal](18, 2) NULL,\r\n\t[ReserveMivQty] [decimal](18, 2) NULL,\r\n\t[LocItemID] [int] NULL,\r\n\t[RequestNO] [nvarchar](6) NULL\r\n)\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='RequestDtoType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"cell_type":"markdown","source":["# [dbo].[RequestMivTableType]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='RequestMivTableType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  UserDefinedTableType [dbo].[RequestMivTableType]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE TYPE [dbo].[RequestMivTableType] AS TABLE(\r\n\t[CompanyID] [int] NULL,\r\n\t[ContractId] [int] NULL,\r\n\t[MRCNO] [nvarchar](50) NULL,\r\n\t[AreaUnitID] [int] NULL,\r\n\t[ReqMivQty] [decimal](18, 2) NULL,\r\n\t[ReserveMivQty] [decimal](18, 2) NULL,\r\n\t[LocItemID] [int] NULL,\r\n\t[RequestNO] [nvarchar](50) NULL\r\n)\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='RequestMivTableType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"cell_type":"markdown","source":["# [dbo].[UpdateLocItemLocationType]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='UpdateLocItemLocationType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  UserDefinedTableType [dbo].[UpdateLocItemLocationType]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE TYPE [dbo].[UpdateLocItemLocationType] AS TABLE(\r\n\t[LocItemID] [int] NULL,\r\n\t[LocationID] [int] NULL,\r\n\t[EditedBy] [nvarchar](100) NULL,\r\n\t[EditedDate] [datetime] NULL\r\n)\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='UpdateLocItemLocationType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"cell_type":"markdown","source":["# [dbo].[UpdateLocItemRemarkMrvType]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='UpdateLocItemRemarkMrvType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  UserDefinedTableType [dbo].[UpdateLocItemRemarkMrvType]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE TYPE [dbo].[UpdateLocItemRemarkMrvType] AS TABLE(\r\n\t[LocItemID] [int] NULL,\r\n\t[RemarkLocitemID] [nvarchar](300) NULL,\r\n\t[EditedBy] [nvarchar](50) NULL,\r\n\t[EditedDate] [datetime] NULL\r\n)\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='UpdateLocItemRemarkMrvType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"cell_type":"markdown","source":["# [dbo].[UpdateMivTableType]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='UpdateMivTableType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  UserDefinedTableType [dbo].[UpdateMivTableType]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE TYPE [dbo].[UpdateMivTableType] AS TABLE(\r\n\t[ReqLocItemID] [nvarchar](100) NULL,\r\n\t[DelMivQty] [decimal](18, 2) NULL\r\n)\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='UpdateMivTableType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"cell_type":"markdown","source":["# [dbo].[UpdateMrvQtType]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='UpdateMrvQtType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  UserDefinedTableType [dbo].[UpdateMrvQtType]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE TYPE [dbo].[UpdateMrvQtType] AS TABLE(\r\n\t[LocItemID] [int] NULL,\r\n\t[ReqLocItemID] [int] NULL,\r\n\t[PLocItemIDforMRV] [int] NULL,\r\n\t[ReqMrvQty] [decimal](18, 2) NULL,\r\n\t[DelMrvQty] [decimal](18, 2) NULL,\r\n\t[DelMrvRejQty] [decimal](18, 2) NULL,\r\n\t[MRVRequest] [nvarchar](255) NULL,\r\n\t[EditedBy] [nvarchar](50) NULL,\r\n\t[EditedDate] [datetime] NULL\r\n)\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='UpdateMrvQtType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"cell_type":"markdown","source":["# [dbo].[UpdateMrvRemarkType]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='UpdateMrvRemarkType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  UserDefinedTableType [dbo].[UpdateMrvRemarkType]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE TYPE [dbo].[UpdateMrvRemarkType] AS TABLE(\r\n\t[LocItemID] [int] NULL,\r\n\t[RemarkRequests] [nvarchar](255) NULL,\r\n\t[MRVRequest] [nvarchar](255) NULL,\r\n\t[EditedBy] [nvarchar](50) NULL,\r\n\t[EditedDate] [datetime] NULL\r\n)\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/UserDefinedTableType[@Name='UpdateMrvRemarkType' and @Schema='dbo']","object_type":"UserDefinedTableType"}},{"cell_type":"markdown","source":["# [dbo].[Packages]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Packages' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[Packages]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[Packages](\r\n\t[PKID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[PLId] [int] NOT NULL,\r\n\t[PK] [int] NOT NULL,\r\n\t[NetW] [decimal](18, 2) NULL,\r\n\t[GrossW] [decimal](18, 2) NULL,\r\n\t[Dimension] [nvarchar](100) NULL,\r\n\t[Volume] [nvarchar](100) NULL,\r\n\t[ArrivalDate] [date] NULL,\r\n\t[Desciption] [nvarchar](500) NULL,\r\n\t[Remark] [nvarchar](500) NULL,\r\n\t[EnteredBy] [int] NULL,\r\n\t[EnteredDate] [date] NULL,\r\n\t[EditedBy] [int] NULL,\r\n\t[EditedDate] [date] NULL,\r\n\t[MSRNO] [nvarchar](100) NULL,\r\n\t[MSRPDF] [nvarchar](100) NULL,\r\n\t[MSRDate] [date] NULL,\r\n\t[MSREnteredBy] [int] NULL,\r\n\t[MSRStatus] [bit] NULL,\r\n\t[MSRRev] [int] NULL,\r\n\t[MSRRevEnteredBy] [int] NULL,\r\n\t[MSRRevDate] [date] NULL,\r\n CONSTRAINT [PK_Packages] PRIMARY KEY CLUSTERED \r\n(\r\n\t[PKID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Packages' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[Items]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Items' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[Items]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[Items](\r\n\t[ItemId] [int] IDENTITY(1,1) NOT NULL,\r\n\t[PKID] [int] NOT NULL,\r\n\t[ItemOfPk] [int] NULL,\r\n\t[Tag] [nvarchar](500) NULL,\r\n\t[Description] [nvarchar](500) NULL,\r\n\t[UnitID] [int] NULL,\r\n\t[Qty] [decimal](18, 2) NULL,\r\n\t[OverQty] [decimal](18, 2) NULL,\r\n\t[ShortageQty] [decimal](18, 2) NULL,\r\n\t[DamageQty] [decimal](18, 2) NULL,\r\n\t[IncorectQty] [decimal](18, 2) NULL,\r\n\t[ScopeID] [int] NULL,\r\n\t[HeatNo] [nvarchar](500) NULL,\r\n\t[BatchNo] [nvarchar](500) NULL,\r\n\t[Remark] [nvarchar](500) NULL,\r\n\t[MTRNo] [nvarchar](200) NULL,\r\n\t[ColorCode] [nvarchar](50) NULL,\r\n\t[LabelNo] [nvarchar](50) NULL,\r\n\t[EnteredBy] [int] NULL,\r\n\t[EnteredDate] [date] NULL,\r\n\t[EditedBy] [int] NULL,\r\n\t[EditedDate] [date] NULL,\r\n\t[Price] [decimal](18, 2) NULL,\r\n\t[UnitPriceID] [int] NULL,\r\n\t[NetW] [decimal](18, 2) NULL,\r\n\t[GrossW] [decimal](18, 2) NULL,\r\n\t[ItemCodeId] [int] NULL,\r\n\t[BaseMaterial] [nvarchar](max) NULL,\r\n\t[Hold] [bit] NULL,\r\n\t[NIS] [decimal](18, 2) NULL,\r\n\t[StorageCode] [nvarchar](50) NULL,\r\n\t[ExpiredDate] [date] NULL,\r\n CONSTRAINT [PK_Items] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ItemId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Items' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[vw_ItemsWithPackages]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/View[@Name='vw_ItemsWithPackages' and @Schema='dbo']","object_type":"View"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  View [dbo].[vw_ItemsWithPackages]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE VIEW [dbo].[vw_ItemsWithPackages]\r\nWITH SCHEMABINDING\r\nAS\r\nSELECT \r\n    i.ItemId,\r\n    i.PKID,\r\n    i.ItemOfPk,\r\n    i.Tag,\r\n    i.Description,\r\n    i.UnitID,\r\n    i.Qty,\r\n    i.OverQty,\r\n    i.ShortageQty,\r\n    i.DamageQty,\r\n    i.IncorectQty,\r\n    i.ScopeID,\r\n    i.HeatNo,\r\n    i.BatchNo,\r\n    i.Remark,\r\n    i.MTRNo,\r\n    i.ColorCode,\r\n    i.LabelNo,\r\n    i.EnteredBy,\r\n    i.EnteredDate,\r\n    i.EditedBy,\r\n    i.EditedDate,\r\n    i.Price,\r\n    i.UnitPriceID,\r\n    i.NetW,\r\n    i.GrossW,\r\n    i.ItemCodeId,\r\n    i.BaseMaterial,\r\n    i.Hold,\r\n    i.NIS,\r\n    i.StorageCode,\r\n    p.PLId\r\nFROM dbo.Items i\r\nINNER JOIN dbo.Packages p ON i.PKID = p.PKID;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/View[@Name='vw_ItemsWithPackages' and @Schema='dbo']","object_type":"View"}},{"cell_type":"markdown","source":["# [IX_vw_ItemsWithPackages]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/View[@Name='vw_ItemsWithPackages' and @Schema='dbo']/Index[@Name='IX_vw_ItemsWithPackages']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["SET ARITHABORT ON\r\nSET CONCAT_NULL_YIELDS_NULL ON\r\nSET QUOTED_IDENTIFIER ON\r\nSET ANSI_NULLS ON\r\nSET ANSI_PADDING ON\r\nSET ANSI_WARNINGS ON\r\nSET NUMERIC_ROUNDABORT OFF\r\nGO\r\n","/****** Object:  Index [IX_vw_ItemsWithPackages]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE UNIQUE CLUSTERED INDEX [IX_vw_ItemsWithPackages] ON [dbo].[vw_ItemsWithPackages]\r\n(\r\n\t[ItemId] ASC,\r\n\t[PKID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/View[@Name='vw_ItemsWithPackages' and @Schema='dbo']/Index[@Name='IX_vw_ItemsWithPackages']","object_type":"Index"}},{"cell_type":"markdown","source":["# [dbo].[__EFMigrationsHistory]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='__EFMigrationsHistory' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[__EFMigrationsHistory]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[__EFMigrationsHistory](\r\n\t[MigrationId] [nvarchar](150) NOT NULL,\r\n\t[ProductVersion] [nvarchar](32) NOT NULL,\r\n CONSTRAINT [PK___EFMigrationsHistory] PRIMARY KEY CLUSTERED \r\n(\r\n\t[MigrationId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='__EFMigrationsHistory' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[ApplicationRole]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='ApplicationRole' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[ApplicationRole]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[ApplicationRole](\r\n\t[RoleID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[RoleName] [nvarchar](50) NOT NULL,\r\n CONSTRAINT [PK_ApplicationRole] PRIMARY KEY CLUSTERED \r\n(\r\n\t[RoleID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='ApplicationRole' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[ApplicationUser]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='ApplicationUser' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[ApplicationUser]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[ApplicationUser](\r\n\t[UserID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[Username] [nvarchar](255) NOT NULL,\r\n\t[PasswordHash] [nvarchar](255) NOT NULL,\r\n\t[RoleID] [int] NOT NULL,\r\n CONSTRAINT [PK_ApplicationUser] PRIMARY KEY CLUSTERED \r\n(\r\n\t[UserID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='ApplicationUser' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[AreaUnits]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='AreaUnits' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[AreaUnits]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[AreaUnits](\r\n\t[AreaUnitID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[AreaUnitName] [nvarchar](200) NOT NULL,\r\n\t[AreaUnitDescription] [nvarchar](500) NULL,\r\n\t[AreaUnitTrain] [nvarchar](max) NULL,\r\n\t[EnteredDate] [datetime2](7) NULL,\r\n\t[Remark] [nvarchar](max) NULL,\r\n CONSTRAINT [PK_AreaUnits] PRIMARY KEY CLUSTERED \r\n(\r\n\t[AreaUnitID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='AreaUnits' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[Companies]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Companies' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[Companies]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[Companies](\r\n\t[CompanyID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[CompanyName] [nvarchar](max) NOT NULL,\r\n\t[Abbreviation] [nvarchar](max) NULL,\r\n\t[CompanyLogo] [nvarchar](max) NULL,\r\n\t[EnteredDate] [datetime2](7) NOT NULL,\r\n\t[Local_Foreign] [int] NULL,\r\n\t[Remark] [nvarchar](max) NULL,\r\n CONSTRAINT [PK_Companies] PRIMARY KEY CLUSTERED \r\n(\r\n\t[CompanyID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Companies' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[CompanyContracts]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='CompanyContracts' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[CompanyContracts]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[CompanyContracts](\r\n\t[ContractId] [int] IDENTITY(1,1) NOT NULL,\r\n\t[CompanyID] [int] NULL,\r\n\t[ContractNumber] [nvarchar](max) NOT NULL,\r\n\t[ContractDescription] [nvarchar](max) NOT NULL,\r\n\t[ContractRemark] [nvarchar](max) NOT NULL,\r\n\t[EnteredDate] [datetime2](7) NULL,\r\n\t[EditedBy] [int] NULL,\r\n\t[EditedDate] [datetime2](7) NULL,\r\n\t[EnteredBy] [int] NULL,\r\n CONSTRAINT [PK_CompanyContracts] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ContractId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='CompanyContracts' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[Desciplines]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Desciplines' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[Desciplines]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[Desciplines](\r\n\t[DesciplineId] [int] IDENTITY(1,1) NOT NULL,\r\n\t[DesciplineName] [nvarchar](200) NOT NULL,\r\n CONSTRAINT [PK_Desciplines] PRIMARY KEY CLUSTERED \r\n(\r\n\t[DesciplineId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Desciplines' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[DescriptionForPks]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='DescriptionForPks' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[DescriptionForPks]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[DescriptionForPks](\r\n\t[DescriptionForPkId] [int] IDENTITY(1,1) NOT NULL,\r\n\t[Description] [nvarchar](500) NOT NULL,\r\n CONSTRAINT [PK_DescriptionForPks] PRIMARY KEY CLUSTERED \r\n(\r\n\t[DescriptionForPkId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='DescriptionForPks' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[Inspection]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[Inspection]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[Inspection](\r\n\t[PLId] [int] NOT NULL,\r\n\t[IrnId] [int] NULL,\r\n\t[IRN_Conflict] [bit] NOT NULL,\r\n\t[IVR_NO] [nvarchar](100) NULL,\r\n\t[IVR_IFR] [nvarchar](100) NULL,\r\n\t[OrderStatus] [nvarchar](100) NULL,\r\n\t[ThirdParty] [bit] NOT NULL,\r\n\t[OPI] [bit] NOT NULL,\r\n\t[Description] [nvarchar](500) NULL,\r\n\t[IcNo] [nvarchar](50) NULL,\r\n\t[SubProject] [nvarchar](200) NULL,\r\n\t[Site] [bit] NOT NULL,\r\n\t[Laydown] [bit] NOT NULL,\r\n\t[Warehouse] [bit] NOT NULL,\r\n\t[OSBL] [bit] NOT NULL,\r\n\t[VisualInspection] [bit] NOT NULL,\r\n\t[QuantityCheck] [bit] NOT NULL,\r\n\t[Marking] [bit] NOT NULL,\r\n\t[Unloading] [bit] NOT NULL,\r\n\t[IVRPDF] [nvarchar](300) NULL,\r\n\t[IFRPDF] [nvarchar](300) NULL,\r\n\t[EnteredBy] [int] NULL,\r\n\t[EnteredDate] [datetime2](7) NULL,\r\n\t[EditedBy] [int] NULL,\r\n\t[EditedDate] [datetime2](7) NULL,\r\n CONSTRAINT [PK_Inspection] PRIMARY KEY CLUSTERED \r\n(\r\n\t[PLId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[Irns]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Irns' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[Irns]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[Irns](\r\n\t[IrnId] [int] IDENTITY(1,1) NOT NULL,\r\n\t[IrnName] [nvarchar](200) NOT NULL,\r\n\t[IrnDescription] [nvarchar](500) NULL,\r\n\t[IrnPdf] [nvarchar](max) NULL,\r\n\t[EnteredDate] [datetime2](7) NULL,\r\n CONSTRAINT [PK_Irns] PRIMARY KEY CLUSTERED \r\n(\r\n\t[IrnId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Irns' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[Locations]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Locations' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[Locations]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[Locations](\r\n\t[LocationID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[LocationName] [nvarchar](200) NOT NULL,\r\n\t[EnteredBy] [int] NULL,\r\n\t[EnteredDate] [datetime2](7) NULL,\r\n\t[EditedBy] [int] NULL,\r\n\t[EditedDate] [datetime2](7) NULL,\r\n\t[LocationWarehouse] [nvarchar](200) NULL,\r\n CONSTRAINT [PK_Locations] PRIMARY KEY CLUSTERED \r\n(\r\n\t[LocationID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Locations' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[LocItems]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='LocItems' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[LocItems]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[LocItems](\r\n\t[LocItemID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[LocationID] [int] NOT NULL,\r\n\t[ItemId] [int] NOT NULL,\r\n\t[Qty] [decimal](18, 2) NULL,\r\n\t[OverQty] [decimal](18, 2) NULL,\r\n\t[ShortageQty] [decimal](18, 2) NULL,\r\n\t[DamageQty] [decimal](18, 2) NULL,\r\n\t[RejectQty] [decimal](18, 2) NULL,\r\n\t[NISQty] [decimal](18, 2) NULL,\r\n\t[EnteredBy] [int] NULL,\r\n\t[EnteredDate] [date] NULL,\r\n\t[EditedBy] [int] NULL,\r\n\t[EditedDate] [date] NULL,\r\n\t[ParentLocItemID] [int] NULL,\r\n\t[RemarkLocitemID] [nvarchar](300) NULL,\r\n\t[FlagMIVorHMV] [tinyint] NULL,\r\n CONSTRAINT [PK_LocItems] PRIMARY KEY CLUSTERED \r\n(\r\n\t[LocItemID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='LocItems' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[MIVNumbers]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='MIVNumbers' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[MIVNumbers]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[MIVNumbers](\r\n\t[LastNumber] [int] NULL\r\n) ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='MIVNumbers' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[Mrs]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Mrs' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[Mrs]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[Mrs](\r\n\t[MrId] [int] IDENTITY(1,1) NOT NULL,\r\n\t[MrName] [nvarchar](100) NOT NULL,\r\n\t[MrDescription] [nvarchar](500) NULL,\r\n\t[EnteredDate] [datetime2](7) NULL,\r\n CONSTRAINT [PK_Mrs] PRIMARY KEY CLUSTERED \r\n(\r\n\t[MrId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Mrs' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[PackingLists]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[PackingLists]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[PackingLists](\r\n\t[PLId] [int] IDENTITY(1,1) NOT NULL,\r\n\t[ShId] [int] NULL,\r\n\t[MrId] [int] NULL,\r\n\t[PoId] [int] NULL,\r\n\t[IrnId] [int] NULL,\r\n\t[PLName] [nvarchar](300) NOT NULL,\r\n\t[ArchiveNO] [nvarchar](50) NULL,\r\n\t[PLNO] [nvarchar](50) NULL,\r\n\t[OPINO] [nvarchar](50) NULL,\r\n\t[Project] [nvarchar](50) NULL,\r\n\t[AreaUnitID] [int] NULL,\r\n\t[SupplierId] [int] NULL,\r\n\t[DesciplineId] [int] NULL,\r\n\t[VendorId] [int] NULL,\r\n\t[DescriptionForPkId] [int] NULL,\r\n\t[NetW] [decimal](18, 2) NULL,\r\n\t[GrossW] [decimal](18, 2) NULL,\r\n\t[Volume] [nvarchar](max) NULL,\r\n\t[Vessel] [nvarchar](max) NULL,\r\n\t[EnteredBy] [int] NULL,\r\n\t[EnteredDate] [datetime2](7) NULL,\r\n\t[MARDate] [datetime2](7) NULL,\r\n\t[Remark] [nvarchar](max) NULL,\r\n\t[LocalForeign] [int] NULL,\r\n\t[RTINO] [nvarchar](max) NULL,\r\n\t[InvoiceNO] [nvarchar](max) NULL,\r\n\t[IRCNO] [nvarchar](max) NULL,\r\n\t[LCNO] [nvarchar](max) NULL,\r\n\t[BLNO] [nvarchar](max) NULL,\r\n\t[Remarkcustoms] [nvarchar](max) NULL,\r\n\t[EditedBy] [int] NULL,\r\n\t[EditedDate] [datetime2](7) NULL,\r\n\t[PLDPF] [nvarchar](max) NULL,\r\n\t[Balance] [bit] NULL,\r\n\t[Attachment] [bit] NULL,\r\n\t[SitePL] [bit] NULL,\r\n CONSTRAINT [PK_PackingLists] PRIMARY KEY CLUSTERED \r\n(\r\n\t[PLId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[Pos]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Pos' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[Pos]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[Pos](\r\n\t[PoId] [int] IDENTITY(1,1) NOT NULL,\r\n\t[MrId] [int] NULL,\r\n\t[PoName] [nvarchar](150) NOT NULL,\r\n\t[PoDescription] [nvarchar](500) NULL,\r\n\t[EnteredDate] [datetime2](7) NULL,\r\n CONSTRAINT [PK_Pos] PRIMARY KEY CLUSTERED \r\n(\r\n\t[PoId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Pos' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[Requests]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Requests' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[Requests]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[Requests](\r\n\t[ReqLocItemID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[LocItemID] [int] NOT NULL,\r\n\t[CompanyID] [int] NULL,\r\n\t[CompanyID2] [int] NULL,\r\n\t[ContractId] [int] NULL,\r\n\t[ContractId2] [int] NULL,\r\n\t[AreaUnitID] [int] NULL,\r\n\t[VendorID] [int] NULL,\r\n\t[TypeID] [int] NULL,\r\n\t[RequestNO] [varchar](100) NOT NULL,\r\n\t[ReqDate] [date] NULL,\r\n\t[Item] [int] NULL,\r\n\t[ReqMivQty] [decimal](18, 2) NULL,\r\n\t[ReserveMivQty] [decimal](18, 2) NULL,\r\n\t[DelMivQty] [decimal](18, 2) NULL,\r\n\t[ReqMivRejQty] [decimal](18, 2) NULL,\r\n\t[ReserveMivRejQty] [decimal](18, 2) NULL,\r\n\t[DelMivRejQty] [decimal](18, 2) NULL,\r\n\t[ReqMrvQty] [decimal](18, 2) NULL,\r\n\t[DelMrvQty] [decimal](18, 2) NULL,\r\n\t[DelMrvRejQty] [decimal](18, 2) NULL,\r\n\t[ReqHmvQty] [decimal](18, 2) NULL,\r\n\t[DelHmvQty] [decimal](18, 2) NULL,\r\n\t[DelHmvRejQty] [decimal](18, 2) NULL,\r\n\t[IssuedBy] [int] NULL,\r\n\t[IssuedDate] [date] NULL,\r\n\t[ApprovedBy] [int] NULL,\r\n\t[ApprovedDate] [date] NULL,\r\n\t[DelDate] [date] NULL,\r\n\t[Remark] [nvarchar](max) NULL,\r\n\t[MRCNO] [nvarchar](max) NULL,\r\n\t[MRVNO] [nvarchar](max) NULL,\r\n\t[HMVNO] [nvarchar](max) NULL,\r\n\t[RequestPDF] [nvarchar](max) NULL,\r\n\t[RequestTypeTypeID] [int] NULL,\r\n\t[PLocItemIDforMRV] [int] NULL,\r\n CONSTRAINT [PK_Requests] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ReqLocItemID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Requests' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[RequestTypes]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='RequestTypes' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[RequestTypes]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[RequestTypes](\r\n\t[TypeID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[TypeName] [nvarchar](50) NOT NULL,\r\n CONSTRAINT [PK_RequestTypes] PRIMARY KEY CLUSTERED \r\n(\r\n\t[TypeID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='RequestTypes' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[Scopes]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Scopes' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[Scopes]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[Scopes](\r\n\t[ScopeID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[ScopeName] [nvarchar](100) NOT NULL,\r\n CONSTRAINT [PK_Scopes] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ScopeID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Scopes' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[Shipments]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Shipments' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[Shipments]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[Shipments](\r\n\t[ShipmentId] [int] IDENTITY(1,1) NOT NULL,\r\n\t[PoId] [int] NULL,\r\n\t[ShipmentName] [nvarchar](150) NOT NULL,\r\n\t[ShipmentDescription] [nvarchar](500) NULL,\r\n\t[EnteredDate] [datetime2](7) NULL,\r\n CONSTRAINT [PK_Shipments] PRIMARY KEY CLUSTERED \r\n(\r\n\t[ShipmentId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Shipments' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[Suppliers]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Suppliers' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[Suppliers]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[Suppliers](\r\n\t[SupplierId] [int] IDENTITY(1,1) NOT NULL,\r\n\t[SupplierName] [nvarchar](200) NOT NULL,\r\n\t[SupplierRemark] [nvarchar](500) NULL,\r\n\t[EnteredDate] [datetime2](7) NULL,\r\n CONSTRAINT [PK_Suppliers] PRIMARY KEY CLUSTERED \r\n(\r\n\t[SupplierId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Suppliers' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[UnitPrices]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='UnitPrices' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[UnitPrices]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[UnitPrices](\r\n\t[UnitPriceID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[UnitPriceName] [nvarchar](100) NOT NULL,\r\n CONSTRAINT [PK_UnitPrices] PRIMARY KEY CLUSTERED \r\n(\r\n\t[UnitPriceID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='UnitPrices' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[Units]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Units' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[Units]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[Units](\r\n\t[UnitID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[UnitName] [nvarchar](100) NOT NULL,\r\n CONSTRAINT [PK_Units] PRIMARY KEY CLUSTERED \r\n(\r\n\t[UnitID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Units' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [dbo].[Vendors]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Vendors' and @Schema='dbo']","object_type":"Table"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Table [dbo].[Vendors]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE TABLE [dbo].[Vendors](\r\n\t[VendorID] [int] IDENTITY(1,1) NOT NULL,\r\n\t[VendorName] [nvarchar](200) NOT NULL,\r\n\t[VendorContractNO] [nvarchar](500) NULL,\r\n\t[VendorContractDescription] [nvarchar](500) NULL,\r\n\t[VendorAbbreviation] [nvarchar](500) NULL,\r\n\t[EnteredDate] [datetime2](7) NULL,\r\n\t[Local_Foreign] [int] NULL,\r\n\t[Remark] [nvarchar](max) NULL,\r\n CONSTRAINT [PK_Vendors] PRIMARY KEY CLUSTERED \r\n(\r\n\t[VendorID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Vendors' and @Schema='dbo']","object_type":"Table"}},{"cell_type":"markdown","source":["# [IX_ApplicationUser_RoleID]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='ApplicationUser' and @Schema='dbo']/Index[@Name='IX_ApplicationUser_RoleID']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_ApplicationUser_RoleID]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_ApplicationUser_RoleID] ON [dbo].[ApplicationUser]\r\n(\r\n\t[RoleID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='ApplicationUser' and @Schema='dbo']/Index[@Name='IX_ApplicationUser_RoleID']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_CompanyContracts_CompanyID]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='CompanyContracts' and @Schema='dbo']/Index[@Name='IX_CompanyContracts_CompanyID']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_CompanyContracts_CompanyID]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_CompanyContracts_CompanyID] ON [dbo].[CompanyContracts]\r\n(\r\n\t[CompanyID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='CompanyContracts' and @Schema='dbo']/Index[@Name='IX_CompanyContracts_CompanyID']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_Inspection_IrnId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Index[@Name='IX_Inspection_IrnId']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_Inspection_IrnId]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_Inspection_IrnId] ON [dbo].[Inspection]\r\n(\r\n\t[IrnId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Index[@Name='IX_Inspection_IrnId']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_Inspection_IVR_NO]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Index[@Name='IX_Inspection_IVR_NO']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["SET ANSI_PADDING ON\r\nGO\r\n","/****** Object:  Index [IX_Inspection_IVR_NO]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_Inspection_IVR_NO] ON [dbo].[Inspection]\r\n(\r\n\t[IVR_NO] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Index[@Name='IX_Inspection_IVR_NO']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_Inspection_PLId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Index[@Name='IX_Inspection_PLId']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_Inspection_PLId]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_Inspection_PLId] ON [dbo].[Inspection]\r\n(\r\n\t[PLId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Index[@Name='IX_Inspection_PLId']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_Item_PKID]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Items' and @Schema='dbo']/Index[@Name='IX_Item_PKID']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_Item_PKID]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_Item_PKID] ON [dbo].[Items]\r\n(\r\n\t[PKID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Items' and @Schema='dbo']/Index[@Name='IX_Item_PKID']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_Item_ScopeID]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Items' and @Schema='dbo']/Index[@Name='IX_Item_ScopeID']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_Item_ScopeID]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_Item_ScopeID] ON [dbo].[Items]\r\n(\r\n\t[ScopeID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Items' and @Schema='dbo']/Index[@Name='IX_Item_ScopeID']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_Item_UnitID]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Items' and @Schema='dbo']/Index[@Name='IX_Item_UnitID']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_Item_UnitID]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_Item_UnitID] ON [dbo].[Items]\r\n(\r\n\t[UnitID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Items' and @Schema='dbo']/Index[@Name='IX_Item_UnitID']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_Item_UnitPriceID]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Items' and @Schema='dbo']/Index[@Name='IX_Item_UnitPriceID']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_Item_UnitPriceID]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_Item_UnitPriceID] ON [dbo].[Items]\r\n(\r\n\t[UnitPriceID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Items' and @Schema='dbo']/Index[@Name='IX_Item_UnitPriceID']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_Location_LocationName]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Locations' and @Schema='dbo']/Index[@Name='IX_Location_LocationName']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["SET ANSI_PADDING ON\r\nGO\r\n","/****** Object:  Index [IX_Location_LocationName]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_Location_LocationName] ON [dbo].[Locations]\r\n(\r\n\t[LocationName] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Locations' and @Schema='dbo']/Index[@Name='IX_Location_LocationName']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_LocItem_ItemId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='LocItems' and @Schema='dbo']/Index[@Name='IX_LocItem_ItemId']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_LocItem_ItemId]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_LocItem_ItemId] ON [dbo].[LocItems]\r\n(\r\n\t[ItemId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='LocItems' and @Schema='dbo']/Index[@Name='IX_LocItem_ItemId']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_LocItem_LocationID]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='LocItems' and @Schema='dbo']/Index[@Name='IX_LocItem_LocationID']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_LocItem_LocationID]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_LocItem_LocationID] ON [dbo].[LocItems]\r\n(\r\n\t[LocationID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='LocItems' and @Schema='dbo']/Index[@Name='IX_LocItem_LocationID']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_Package_MSRNO]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Packages' and @Schema='dbo']/Index[@Name='IX_Package_MSRNO']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["SET ANSI_PADDING ON\r\nGO\r\n","/****** Object:  Index [IX_Package_MSRNO]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_Package_MSRNO] ON [dbo].[Packages]\r\n(\r\n\t[MSRNO] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Packages' and @Schema='dbo']/Index[@Name='IX_Package_MSRNO']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_Package_PK]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Packages' and @Schema='dbo']/Index[@Name='IX_Package_PK']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_Package_PK]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_Package_PK] ON [dbo].[Packages]\r\n(\r\n\t[PK] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Packages' and @Schema='dbo']/Index[@Name='IX_Package_PK']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_Package_PLId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Packages' and @Schema='dbo']/Index[@Name='IX_Package_PLId']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_Package_PLId]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_Package_PLId] ON [dbo].[Packages]\r\n(\r\n\t[PLId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Packages' and @Schema='dbo']/Index[@Name='IX_Package_PLId']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_PackingList_ArchiveNO]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/Index[@Name='IX_PackingList_ArchiveNO']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["SET ANSI_PADDING ON\r\nGO\r\n","/****** Object:  Index [IX_PackingList_ArchiveNO]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_PackingList_ArchiveNO] ON [dbo].[PackingLists]\r\n(\r\n\t[ArchiveNO] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/Index[@Name='IX_PackingList_ArchiveNO']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_PackingList_AreaUnitID]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/Index[@Name='IX_PackingList_AreaUnitID']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_PackingList_AreaUnitID]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_PackingList_AreaUnitID] ON [dbo].[PackingLists]\r\n(\r\n\t[AreaUnitID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/Index[@Name='IX_PackingList_AreaUnitID']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_PackingList_DesciplineId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/Index[@Name='IX_PackingList_DesciplineId']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_PackingList_DesciplineId]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_PackingList_DesciplineId] ON [dbo].[PackingLists]\r\n(\r\n\t[DesciplineId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/Index[@Name='IX_PackingList_DesciplineId']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_PackingList_DescriptionForPkId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/Index[@Name='IX_PackingList_DescriptionForPkId']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_PackingList_DescriptionForPkId]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_PackingList_DescriptionForPkId] ON [dbo].[PackingLists]\r\n(\r\n\t[DescriptionForPkId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/Index[@Name='IX_PackingList_DescriptionForPkId']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_PackingList_IrnId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/Index[@Name='IX_PackingList_IrnId']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_PackingList_IrnId]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_PackingList_IrnId] ON [dbo].[PackingLists]\r\n(\r\n\t[IrnId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/Index[@Name='IX_PackingList_IrnId']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_PackingList_MrId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/Index[@Name='IX_PackingList_MrId']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_PackingList_MrId]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_PackingList_MrId] ON [dbo].[PackingLists]\r\n(\r\n\t[MrId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/Index[@Name='IX_PackingList_MrId']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_PackingList_OPINO]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/Index[@Name='IX_PackingList_OPINO']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["SET ANSI_PADDING ON\r\nGO\r\n","/****** Object:  Index [IX_PackingList_OPINO]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE UNIQUE NONCLUSTERED INDEX [IX_PackingList_OPINO] ON [dbo].[PackingLists]\r\n(\r\n\t[OPINO] ASC\r\n)\r\nWHERE ([OPINO] IS NOT NULL)\r\nWITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/Index[@Name='IX_PackingList_OPINO']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_PackingList_PLNO]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/Index[@Name='IX_PackingList_PLNO']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["SET ANSI_PADDING ON\r\nGO\r\n","/****** Object:  Index [IX_PackingList_PLNO]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE UNIQUE NONCLUSTERED INDEX [IX_PackingList_PLNO] ON [dbo].[PackingLists]\r\n(\r\n\t[PLNO] ASC\r\n)\r\nWHERE ([PLNO] IS NOT NULL)\r\nWITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, IGNORE_DUP_KEY = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/Index[@Name='IX_PackingList_PLNO']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_PackingList_PoId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/Index[@Name='IX_PackingList_PoId']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_PackingList_PoId]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_PackingList_PoId] ON [dbo].[PackingLists]\r\n(\r\n\t[PoId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/Index[@Name='IX_PackingList_PoId']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_PackingList_ShId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/Index[@Name='IX_PackingList_ShId']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_PackingList_ShId]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_PackingList_ShId] ON [dbo].[PackingLists]\r\n(\r\n\t[ShId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/Index[@Name='IX_PackingList_ShId']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_PackingList_SupplierId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/Index[@Name='IX_PackingList_SupplierId']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_PackingList_SupplierId]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_PackingList_SupplierId] ON [dbo].[PackingLists]\r\n(\r\n\t[SupplierId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/Index[@Name='IX_PackingList_SupplierId']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_PackingList_VendorId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/Index[@Name='IX_PackingList_VendorId']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_PackingList_VendorId]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_PackingList_VendorId] ON [dbo].[PackingLists]\r\n(\r\n\t[VendorId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/Index[@Name='IX_PackingList_VendorId']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_Pos_MrId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Pos' and @Schema='dbo']/Index[@Name='IX_Pos_MrId']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_Pos_MrId]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_Pos_MrId] ON [dbo].[Pos]\r\n(\r\n\t[MrId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Pos' and @Schema='dbo']/Index[@Name='IX_Pos_MrId']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_Request_CompanyID]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Requests' and @Schema='dbo']/Index[@Name='IX_Request_CompanyID']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_Request_CompanyID]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_Request_CompanyID] ON [dbo].[Requests]\r\n(\r\n\t[CompanyID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Requests' and @Schema='dbo']/Index[@Name='IX_Request_CompanyID']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_Request_LocItemID]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Requests' and @Schema='dbo']/Index[@Name='IX_Request_LocItemID']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_Request_LocItemID]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_Request_LocItemID] ON [dbo].[Requests]\r\n(\r\n\t[LocItemID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Requests' and @Schema='dbo']/Index[@Name='IX_Request_LocItemID']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_Request_TypeID]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Requests' and @Schema='dbo']/Index[@Name='IX_Request_TypeID']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_Request_TypeID]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_Request_TypeID] ON [dbo].[Requests]\r\n(\r\n\t[TypeID] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Requests' and @Schema='dbo']/Index[@Name='IX_Request_TypeID']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_RequestType_TypeName]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='RequestTypes' and @Schema='dbo']/Index[@Name='IX_RequestType_TypeName']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["SET ANSI_PADDING ON\r\nGO\r\n","/****** Object:  Index [IX_RequestType_TypeName]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_RequestType_TypeName] ON [dbo].[RequestTypes]\r\n(\r\n\t[TypeName] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='RequestTypes' and @Schema='dbo']/Index[@Name='IX_RequestType_TypeName']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_Scope_ScopeName]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Scopes' and @Schema='dbo']/Index[@Name='IX_Scope_ScopeName']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["SET ANSI_PADDING ON\r\nGO\r\n","/****** Object:  Index [IX_Scope_ScopeName]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_Scope_ScopeName] ON [dbo].[Scopes]\r\n(\r\n\t[ScopeName] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Scopes' and @Schema='dbo']/Index[@Name='IX_Scope_ScopeName']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_Shipments_PoId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Shipments' and @Schema='dbo']/Index[@Name='IX_Shipments_PoId']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  Index [IX_Shipments_PoId]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_Shipments_PoId] ON [dbo].[Shipments]\r\n(\r\n\t[PoId] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Shipments' and @Schema='dbo']/Index[@Name='IX_Shipments_PoId']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_UnitPrice_UnitPriceName]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='UnitPrices' and @Schema='dbo']/Index[@Name='IX_UnitPrice_UnitPriceName']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["SET ANSI_PADDING ON\r\nGO\r\n","/****** Object:  Index [IX_UnitPrice_UnitPriceName]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_UnitPrice_UnitPriceName] ON [dbo].[UnitPrices]\r\n(\r\n\t[UnitPriceName] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='UnitPrices' and @Schema='dbo']/Index[@Name='IX_UnitPrice_UnitPriceName']","object_type":"Index"}},{"cell_type":"markdown","source":["# [IX_Unit_UnitName]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Units' and @Schema='dbo']/Index[@Name='IX_Unit_UnitName']","object_type":"Index"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["SET ANSI_PADDING ON\r\nGO\r\n","/****** Object:  Index [IX_Unit_UnitName]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nCREATE NONCLUSTERED INDEX [IX_Unit_UnitName] ON [dbo].[Units]\r\n(\r\n\t[UnitName] ASC\r\n)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Units' and @Schema='dbo']/Index[@Name='IX_Unit_UnitName']","object_type":"Index"}},{"cell_type":"markdown","source":["# [DF__Inspectio__IRN_C__2759D01A]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Column[@Name='IRN_Conflict']/Default[@Name='DF__Inspectio__IRN_C__2759D01A']","object_type":"Default"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[Inspection] ADD  DEFAULT (CONVERT([bit],(0))) FOR [IRN_Conflict]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Column[@Name='IRN_Conflict']/Default[@Name='DF__Inspectio__IRN_C__2759D01A']","object_type":"Default"}},{"cell_type":"markdown","source":["# [DF__Inspectio__Third__284DF453]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Column[@Name='ThirdParty']/Default[@Name='DF__Inspectio__Third__284DF453']","object_type":"Default"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[Inspection] ADD  DEFAULT (CONVERT([bit],(0))) FOR [ThirdParty]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Column[@Name='ThirdParty']/Default[@Name='DF__Inspectio__Third__284DF453']","object_type":"Default"}},{"cell_type":"markdown","source":["# [DF__Inspection__OPI__2942188C]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Column[@Name='OPI']/Default[@Name='DF__Inspection__OPI__2942188C']","object_type":"Default"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[Inspection] ADD  DEFAULT (CONVERT([bit],(0))) FOR [OPI]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Column[@Name='OPI']/Default[@Name='DF__Inspection__OPI__2942188C']","object_type":"Default"}},{"cell_type":"markdown","source":["# [DF__Inspection__IcNo__369C13AA]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Column[@Name='IcNo']/Default[@Name='DF__Inspection__IcNo__369C13AA']","object_type":"Default"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[Inspection] ADD  DEFAULT (N'False') FOR [IcNo]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Column[@Name='IcNo']/Default[@Name='DF__Inspection__IcNo__369C13AA']","object_type":"Default"}},{"cell_type":"markdown","source":["# [DF__Inspection__Site__2B2A60FE]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Column[@Name='Site']/Default[@Name='DF__Inspection__Site__2B2A60FE']","object_type":"Default"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[Inspection] ADD  DEFAULT (CONVERT([bit],(0))) FOR [Site]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Column[@Name='Site']/Default[@Name='DF__Inspection__Site__2B2A60FE']","object_type":"Default"}},{"cell_type":"markdown","source":["# [DF__Inspectio__Laydo__2C1E8537]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Column[@Name='Laydown']/Default[@Name='DF__Inspectio__Laydo__2C1E8537']","object_type":"Default"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[Inspection] ADD  DEFAULT (CONVERT([bit],(0))) FOR [Laydown]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Column[@Name='Laydown']/Default[@Name='DF__Inspectio__Laydo__2C1E8537']","object_type":"Default"}},{"cell_type":"markdown","source":["# [DF__Inspectio__Wareh__2D12A970]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Column[@Name='Warehouse']/Default[@Name='DF__Inspectio__Wareh__2D12A970']","object_type":"Default"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[Inspection] ADD  DEFAULT (CONVERT([bit],(0))) FOR [Warehouse]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Column[@Name='Warehouse']/Default[@Name='DF__Inspectio__Wareh__2D12A970']","object_type":"Default"}},{"cell_type":"markdown","source":["# [DF__Inspection__OSBL__2E06CDA9]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Column[@Name='OSBL']/Default[@Name='DF__Inspection__OSBL__2E06CDA9']","object_type":"Default"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[Inspection] ADD  DEFAULT (CONVERT([bit],(0))) FOR [OSBL]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Column[@Name='OSBL']/Default[@Name='DF__Inspection__OSBL__2E06CDA9']","object_type":"Default"}},{"cell_type":"markdown","source":["# [DF__Inspectio__Visua__2EFAF1E2]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Column[@Name='VisualInspection']/Default[@Name='DF__Inspectio__Visua__2EFAF1E2']","object_type":"Default"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[Inspection] ADD  DEFAULT (CONVERT([bit],(0))) FOR [VisualInspection]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Column[@Name='VisualInspection']/Default[@Name='DF__Inspectio__Visua__2EFAF1E2']","object_type":"Default"}},{"cell_type":"markdown","source":["# [DF__Inspectio__Quant__2FEF161B]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Column[@Name='QuantityCheck']/Default[@Name='DF__Inspectio__Quant__2FEF161B']","object_type":"Default"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[Inspection] ADD  DEFAULT (CONVERT([bit],(0))) FOR [QuantityCheck]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Column[@Name='QuantityCheck']/Default[@Name='DF__Inspectio__Quant__2FEF161B']","object_type":"Default"}},{"cell_type":"markdown","source":["# [DF__Inspectio__Marki__30E33A54]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Column[@Name='Marking']/Default[@Name='DF__Inspectio__Marki__30E33A54']","object_type":"Default"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[Inspection] ADD  DEFAULT (CONVERT([bit],(0))) FOR [Marking]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Column[@Name='Marking']/Default[@Name='DF__Inspectio__Marki__30E33A54']","object_type":"Default"}},{"cell_type":"markdown","source":["# [DF__Inspectio__Unloa__31D75E8D]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Column[@Name='Unloading']/Default[@Name='DF__Inspectio__Unloa__31D75E8D']","object_type":"Default"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[Inspection] ADD  DEFAULT (CONVERT([bit],(0))) FOR [Unloading]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/Column[@Name='Unloading']/Default[@Name='DF__Inspectio__Unloa__31D75E8D']","object_type":"Default"}},{"cell_type":"markdown","source":["# [FK_ApplicationUser_ApplicationRole_RoleID]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='ApplicationUser' and @Schema='dbo']/ForeignKey[@Name='FK_ApplicationUser_ApplicationRole_RoleID']","object_type":"ForeignKey"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[ApplicationUser]  WITH CHECK ADD  CONSTRAINT [FK_ApplicationUser_ApplicationRole_RoleID] FOREIGN KEY([RoleID])\r\nREFERENCES [dbo].[ApplicationRole] ([RoleID])\r\n","GO\r\n","ALTER TABLE [dbo].[ApplicationUser] CHECK CONSTRAINT [FK_ApplicationUser_ApplicationRole_RoleID]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='ApplicationUser' and @Schema='dbo']/ForeignKey[@Name='FK_ApplicationUser_ApplicationRole_RoleID']","object_type":"ForeignKey"}},{"cell_type":"markdown","source":["# [FK_CompanyContracts_Companies_CompanyID]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='CompanyContracts' and @Schema='dbo']/ForeignKey[@Name='FK_CompanyContracts_Companies_CompanyID']","object_type":"ForeignKey"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[CompanyContracts]  WITH CHECK ADD  CONSTRAINT [FK_CompanyContracts_Companies_CompanyID] FOREIGN KEY([CompanyID])\r\nREFERENCES [dbo].[Companies] ([CompanyID])\r\n","GO\r\n","ALTER TABLE [dbo].[CompanyContracts] CHECK CONSTRAINT [FK_CompanyContracts_Companies_CompanyID]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='CompanyContracts' and @Schema='dbo']/ForeignKey[@Name='FK_CompanyContracts_Companies_CompanyID']","object_type":"ForeignKey"}},{"cell_type":"markdown","source":["# [FK_Inspection_PackingLists_PLId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/ForeignKey[@Name='FK_Inspection_PackingLists_PLId']","object_type":"ForeignKey"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[Inspection]  WITH CHECK ADD  CONSTRAINT [FK_Inspection_PackingLists_PLId] FOREIGN KEY([PLId])\r\nREFERENCES [dbo].[PackingLists] ([PLId])\r\nON DELETE CASCADE\r\n","GO\r\n","ALTER TABLE [dbo].[Inspection] CHECK CONSTRAINT [FK_Inspection_PackingLists_PLId]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Inspection' and @Schema='dbo']/ForeignKey[@Name='FK_Inspection_PackingLists_PLId']","object_type":"ForeignKey"}},{"cell_type":"markdown","source":["# [FK_Items_Packages_PKID]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Items' and @Schema='dbo']/ForeignKey[@Name='FK_Items_Packages_PKID']","object_type":"ForeignKey"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[Items]  WITH CHECK ADD  CONSTRAINT [FK_Items_Packages_PKID] FOREIGN KEY([PKID])\r\nREFERENCES [dbo].[Packages] ([PKID])\r\nON DELETE CASCADE\r\n","GO\r\n","ALTER TABLE [dbo].[Items] CHECK CONSTRAINT [FK_Items_Packages_PKID]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Items' and @Schema='dbo']/ForeignKey[@Name='FK_Items_Packages_PKID']","object_type":"ForeignKey"}},{"cell_type":"markdown","source":["# [FK_Items_Scopes_ScopeID]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Items' and @Schema='dbo']/ForeignKey[@Name='FK_Items_Scopes_ScopeID']","object_type":"ForeignKey"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[Items]  WITH CHECK ADD  CONSTRAINT [FK_Items_Scopes_ScopeID] FOREIGN KEY([ScopeID])\r\nREFERENCES [dbo].[Scopes] ([ScopeID])\r\nON DELETE SET NULL\r\n","GO\r\n","ALTER TABLE [dbo].[Items] CHECK CONSTRAINT [FK_Items_Scopes_ScopeID]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Items' and @Schema='dbo']/ForeignKey[@Name='FK_Items_Scopes_ScopeID']","object_type":"ForeignKey"}},{"cell_type":"markdown","source":["# [FK_Items_UnitPrices_UnitPriceID]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Items' and @Schema='dbo']/ForeignKey[@Name='FK_Items_UnitPrices_UnitPriceID']","object_type":"ForeignKey"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[Items]  WITH CHECK ADD  CONSTRAINT [FK_Items_UnitPrices_UnitPriceID] FOREIGN KEY([UnitPriceID])\r\nREFERENCES [dbo].[UnitPrices] ([UnitPriceID])\r\nON DELETE SET NULL\r\n","GO\r\n","ALTER TABLE [dbo].[Items] CHECK CONSTRAINT [FK_Items_UnitPrices_UnitPriceID]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Items' and @Schema='dbo']/ForeignKey[@Name='FK_Items_UnitPrices_UnitPriceID']","object_type":"ForeignKey"}},{"cell_type":"markdown","source":["# [FK_Items_Units_UnitID]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Items' and @Schema='dbo']/ForeignKey[@Name='FK_Items_Units_UnitID']","object_type":"ForeignKey"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[Items]  WITH CHECK ADD  CONSTRAINT [FK_Items_Units_UnitID] FOREIGN KEY([UnitID])\r\nREFERENCES [dbo].[Units] ([UnitID])\r\nON DELETE SET NULL\r\n","GO\r\n","ALTER TABLE [dbo].[Items] CHECK CONSTRAINT [FK_Items_Units_UnitID]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Items' and @Schema='dbo']/ForeignKey[@Name='FK_Items_Units_UnitID']","object_type":"ForeignKey"}},{"cell_type":"markdown","source":["# [FK_LocItems_Items_ItemId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='LocItems' and @Schema='dbo']/ForeignKey[@Name='FK_LocItems_Items_ItemId']","object_type":"ForeignKey"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[LocItems]  WITH CHECK ADD  CONSTRAINT [FK_LocItems_Items_ItemId] FOREIGN KEY([ItemId])\r\nREFERENCES [dbo].[Items] ([ItemId])\r\nON DELETE CASCADE\r\n","GO\r\n","ALTER TABLE [dbo].[LocItems] CHECK CONSTRAINT [FK_LocItems_Items_ItemId]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='LocItems' and @Schema='dbo']/ForeignKey[@Name='FK_LocItems_Items_ItemId']","object_type":"ForeignKey"}},{"cell_type":"markdown","source":["# [FK_LocItems_Locations_LocationID]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='LocItems' and @Schema='dbo']/ForeignKey[@Name='FK_LocItems_Locations_LocationID']","object_type":"ForeignKey"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[LocItems]  WITH CHECK ADD  CONSTRAINT [FK_LocItems_Locations_LocationID] FOREIGN KEY([LocationID])\r\nREFERENCES [dbo].[Locations] ([LocationID])\r\nON DELETE CASCADE\r\n","GO\r\n","ALTER TABLE [dbo].[LocItems] CHECK CONSTRAINT [FK_LocItems_Locations_LocationID]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='LocItems' and @Schema='dbo']/ForeignKey[@Name='FK_LocItems_Locations_LocationID']","object_type":"ForeignKey"}},{"cell_type":"markdown","source":["# [FK_Packages_PackingLists_PLId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Packages' and @Schema='dbo']/ForeignKey[@Name='FK_Packages_PackingLists_PLId']","object_type":"ForeignKey"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[Packages]  WITH CHECK ADD  CONSTRAINT [FK_Packages_PackingLists_PLId] FOREIGN KEY([PLId])\r\nREFERENCES [dbo].[PackingLists] ([PLId])\r\nON DELETE CASCADE\r\n","GO\r\n","ALTER TABLE [dbo].[Packages] CHECK CONSTRAINT [FK_Packages_PackingLists_PLId]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Packages' and @Schema='dbo']/ForeignKey[@Name='FK_Packages_PackingLists_PLId']","object_type":"ForeignKey"}},{"cell_type":"markdown","source":["# [FK_PackingLists_AreaUnits_AreaUnitID]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/ForeignKey[@Name='FK_PackingLists_AreaUnits_AreaUnitID']","object_type":"ForeignKey"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[PackingLists]  WITH CHECK ADD  CONSTRAINT [FK_PackingLists_AreaUnits_AreaUnitID] FOREIGN KEY([AreaUnitID])\r\nREFERENCES [dbo].[AreaUnits] ([AreaUnitID])\r\nON DELETE SET NULL\r\n","GO\r\n","ALTER TABLE [dbo].[PackingLists] CHECK CONSTRAINT [FK_PackingLists_AreaUnits_AreaUnitID]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/ForeignKey[@Name='FK_PackingLists_AreaUnits_AreaUnitID']","object_type":"ForeignKey"}},{"cell_type":"markdown","source":["# [FK_PackingLists_Desciplines_DesciplineId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/ForeignKey[@Name='FK_PackingLists_Desciplines_DesciplineId']","object_type":"ForeignKey"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[PackingLists]  WITH CHECK ADD  CONSTRAINT [FK_PackingLists_Desciplines_DesciplineId] FOREIGN KEY([DesciplineId])\r\nREFERENCES [dbo].[Desciplines] ([DesciplineId])\r\nON DELETE SET NULL\r\n","GO\r\n","ALTER TABLE [dbo].[PackingLists] CHECK CONSTRAINT [FK_PackingLists_Desciplines_DesciplineId]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/ForeignKey[@Name='FK_PackingLists_Desciplines_DesciplineId']","object_type":"ForeignKey"}},{"cell_type":"markdown","source":["# [FK_PackingLists_DescriptionForPks_DescriptionForPkId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/ForeignKey[@Name='FK_PackingLists_DescriptionForPks_DescriptionForPkId']","object_type":"ForeignKey"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[PackingLists]  WITH CHECK ADD  CONSTRAINT [FK_PackingLists_DescriptionForPks_DescriptionForPkId] FOREIGN KEY([DescriptionForPkId])\r\nREFERENCES [dbo].[DescriptionForPks] ([DescriptionForPkId])\r\nON DELETE SET NULL\r\n","GO\r\n","ALTER TABLE [dbo].[PackingLists] CHECK CONSTRAINT [FK_PackingLists_DescriptionForPks_DescriptionForPkId]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/ForeignKey[@Name='FK_PackingLists_DescriptionForPks_DescriptionForPkId']","object_type":"ForeignKey"}},{"cell_type":"markdown","source":["# [FK_PackingLists_Irns_IrnId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/ForeignKey[@Name='FK_PackingLists_Irns_IrnId']","object_type":"ForeignKey"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[PackingLists]  WITH CHECK ADD  CONSTRAINT [FK_PackingLists_Irns_IrnId] FOREIGN KEY([IrnId])\r\nREFERENCES [dbo].[Irns] ([IrnId])\r\nON DELETE SET NULL\r\n","GO\r\n","ALTER TABLE [dbo].[PackingLists] CHECK CONSTRAINT [FK_PackingLists_Irns_IrnId]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/ForeignKey[@Name='FK_PackingLists_Irns_IrnId']","object_type":"ForeignKey"}},{"cell_type":"markdown","source":["# [FK_PackingLists_Mrs_MrId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/ForeignKey[@Name='FK_PackingLists_Mrs_MrId']","object_type":"ForeignKey"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[PackingLists]  WITH CHECK ADD  CONSTRAINT [FK_PackingLists_Mrs_MrId] FOREIGN KEY([MrId])\r\nREFERENCES [dbo].[Mrs] ([MrId])\r\nON DELETE SET NULL\r\n","GO\r\n","ALTER TABLE [dbo].[PackingLists] CHECK CONSTRAINT [FK_PackingLists_Mrs_MrId]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/ForeignKey[@Name='FK_PackingLists_Mrs_MrId']","object_type":"ForeignKey"}},{"cell_type":"markdown","source":["# [FK_PackingLists_Pos_PoId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/ForeignKey[@Name='FK_PackingLists_Pos_PoId']","object_type":"ForeignKey"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[PackingLists]  WITH CHECK ADD  CONSTRAINT [FK_PackingLists_Pos_PoId] FOREIGN KEY([PoId])\r\nREFERENCES [dbo].[Pos] ([PoId])\r\nON DELETE SET NULL\r\n","GO\r\n","ALTER TABLE [dbo].[PackingLists] CHECK CONSTRAINT [FK_PackingLists_Pos_PoId]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/ForeignKey[@Name='FK_PackingLists_Pos_PoId']","object_type":"ForeignKey"}},{"cell_type":"markdown","source":["# [FK_PackingLists_Shipments_ShId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/ForeignKey[@Name='FK_PackingLists_Shipments_ShId']","object_type":"ForeignKey"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[PackingLists]  WITH CHECK ADD  CONSTRAINT [FK_PackingLists_Shipments_ShId] FOREIGN KEY([ShId])\r\nREFERENCES [dbo].[Shipments] ([ShipmentId])\r\nON DELETE SET NULL\r\n","GO\r\n","ALTER TABLE [dbo].[PackingLists] CHECK CONSTRAINT [FK_PackingLists_Shipments_ShId]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/ForeignKey[@Name='FK_PackingLists_Shipments_ShId']","object_type":"ForeignKey"}},{"cell_type":"markdown","source":["# [FK_PackingLists_Suppliers_SupplierId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/ForeignKey[@Name='FK_PackingLists_Suppliers_SupplierId']","object_type":"ForeignKey"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[PackingLists]  WITH CHECK ADD  CONSTRAINT [FK_PackingLists_Suppliers_SupplierId] FOREIGN KEY([SupplierId])\r\nREFERENCES [dbo].[Suppliers] ([SupplierId])\r\nON DELETE SET NULL\r\n","GO\r\n","ALTER TABLE [dbo].[PackingLists] CHECK CONSTRAINT [FK_PackingLists_Suppliers_SupplierId]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/ForeignKey[@Name='FK_PackingLists_Suppliers_SupplierId']","object_type":"ForeignKey"}},{"cell_type":"markdown","source":["# [FK_PackingLists_Vendors_VendorId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/ForeignKey[@Name='FK_PackingLists_Vendors_VendorId']","object_type":"ForeignKey"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[PackingLists]  WITH CHECK ADD  CONSTRAINT [FK_PackingLists_Vendors_VendorId] FOREIGN KEY([VendorId])\r\nREFERENCES [dbo].[Vendors] ([VendorID])\r\nON DELETE SET NULL\r\n","GO\r\n","ALTER TABLE [dbo].[PackingLists] CHECK CONSTRAINT [FK_PackingLists_Vendors_VendorId]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='PackingLists' and @Schema='dbo']/ForeignKey[@Name='FK_PackingLists_Vendors_VendorId']","object_type":"ForeignKey"}},{"cell_type":"markdown","source":["# [FK_Pos_Mrs_MrId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Pos' and @Schema='dbo']/ForeignKey[@Name='FK_Pos_Mrs_MrId']","object_type":"ForeignKey"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[Pos]  WITH CHECK ADD  CONSTRAINT [FK_Pos_Mrs_MrId] FOREIGN KEY([MrId])\r\nREFERENCES [dbo].[Mrs] ([MrId])\r\nON DELETE SET NULL\r\n","GO\r\n","ALTER TABLE [dbo].[Pos] CHECK CONSTRAINT [FK_Pos_Mrs_MrId]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Pos' and @Schema='dbo']/ForeignKey[@Name='FK_Pos_Mrs_MrId']","object_type":"ForeignKey"}},{"cell_type":"markdown","source":["# [FK_Requests_LocItems_LocItemID]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Requests' and @Schema='dbo']/ForeignKey[@Name='FK_Requests_LocItems_LocItemID']","object_type":"ForeignKey"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[Requests]  WITH CHECK ADD  CONSTRAINT [FK_Requests_LocItems_LocItemID] FOREIGN KEY([LocItemID])\r\nREFERENCES [dbo].[LocItems] ([LocItemID])\r\n","GO\r\n","ALTER TABLE [dbo].[Requests] CHECK CONSTRAINT [FK_Requests_LocItems_LocItemID]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Requests' and @Schema='dbo']/ForeignKey[@Name='FK_Requests_LocItems_LocItemID']","object_type":"ForeignKey"}},{"cell_type":"markdown","source":["# [FK_Requests_RequestTypes_RequestTypeTypeID]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Requests' and @Schema='dbo']/ForeignKey[@Name='FK_Requests_RequestTypes_RequestTypeTypeID']","object_type":"ForeignKey"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[Requests]  WITH CHECK ADD  CONSTRAINT [FK_Requests_RequestTypes_RequestTypeTypeID] FOREIGN KEY([RequestTypeTypeID])\r\nREFERENCES [dbo].[RequestTypes] ([TypeID])\r\n","GO\r\n","ALTER TABLE [dbo].[Requests] CHECK CONSTRAINT [FK_Requests_RequestTypes_RequestTypeTypeID]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Requests' and @Schema='dbo']/ForeignKey[@Name='FK_Requests_RequestTypes_RequestTypeTypeID']","object_type":"ForeignKey"}},{"cell_type":"markdown","source":["# [FK_Shipments_Pos_PoId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Shipments' and @Schema='dbo']/ForeignKey[@Name='FK_Shipments_Pos_PoId']","object_type":"ForeignKey"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER TABLE [dbo].[Shipments]  WITH CHECK ADD  CONSTRAINT [FK_Shipments_Pos_PoId] FOREIGN KEY([PoId])\r\nREFERENCES [dbo].[Pos] ([PoId])\r\nON DELETE SET NULL\r\n","GO\r\n","ALTER TABLE [dbo].[Shipments] CHECK CONSTRAINT [FK_Shipments_Pos_PoId]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Shipments' and @Schema='dbo']/ForeignKey[@Name='FK_Shipments_Pos_PoId']","object_type":"ForeignKey"}},{"cell_type":"markdown","source":["# [dbo].[AddItemsFromTempTable]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AddItemsFromTempTable' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[AddItemsFromTempTable]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[AddItemsFromTempTable]\r\n    @Items dbo.ItemTableType READONLY,\r\n    @PLId INT,\r\n    @LocationID INT,\r\n    @NewItemId INT OUTPUT -- Output parameter for new ItemId\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- مرحله اول: ایجاد یک جدول موقت برای ذخیره داده‌ها با IDهای منحصر به فرد\r\n    CREATE TABLE #TempItems\r\n    (\r\n        PKID INT,\r\n        Tag NVARCHAR(255),\r\n        Description NVARCHAR(255),\r\n        UnitID INT,\r\n        Qty DECIMAL(18, 2),\r\n        OverQty DECIMAL(18, 2),\r\n        ShortageQty DECIMAL(18, 2),\r\n        DamageQty DECIMAL(18, 2),\r\n        IncorectQty DECIMAL(18, 2),\r\n        ScopeID INT,\r\n        HeatNo NVARCHAR(255),\r\n        BatchNo NVARCHAR(255),\r\n        Remark NVARCHAR(255),\r\n        Price DECIMAL(18, 2),\r\n        UnitPriceID INT,\r\n        NetW DECIMAL(18, 2),\r\n        GrossW DECIMAL(18, 2),\r\n        BaseMaterial NVARCHAR(255)\r\n    );\r\n\r\n    -- مرحله دوم: درج داده‌ها به جدول موقت با استفاده از IDهای منحصر به فرد\r\n    INSERT INTO #TempItems\r\n    SELECT\r\n        ISNULL(p.PKID, 0) AS PKID,\r\n        ISNULL(i.Tag, '') AS Tag,\r\n        ISNULL(i.Description, '') AS Description,\r\n        ISNULL(u.UnitID, 1) AS UnitID, -- مقدار پیش‌فرض 1 برای UnitID\r\n        ISNULL(i.Qty, 0) AS Qty,\r\n        ISNULL(i.OverQty, 0) AS OverQty,\r\n        ISNULL(i.ShortageQty, 0) AS ShortageQty,\r\n        ISNULL(i.DamageQty, 0) AS DamageQty,\r\n        ISNULL(i.IncorectQty, 0) AS IncorectQty,\r\n        ISNULL(s.ScopeID, 1) AS ScopeID, -- مقدار پیش‌فرض 1 برای ScopeID\r\n        ISNULL(i.HeatNo, '') AS HeatNo,\r\n        ISNULL(i.BatchNo, '') AS BatchNo,\r\n        ISNULL(i.Remark, '') AS Remark,\r\n        ISNULL(i.Price, 0) AS Price,\r\n        ISNULL(up.UnitPriceID, 1) AS UnitPriceID, -- مقدار پیش‌فرض 1 برای UnitPriceID\r\n        ISNULL(i.NetW, 0) AS NetW,\r\n        ISNULL(i.GrossW, 0) AS GrossW,\r\n        ISNULL(i.BaseMaterial, '') AS BaseMaterial\r\n    FROM @Items i\r\n    JOIN dbo.Packages p ON i.PK = p.PK AND p.PLId = @PLId\r\n    LEFT JOIN dbo.Units u ON i.UnitID = u.UnitName\r\n    LEFT JOIN dbo.Scopes s ON i.ScopeID = s.ScopeName\r\n    LEFT JOIN dbo.UnitPrices up ON i.UnitPriceID = up.UnitPriceName\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM dbo.Packages p\r\n        WHERE i.PK = p.PK AND p.PLId = @PLId\r\n    );\r\n\r\n    -- تنظیم LocationID برای استفاده در تریگر\r\n    EXEC sp_set_session_context @key = 'LocationID', @value = @LocationID;\r\n\r\n    -- مرحله سوم: درج داده‌ها به جدول مقصد\r\n    INSERT INTO dbo.Items\r\n    (\r\n        PKID,\r\n        ItemOfPk,\r\n        Tag,\r\n        Description,\r\n        UnitID,\r\n        Qty,\r\n        OverQty,\r\n        ShortageQty,\r\n        DamageQty,\r\n        IncorectQty,\r\n        ScopeID,\r\n        HeatNo,\r\n        BatchNo,\r\n        Remark,\r\n        Price,\r\n        UnitPriceID,\r\n        NetW,\r\n        GrossW,\r\n        BaseMaterial,\r\n        Hold\r\n    )\r\n    SELECT\r\n        PKID,\r\n        ROW_NUMBER() OVER (PARTITION BY PKID ORDER BY PKID) AS ItemOfPk,\r\n        Tag,\r\n        Description,\r\n        UnitID,\r\n        Qty,\r\n        OverQty,\r\n        ShortageQty,\r\n        DamageQty,\r\n        IncorectQty,\r\n        ScopeID,\r\n        HeatNo,\r\n        BatchNo,\r\n        Remark,\r\n        Price,\r\n        UnitPriceID,\r\n        NetW,\r\n        GrossW,\r\n        BaseMaterial,\r\n        0 -- مقدار پیش‌فرض برای Hold\r\n    FROM #TempItems;\r\n\r\n    -- بدست آوردن آیتم جدید ItemId\r\n    SET @NewItemId = SCOPE_IDENTITY();\r\n\r\n    -- مرحله چهارم: پاکسازی جدول موقت\r\n    DROP TABLE #TempItems;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AddItemsFromTempTable' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[AddItemsFromTempTable2]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AddItemsFromTempTable2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[AddItemsFromTempTable2]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","create PROCEDURE [dbo].[AddItemsFromTempTable2]\r\n    @Items dbo.ItemTableType READONLY,\r\n    @PLId INT,\r\n    @LocationID INT,\r\n    @NewItemId INT OUTPUT\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- تنظیم LocationID برای استفاده در تریگر\r\n    EXEC sp_set_session_context @key = 'LocationID', @value = @LocationID;\r\n\r\n    -- درج داده‌ها به جدول مقصد\r\n    INSERT INTO dbo.Items\r\n    (\r\n        PKID,\r\n        ItemOfPk,\r\n        Tag,\r\n        Description,\r\n        UnitID,\r\n        Qty,\r\n        OverQty,\r\n        ShortageQty,\r\n        DamageQty,\r\n        IncorectQty,\r\n        ScopeID,\r\n        HeatNo,\r\n        BatchNo,\r\n        Remark,\r\n        Price,\r\n        UnitPriceID,\r\n        NetW,\r\n        GrossW,\r\n        BaseMaterial,\r\n        Hold\r\n    )\r\n    SELECT\r\n        ISNULL(p.PKID, 0) AS PKID,\r\n        ROW_NUMBER() OVER (PARTITION BY p.PKID ORDER BY p.PKID) AS ItemOfPk,\r\n        ISNULL(i.Tag, '') AS Tag,\r\n        ISNULL(i.Description, '') AS Description,\r\n        ISNULL(u.UnitID, 1) AS UnitID, -- مقدار پیش‌فرض 1 برای UnitID\r\n        ISNULL(i.Qty, 0) AS Qty,\r\n        ISNULL(i.OverQty, 0) AS OverQty,\r\n        ISNULL(i.ShortageQty, 0) AS ShortageQty,\r\n        ISNULL(i.DamageQty, 0) AS DamageQty,\r\n        ISNULL(i.IncorectQty, 0) AS IncorectQty,\r\n        ISNULL(s.ScopeID, 1) AS ScopeID, -- مقدار پیش‌فرض 1 برای ScopeID\r\n        ISNULL(i.HeatNo, '') AS HeatNo,\r\n        ISNULL(i.BatchNo, '') AS BatchNo,\r\n        ISNULL(i.Remark, '') AS Remark,\r\n        ISNULL(i.Price, 0) AS Price,\r\n        ISNULL(up.UnitPriceID, 1) AS UnitPriceID, -- مقدار پیش‌فرض 1 برای UnitPriceID\r\n        ISNULL(i.NetW, 0) AS NetW,\r\n        ISNULL(i.GrossW, 0) AS GrossW,\r\n        ISNULL(i.BaseMaterial, '') AS BaseMaterial,\r\n        0 -- مقدار پیش‌فرض برای Hold\r\n    FROM @Items i\r\n    JOIN dbo.Packages p ON i.PK = p.PK AND p.PLId = @PLId\r\n    LEFT JOIN dbo.Units u ON i.UnitID = u.UnitName\r\n    LEFT JOIN dbo.Scopes s ON i.ScopeID = s.ScopeName\r\n    LEFT JOIN dbo.UnitPrices up ON i.UnitPriceID = up.UnitPriceName\r\n    WHERE EXISTS (\r\n        SELECT 1\r\n        FROM dbo.Packages p\r\n        WHERE i.PK = p.PK AND p.PLId = @PLId\r\n    );\r\n\r\n    -- بدست آوردن آیتم جدید ItemId\r\n    SET @NewItemId = SCOPE_IDENTITY();\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AddItemsFromTempTable2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[AddLocItem]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AddLocItem' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[AddLocItem]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[AddLocItem]\r\n    @LocationID INT,\r\n    @ItemId INT,\r\n    @Qty DECIMAL(18, 2),\r\n    @OverQty DECIMAL(18, 2),\r\n    @ShortageQty DECIMAL(18, 2),\r\n    @DamageQty DECIMAL(18, 2),\r\n    @RejectQty DECIMAL(18, 2),\r\n    @NISQty DECIMAL(18, 2),\r\n    @EnteredBy INT,\r\n    @EnteredDate DATETIME\r\nAS\r\nBEGIN\r\n    INSERT INTO LocItems (LocationID, ItemId, Qty, OverQty, ShortageQty, DamageQty, RejectQty, NISQty, EnteredBy, EnteredDate)\r\n    VALUES (@LocationID, @ItemId, @Qty, @OverQty, @ShortageQty, @DamageQty, @RejectQty, @NISQty, @EnteredBy, @EnteredDate)\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AddLocItem' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[AddPackage]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AddPackage' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[AddPackage]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[AddPackage]\r\n    @PLId INT,\r\n    @PK INT,\r\n    @NetW DECIMAL(18,2),\r\n    @GrossW DECIMAL(18,2),\r\n    @Dimension VARCHAR(50),\r\n    @Volume DECIMAL(18,2),\r\n    @ArrivalDate DATETIME,\r\n    @Desciption NVARCHAR(MAX),\r\n    @Remark NVARCHAR(MAX),\r\n    @EnteredBy NVARCHAR(50),\r\n    @EnteredDate DATETIME,\r\n    @EditedBy NVARCHAR(50),\r\n    @EditedDate DATETIME,\r\n    @MSRNO NVARCHAR(50),\r\n    @MSRPDF NVARCHAR(50),\r\n    @MSRDate DATETIME,\r\n    @MSREnteredBy NVARCHAR(50),\r\n    @MSRStatus NVARCHAR(50),\r\n    @MSRRev INT,\r\n    @MSRRevEnteredBy NVARCHAR(50),\r\n    @MSRRevDate DATETIME\r\nAS\r\nBEGIN\r\n    INSERT INTO Packages (PLId, PK, NetW, GrossW, Dimension, Volume, ArrivalDate, Desciption, Remark, EnteredBy, EnteredDate, EditedBy, EditedDate, MSRNO, MSRPDF, MSRDate, MSREnteredBy, MSRStatus, MSRRev, MSRRevEnteredBy, MSRRevDate)\r\n    VALUES (@PLId, @PK, @NetW, @GrossW, @Dimension, @Volume, @ArrivalDate, @Desciption, @Remark, @EnteredBy, @EnteredDate, @EditedBy, @EditedDate, @MSRNO, @MSRPDF, @MSRDate, @MSREnteredBy, @MSRStatus, @MSRRev, @MSRRevEnteredBy, @MSRRevDate);\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AddPackage' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[AddPackagesFromTempTable]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AddPackagesFromTempTable' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[AddPackagesFromTempTable]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","create PROCEDURE [dbo].[AddPackagesFromTempTable]\r\n    @Packages dbo.PackageType READONLY\r\nAS\r\nBEGIN\r\n    -- افزودن بسته‌ها به جدول اصلی packages در صورتی که از قبل وجود نداشته باشند\r\n    INSERT INTO packages (PK, NetW, GrossW, Dimension, Volume, ArrivalDate, Desciption, Remark, PLId, EnteredBy, EnteredDate)\r\n    SELECT pk.PK, pk.NetW, pk.GrossW, pk.Dimension, pk.Volume, pk.ArrivalDate, pk.Desciption, pk.Remark, pk.PLId, pk.EnteredBy, pk.EnteredDate\r\n    FROM @Packages pk\r\n    LEFT JOIN packages p ON pk.PK = p.PK AND pk.PLId = p.PLId\r\n    WHERE p.PK IS NULL AND EXISTS (\r\n        SELECT 1\r\n        FROM packinglists pl\r\n        WHERE pk.PLId = pl.PLId\r\n    );\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AddPackagesFromTempTable' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[AddPackingList]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AddPackingList' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[AddPackingList]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","\r\nCREATE PROCEDURE [dbo].[AddPackingList]\r\n    @ShId INT = NULL,\r\n    @MrId INT = NULL,\r\n    @PoId INT = NULL,\r\n    @IrnId INT = NULL,\r\n    @PLName NVARCHAR(200),\r\n    @ArchiveNO NVARCHAR(255) = NULL,\r\n    @PLNO NVARCHAR(255) = NULL,\r\n    @OPINO NVARCHAR(255) = NULL,\r\n    @Project NVARCHAR(255) = NULL,\r\n    @AreaUnitID INT = NULL,\r\n    @SupplierId INT = NULL,\r\n    @DesciplineId INT = NULL,\r\n    @VendorId INT = NULL,\r\n    @DescriptionForPkId INT = NULL,\r\n    @NetW DECIMAL(18, 2) = NULL,\r\n    @GrossW DECIMAL(18, 2) = NULL,\r\n    @Volume NVARCHAR(255) = NULL,\r\n    @Vessel NVARCHAR(255) = NULL,\r\n    @EnteredBy INT = NULL,\r\n    @EnteredDate DATETIME = NULL,\r\n    @MARDate DATETIME = NULL,\r\n    @Remark NVARCHAR(255) = NULL,\r\n    @LocalForeign INT = NULL,\r\n    @RTINO NVARCHAR(255) = NULL,\r\n    @InvoiceNO NVARCHAR(255) = NULL,\r\n    @IRCNO NVARCHAR(255) = NULL,\r\n    @LCNO NVARCHAR(255) = NULL,\r\n    @BLNO NVARCHAR(255) = NULL,\r\n    @Remarkcustoms NVARCHAR(255) = NULL,\r\n    @EditedBy INT = NULL,\r\n    @EditedDate DATETIME = NULL,\r\n    @PLDPF NVARCHAR(255) = NULL,\r\n    @Balance BIT = NULL,\r\n    @Attachment BIT = NULL,\r\n    @SitePL BIT = NULL\r\nAS\r\nBEGIN\r\n    INSERT INTO PackingLists (\r\n        ShId, MrId, PoId, IrnId, PLName, ArchiveNO, PLNO, OPINO, Project,\r\n        AreaUnitID, SupplierId, DesciplineId, VendorId, DescriptionForPkId, NetW,\r\n        GrossW, Volume, Vessel, EnteredBy, EnteredDate, MARDate, Remark, LocalForeign,\r\n        RTINO, InvoiceNO, IRCNO, LCNO, BLNO, Remarkcustoms, EditedBy, EditedDate,\r\n        PLDPF, Balance, Attachment, SitePL\r\n    ) VALUES (\r\n        @ShId, @MrId, @PoId, @IrnId, @PLName, @ArchiveNO, @PLNO, @OPINO, @Project,\r\n        @AreaUnitID, @SupplierId, @DesciplineId, @VendorId, @DescriptionForPkId, @NetW,\r\n        @GrossW, @Volume, @Vessel, @EnteredBy, @EnteredDate, @MARDate, @Remark, @LocalForeign,\r\n        @RTINO, @InvoiceNO, @IRCNO, @LCNO, @BLNO, @Remarkcustoms, @EditedBy, @EditedDate,\r\n        @PLDPF, @Balance, @Attachment, @SitePL\r\n    );\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AddPackingList' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[ALLHmvinfo]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='ALLHmvinfo' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[ALLHmvinfo]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[ALLHmvinfo]\r\n    @RequestNO INT\r\nAS\r\nBEGIN\r\n    SELECT TOP 1 \r\n        Requests.RequestNO, \r\n        Requests.HMVNO, \r\n        Companies.CompanyName AS fromCompanyName, \r\n        Companies2.CompanyName AS toCompanyName\r\n    FROM Requests \r\n    INNER JOIN Companies ON Requests.CompanyID = Companies.CompanyID\r\n    INNER JOIN Companies AS Companies2 ON Requests.CompanyID2 = Companies2.CompanyID\r\n    WHERE (Requests.TypeID = 3) AND (RequestNO = @RequestNO)\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='ALLHmvinfo' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[ALLHmvs]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='ALLHmvs' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[ALLHmvs]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","create PROCEDURE [dbo].[ALLHmvs]\r\nAS\r\nBEGIN\r\nSELECT DISTINCT RequestNO\r\nFROM Requests\r\nWHERE TypeID=3;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='ALLHmvs' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[AllItemSelectedPl]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AllItemSelectedPl' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[AllItemSelectedPl]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[AllItemSelectedPl]\r\n    @PLId INT\r\nAS\r\nBEGIN\r\n    -- انتخاب فیلدهای ضروری از جداول مربوطه\r\nSELECT Packages.PKID, Packages.PLId, Packages.PK, LocItems.LocItemID, LocItems.LocationID, LocItems.Qty, LocItems.OverQty, LocItems.ShortageQty, LocItems.DamageQty, LocItems.RejectQty, LocItems.NISQty, Items.ItemId, Items.ItemOfPk, \r\n                  Items.Tag, Items.Description, Items.UnitID, Items.Qty AS QtyPL, Items.OverQty AS OverQtyPL, Items.ShortageQty AS ShortageQtyPL, Items.DamageQty AS DamageQtyPL, Items.IncorectQty, Items.ScopeID, Items.Remark, Items.Hold, \r\n                  Items.NIS, Items.HeatNo, Items.BatchNo, Items.StorageCode, Packages.ArrivalDate, Packages.MSRNO, Packages.MSRPDF, Items.NetW, Items.GrossW\r\nFROM     Packages INNER JOIN\r\n                  Items ON Packages.PKID = Items.PKID INNER JOIN\r\n                  LocItems ON Items.ItemId = LocItems.ItemId\r\n    WHERE \r\n        Packages.PLId = @PLId\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AllItemSelectedPl' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[AllMaterialMrvable]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AllMaterialMrvable' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[AllMaterialMrvable]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[AllMaterialMrvable]\r\n    @CompanyID INT\r\nAS\r\nBEGIN\r\n     SET NOCOUNT ON;\r\n\r\n        WITH FilteredRequests AS (\r\n    SELECT \r\n        ReqLocItemID, \r\n        LocItemID, \r\n        CompanyID, \r\n        ContractId, \r\n        RequestNO, \r\n        ReqDate, \r\n        Item, \r\n        ReqMivQty, \r\n        ReserveMivQty, \r\n        DelMivQty, \r\n        ReqMivRejQty, \r\n        ReserveMivRejQty, \r\n        DelMivRejQty, \r\n        ReqMrvQty, \r\n        DelMrvQty, \r\n        DelMrvRejQty, \r\n        IssuedBy, \r\n        IssuedDate, \r\n        MRCNO, \r\n        MRVNO, \r\n        TypeID\r\n    FROM Requests\r\n    WHERE \r\n        ReserveMivQty = 0 \r\n        AND DelMivQty > 0 \r\n        AND CompanyID = @CompanyID \r\n        AND TypeID IN (1, 2)\r\n)\r\nSELECT \r\n    fr.ReqLocItemID, \r\n    li.LocItemID, \r\n    i.ItemId, \r\n    p.PK, \r\n    pl.PLName, \r\n    c.CompanyID, \r\n\ti.Tag,\r\n\ti.Description,\r\n    cc.ContractId, \r\n    cc.ContractNumber, \r\n    fr.RequestNO, \r\n    fr.ReqDate, \r\n    fr.Item, \r\n    fr.ReqMivQty, \r\n    fr.ReserveMivQty, \r\n    fr.DelMivQty, \r\n    fr.ReqMivRejQty, \r\n    fr.ReserveMivRejQty, \r\n    fr.DelMivRejQty, \r\n    fr.ReqMrvQty, \r\n    fr.DelMrvQty, \r\n    fr.DelMrvRejQty, \r\n    fr.IssuedBy, \r\n    fr.IssuedDate, \r\n    fr.MRCNO, \r\n    fr.MRVNO, \r\n    u.UnitName, \r\n    l.LocationName, \r\n    fr.TypeID\r\nFROM     \r\n    LocItems li\r\n    INNER JOIN Items i ON li.ItemId = i.ItemId \r\n    INNER JOIN Locations l ON li.LocationID = l.LocationID \r\n    INNER JOIN FilteredRequests fr ON li.LocItemID = fr.LocItemID \r\n    INNER JOIN Units u ON i.UnitID = u.UnitID \r\n    INNER JOIN Packages p ON i.PKID = p.PKID \r\n    INNER JOIN PackingLists pl ON p.PLId = pl.PLId \r\n    INNER JOIN CompanyContracts cc ON fr.ContractId = cc.ContractId \r\n    INNER JOIN Companies c ON fr.CompanyID = c.CompanyID\r\nGROUP BY \r\n    fr.ReqLocItemID, li.LocItemID, i.ItemId, p.PK, pl.PLName, c.CompanyID, \r\n    cc.ContractId, cc.ContractNumber, fr.RequestNO, fr.ReqDate, fr.Item, \r\n    fr.ReqMivQty, fr.ReserveMivQty, fr.DelMivQty, fr.ReqMivRejQty, \r\n    fr.ReserveMivRejQty, fr.DelMivRejQty, fr.ReqMrvQty, fr.DelMrvQty, \r\n    fr.DelMrvRejQty,fr.IssuedBy, fr.IssuedDate, fr.MRCNO, fr.MRVNO,\r\n    u.UnitName, l.LocationName, fr.TypeID,\ti.Tag,\r\n\ti.Description\r\nHAVING \r\n    SUM(COALESCE(fr.DelMrvQty, 0))+SUM(COALESCE(fr.DelMrvRejQty, 0)) < SUM(COALESCE(fr.DelMivQty, 0))+SUM(COALESCE(fr.DelMivRejQty, 0));\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AllMaterialMrvable' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[AllMaterialMrvable2]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AllMaterialMrvable2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[AllMaterialMrvable2]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[AllMaterialMrvable2]\r\n    @CompanyID INT\r\nAS\r\nBEGIN\r\n     SET NOCOUNT ON;\r\nSELECT \r\n    Requests.LocItemID, \r\n\tItems.ItemId, \r\n    Items.Tag, \r\n    Items.Description, \r\n    Units.UnitName,\r\n    SUM(COALESCE(Requests.ReqMivQty, 0)) AS TotalReqMivQty, \r\n    SUM(COALESCE(Requests.ReserveMivQty, 0)) AS TotalReserveMivQty, \r\n    SUM(COALESCE(Requests.DelMivQty, 0)) AS TotalDelMivQty, \r\n    SUM(COALESCE(Requests.ReqMivRejQty, 0)) AS TotalReqMivRejQty, \r\n    SUM(COALESCE(Requests.ReserveMivRejQty, 0)) AS TotalReserveMivRejQty, \r\n    SUM(COALESCE(Requests.DelMivRejQty, 0)) AS TotalDelMivRejQty, \r\n    (SUM(COALESCE(Requests.DelMivQty, 0)) + SUM(COALESCE(Requests.DelMivRejQty, 0))) - \r\n     (SUM(COALESCE(Requests.DelMrvQty, 0)) + SUM(COALESCE(Requests.DelMrvRejQty, 0))) AS MrvAvailableQty, \r\n    SUM(COALESCE(Requests.ReqMrvQty, 0)) AS TotalReqMrvQty, \r\n    SUM(COALESCE(Requests.DelMrvQty, 0)) AS TotalDelMrvQty, \r\n    SUM(COALESCE(Requests.DelMrvRejQty, 0)) AS TotalDelMrvRejQty\r\nFROM \r\n    Requests \r\nINNER JOIN\r\n    LocItems ON Requests.LocItemID = LocItems.LocItemID \r\nINNER JOIN\r\n    Items ON LocItems.ItemId = Items.ItemId \r\nINNER JOIN\r\n    Units ON Items.UnitID = Units.UnitID\r\nWHERE  \r\n    Requests.CompanyID = @CompanyID \r\n    AND (Requests.TypeID = 2 OR Requests.TypeID = 1)\r\nGROUP BY \r\n    Requests.LocItemID, Items.ItemId, Items.Tag, Items.Description, Units.UnitName\r\nHAVING \r\n    SUM(COALESCE(DelMivQty, 0)) > 0 OR SUM(COALESCE(DelMivRejQty, 0)) > 0; \r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AllMaterialMrvable2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[AllMaterialMrvable3]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AllMaterialMrvable3' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[AllMaterialMrvable3]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[AllMaterialMrvable3]\r\n    @CompanyID INT\r\nAS\r\nBEGIN\r\n     SET NOCOUNT ON;\r\nSELECT \r\n    Requests.LocItemID, \r\n\tRequests.RequestNO,\r\n\tItems.ItemId, \r\n    Items.Tag, \r\n    Items.Description, \r\n    Units.UnitName,\r\n    SUM(COALESCE(Requests.ReqMivQty, 0)) AS TotalReqMivQty, \r\n    SUM(COALESCE(Requests.ReserveMivQty, 0)) AS TotalReserveMivQty, \r\n    SUM(COALESCE(Requests.DelMivQty, 0)) AS TotalDelMivQty, \r\n    SUM(COALESCE(Requests.ReqMivRejQty, 0)) AS TotalReqMivRejQty, \r\n    SUM(COALESCE(Requests.ReserveMivRejQty, 0)) AS TotalReserveMivRejQty, \r\n    SUM(COALESCE(Requests.DelMivRejQty, 0)) AS TotalDelMivRejQty, \r\n    (SUM(COALESCE(Requests.DelMivQty, 0)) + SUM(COALESCE(Requests.DelMivRejQty, 0))) - \r\n     (SUM(COALESCE(Requests.DelMrvQty, 0)) + SUM(COALESCE(Requests.DelMrvRejQty, 0))) AS MrvAvailableQty, \r\n    SUM(COALESCE(Requests.ReqMrvQty, 0)) AS TotalReqMrvQty, \r\n    SUM(COALESCE(Requests.DelMrvQty, 0)) AS TotalDelMrvQty, \r\n    SUM(COALESCE(Requests.DelMrvRejQty, 0)) AS TotalDelMrvRejQty\r\nFROM \r\n    Requests \r\nINNER JOIN\r\n    LocItems ON Requests.LocItemID = LocItems.LocItemID \r\nINNER JOIN\r\n    Items ON LocItems.ItemId = Items.ItemId \r\nINNER JOIN\r\n    Units ON Items.UnitID = Units.UnitID\r\nWHERE  \r\n    Requests.CompanyID = @CompanyID \r\n    AND (Requests.TypeID = 2 OR Requests.TypeID = 1)\r\nGROUP BY \r\n    Requests.LocItemID, Items.ItemId, Items.Tag, Items.Description, Units.UnitName,Requests.RequestNO\r\nHAVING \r\n   SUM(COALESCE(DelMivQty, 0)) > 0 OR SUM(COALESCE(DelMivRejQty, 0)) > 0; \r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AllMaterialMrvable3' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[AllMaterialMrvable4]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AllMaterialMrvable4' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[AllMaterialMrvable4]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[AllMaterialMrvable4]\r\n    @CompanyID INT\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- برای گرفتن اطلاعات MIV (TypeID = 1) که DelQty آنها بیشتر از صفر است\r\n    WITH MivData AS (\r\n        SELECT \r\n            Requests.LocItemID, \r\n            Requests.RequestNO,\r\n            Items.ItemId, \r\n            Items.Tag, \r\n            Items.Description, \r\n            Units.UnitName,\r\n            SUM(COALESCE(Requests.DelMivQty, 0)) AS TotalDelMivQty, \r\n            SUM(COALESCE(Requests.DelMivRejQty, 0)) AS TotalDelMivRejQty,\r\n\t\t    SUM(COALESCE(Requests.DelMrvRejQty, 0)) AS TotalDelMrvRejQty\r\n        FROM \r\n            Requests \r\n        INNER JOIN\r\n            LocItems ON Requests.LocItemID = LocItems.LocItemID \r\n        INNER JOIN\r\n            Items ON LocItems.ItemId = Items.ItemId \r\n        INNER JOIN\r\n            Units ON Items.UnitID = Units.UnitID\r\n        WHERE  \r\n            Requests.CompanyID = @CompanyID \r\n            AND Requests.TypeID = 1  -- فقط MIV ها (TypeID = 1)\r\n        GROUP BY \r\n            Requests.LocItemID, Items.ItemId, Items.Tag, Items.Description, Units.UnitName, Requests.RequestNO\r\n        HAVING \r\n            SUM(COALESCE(Requests.DelMivQty, 0)) > 0  -- فقط مواردی که DelQty آنها بزرگتر از صفر است\r\n    )\r\n\r\n    -- برای گرفتن اطلاعات MRV (TypeID = 2)\r\n    SELECT \r\n        m.LocItemID, \r\n        m.RequestNO,\r\n        m.ItemId, \r\n        m.Tag, \r\n        m.Description, \r\n        m.UnitName,\r\n        m.TotalDelMivQty, \r\n        m.TotalDelMivRejQty, \r\n        ((m.TotalDelMivQty + m.TotalDelMivRejQty) - (SUM(COALESCE(r.DelMrvQty, 0))+SUM(COALESCE(r.DelMrvRejQty, 0)))) AS MrvAvailableQty,  -- کم کردن MRV ها\r\n        SUM(COALESCE(r.ReqMrvQty, 0)*-1) AS TotalReqMrvQty, \r\n        SUM(COALESCE(r.DelMrvQty, 0)*-1) AS TotalDelMrvQty,\r\n\t\tSUM(COALESCE(r.DelMrvRejQty, 0)*-1) AS TotalDelMrvRejQty\r\n\t\t--SUM(COALESCE(r.ReqMivQty, 0)) AS TotalReqMivQty, \r\n\t\t--SUM(COALESCE(r.ReserveMivQty, 0)) AS TotalReserveMivQty, \r\n\t\t--SUM(COALESCE(r.ReqMivRejQty, 0)) AS TotalReqMivRejQty, \r\n\t\t--SUM(COALESCE(r.ReserveMivRejQty, 0)) AS TotalReserveMivRejQty\r\n\t\tFROM \r\n        MivData m\r\n    LEFT JOIN \r\n        Requests r ON m.LocItemID = r.LocItemID \r\n                  AND m.RequestNO = r.MRCNO  -- بر اساس RequestNO و LocItemID همسان‌سازی می‌شود\r\n                  AND r.TypeID = 2  -- فقط MRV ها (TypeID = 2)\r\n    GROUP BY \r\n        m.LocItemID, m.RequestNO, m.ItemId, m.Tag, m.Description, m.UnitName, m.TotalDelMivQty,m.TotalDelMivRejQty\r\n    --HAVING \r\n    --    (m.TotalDelMivQty + m.TotalDelMivRejQty) - \r\n    --    (SUM(COALESCE(r.DelMrvQty, 0))) > 0;  -- فقط مواردی که موجودی آنها بیشتر از صفر است\r\n\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AllMaterialMrvable4' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[AllMaterialMrvHmvable]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AllMaterialMrvHmvable' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[AllMaterialMrvHmvable]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","\r\nCREATE PROCEDURE [dbo].[AllMaterialMrvHmvable]\r\n    @CompanyID INT\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- CTE to calculate MIV data (TypeID = 1)\r\n    WITH MivData AS (\r\n        SELECT \r\n            Requests.CompanyID,\r\n            Requests.LocItemID, \r\n            Requests.RequestNO,\r\n            Items.ItemId, \r\n            Items.Tag, \r\n            Items.Description, \r\n            Units.UnitName,\r\n            SUM(COALESCE(Requests.DelMivQty, 0)) AS TotalDelMivQty, \r\n            SUM(COALESCE(Requests.DelMivRejQty, 0)) AS TotalDelMivRejQty\r\n        FROM \r\n            Requests \r\n        INNER JOIN\r\n            LocItems ON Requests.LocItemID = LocItems.LocItemID \r\n        INNER JOIN\r\n            Items ON LocItems.ItemId = Items.ItemId \r\n        INNER JOIN\r\n            Units ON Items.UnitID = Units.UnitID\r\n      --  INNER JOIN \r\n\t\t    --RequestTypes ON Requests.TypeID=RequestTypes.TypeID\r\n        WHERE  \r\n            Requests.CompanyID = @CompanyID \r\n            AND Requests.TypeID = 1  -- Filter for MIV data (TypeID = 1)\r\n        GROUP BY \r\n            Requests.CompanyID, \r\n            Requests.LocItemID, \r\n            Items.ItemId, \r\n            Items.Tag, \r\n            Items.Description, \r\n            Units.UnitName, \r\n            Requests.RequestNO\r\n        HAVING \r\n            SUM(COALESCE(Requests.DelMivQty, 0)) > 0\r\n    ),\r\n\r\n    -- Separate CTE to calculate HMV data (TypeID = 3)\r\n    HmvData AS (\r\n        SELECT \r\n            HMVRequests.LocItemID,\r\n            HMVRequests.MRCNO,\r\n            SUM(COALESCE(HMVRequests.DelHmvQty, 0)) AS TotalGetHmvQty,\r\n            SUM(COALESCE(HMVRequests.DelHmvRejQty, 0)) AS TotalGetHmvRejQty\r\n        FROM \r\n            Requests AS HMVRequests\r\n        WHERE \r\n            HMVRequests.TypeID = 3  -- Filter for HMV data (TypeID = 3)\r\n            AND HMVRequests.CompanyID2 = @CompanyID\r\n        GROUP BY \r\n            HMVRequests.LocItemID,\r\n            HMVRequests.MRCNO\r\n    )\r\n\r\n    -- Main query joining MivData and HmvData CTEs\r\n    SELECT \r\n        m.LocItemID, \r\n\t\th.LocItemID,\r\n        m.RequestNO,\r\n\t\t\r\n        m.ItemId, \r\n        m.Tag, \r\n        m.Description, \r\n        m.UnitName,\r\n        m.TotalDelMivQty, \r\n        m.TotalDelMivRejQty, \r\n        ((m.TotalDelMivQty + m.TotalDelMivRejQty + COALESCE(h.TotalGetHmvQty, 0) + COALESCE(h.TotalGetHmvRejQty, 0))) \r\n            - (SUM(COALESCE(r.DelMrvQty, 0)) + SUM(COALESCE(r.DelMrvRejQty, 0)) + SUM(COALESCE(hmv.DelHmvQty, 0)) + SUM(COALESCE(hmv.DelHmvRejQty, 0))) AS MrvHmvAvailableQty,  \r\n        SUM(COALESCE(r.ReqMrvQty, 0) * -1) AS TotalReqMrvQty, \r\n        SUM(COALESCE(r.DelMrvQty, 0) * -1) AS TotalDelMrvQty,\r\n        SUM(COALESCE(r.DelMrvRejQty, 0) * -1) AS TotalDelMrvRejQty,\r\n        SUM(COALESCE(hmv.DelHmvQty, 0) * -1) AS TotalDelHmvQty,\r\n        SUM(COALESCE(hmv.DelHmvRejQty, 0) * -1) AS TotalDelHmvRejQty,\r\n        COALESCE(h.TotalGetHmvQty, 0) AS TotalGetHmvQty,  \r\n        COALESCE(h.TotalGetHmvRejQty, 0) AS TotalGetHmvRejQty  \r\n    FROM \r\n        MivData m\r\n    full JOIN \r\n        HmvData h ON m.LocItemID = h.LocItemID AND m.RequestNO = h.MRCNO\r\n    LEFT JOIN \r\n        Requests r ON m.LocItemID = r.LocItemID\r\n            AND m.RequestNO = r.MRCNO  \r\n            AND m.CompanyID = @CompanyID\r\n            AND r.TypeID = 2  -- MRV data (TypeID = 2)\r\n    LEFT JOIN \r\n        Requests hmv ON m.LocItemID = hmv.LocItemID\r\n            AND m.RequestNO = hmv.MRCNO  \r\n            AND m.CompanyID = @CompanyID\r\n            AND hmv.TypeID = 3  -- HMV data (TypeID = 3)\r\n    GROUP BY \r\n        m.LocItemID,h.LocItemID, m.RequestNO, m.ItemId, m.Tag, m.Description, m.UnitName, \r\n        m.TotalDelMivQty, m.TotalDelMivRejQty, h.TotalGetHmvQty, h.TotalGetHmvRejQty\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AllMaterialMrvHmvable' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[AllMaterialMrvHmvable_old]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AllMaterialMrvHmvable_old' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[AllMaterialMrvHmvable_old]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","create PROCEDURE [dbo].[AllMaterialMrvHmvable_old]\r\n    @CompanyID INT\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- ????? ??????? MIV (TypeID = 1) ? HMV (TypeID = 3) ?? DelQty ???? ????? ?? ??? ???\r\n    WITH MivData AS (\r\n        SELECT \r\n            Requests.CompanyID,\r\n            Requests.LocItemID, \r\n            Requests.RequestNO,\r\n            Items.ItemId, \r\n            Items.Tag, \r\n            Items.Description, \r\n            Units.UnitName,\r\n            SUM(COALESCE(Requests.DelMivQty, 0)) AS TotalDelMivQty, \r\n            SUM(COALESCE(Requests.DelMivRejQty, 0)) AS TotalDelMivRejQty,\r\n            --SUM(COALESCE(Requests.DelMrvRejQty, 0)) AS TotalDelMrvRejQty,\r\n            SUM(COALESCE(HMVRequests.DelHmvQty, 0)) AS TotalGetHmvQty,  -- ????? ???? DelHmvQty\r\n            SUM(COALESCE(HMVRequests.DelHmvRejQty, 0)) AS TotalGetHmvRejQty  -- ????? ???? DelHmvRejQty\r\n        FROM \r\n            Requests \r\n        INNER JOIN\r\n            LocItems ON Requests.LocItemID = LocItems.LocItemID \r\n        INNER JOIN\r\n            Items ON LocItems.ItemId = Items.ItemId \r\n        INNER JOIN\r\n            Units ON Items.UnitID = Units.UnitID\r\n        full outer JOIN \r\n            Requests AS HMVRequests ON Requests.LocItemID = HMVRequests.LocItemID\r\n                                  AND Requests.RequestNO = HMVRequests.MRCNO\r\n                                   AND HMVRequests.TypeID = 3  -- ??? HMV ?? (TypeID = 3)\r\n                                   AND HMVRequests.CompanyID2 = @CompanyID  -- ????????? ?? CompanyID2 ???? ????? ?? @CompanyID ???\r\n        WHERE  \r\n            Requests.CompanyID = @CompanyID \r\n            AND (Requests.TypeID = 1 or Requests.TypeID = 3) -- ??? MIV ?? (TypeID = 1)\r\n        GROUP BY \r\n            Requests.CompanyID,  -- ????? ???? CompanyID ?? ?????????\r\n            Requests.LocItemID, \r\n            Items.ItemId, \r\n            Items.Tag, \r\n            Items.Description, \r\n            Units.UnitName, \r\n            Requests.RequestNO\r\n        HAVING \r\n            SUM(COALESCE(Requests.DelMivQty, 0)) > 0 or  SUM(COALESCE(HMVRequests.DelHmvQty, 0)) > 0 -- ??? ?????? ?? DelQty ???? ?????? ?? ??? ???\r\n    )\r\n\r\n    -- ????? ??????? MRV (TypeID = 2) ? HMV (TypeID = 3) ? ?????? ?????? ???? ?????\r\n    SELECT \r\n        m.LocItemID, \r\n        m.RequestNO,\r\n        m.ItemId, \r\n        m.Tag, \r\n        m.Description, \r\n        m.UnitName,\r\n        m.TotalDelMivQty, \r\n        m.TotalDelMivRejQty, \r\n        ((m.TotalDelMivQty + m.TotalDelMivRejQty + COALESCE(m.TotalGetHmvQty, 0) + COALESCE(m.TotalGetHmvRejQty, 0))) \r\n\t\t- (SUM(COALESCE(r.DelMrvQty, 0)) + SUM(COALESCE(r.DelMrvRejQty, 0))+ SUM(COALESCE(h.DelHmvQty, 0))+ SUM(COALESCE(h.DelHmvRejQty, 0))) AS MrvHmvAvailableQty,  -- ?? ???? MRV ? HMV\r\n        SUM(COALESCE(r.ReqMrvQty, 0)*-1) AS TotalReqMrvQty, \r\n        SUM(COALESCE(r.DelMrvQty, 0)*-1) AS TotalDelMrvQty,\r\n        SUM(COALESCE(r.DelMrvRejQty, 0)*-1) AS TotalDelMrvRejQty,\r\n\t    SUM(COALESCE(h.DelHmvQty, 0)*-1) AS TotalDelHmvQty,\r\n\t\tSUM(COALESCE(h.DelHmvRejQty, 0)*-1) AS TotalDelHmvRejQty,\r\n\r\n\r\n        COALESCE(m.TotalGetHmvQty, 0) AS TotalGetHmvQty,  -- ????? HMV\r\n        COALESCE(m.TotalGetHmvRejQty, 0) AS TotalGetlHmvRejQty  -- ????? HMV Rej\r\n    FROM \r\n        MivData m\r\n    LEFT JOIN \r\n        Requests r ON m.LocItemID = r.LocItemID\r\n\t\t          AND m.RequestNO = r.MRCNO  -- ?? ???? RequestNO ? LocItemID ?????????? ??????\r\n                  AND m.CompanyID=@CompanyID\r\n\t\t\t\t  AND r.TypeID = 2  -- ??? MRV ?? (TypeID = 2)\r\n    LEFT JOIN \r\n        Requests h ON m.LocItemID = h.LocItemID\r\n                  AND m.RequestNO = h.MRCNO  -- ?? ???? RequestNO ? LocItemID ?????????? ??????\r\n                  AND m.CompanyID=@CompanyID\r\n\t\t\t\t  AND h.TypeID = 3  -- ??? HMV ?? (TypeID = 3)\r\n    GROUP BY \r\n        m.LocItemID, m.RequestNO, m.ItemId, m.Tag, m.Description, m.UnitName, m.TotalDelMivQty, m.TotalDelMivRejQty, m.TotalGetHmvQty, m.TotalGetHmvRejQty\r\n\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AllMaterialMrvHmvable_old' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[AllMaterialMrvHmvable2]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AllMaterialMrvHmvable2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[AllMaterialMrvHmvable2]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[AllMaterialMrvHmvable2]\r\n    @CompanyID INT\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- CTE to calculate MIV data (TypeID = 1)\r\n    WITH MivData AS (\r\n        SELECT \r\n            Requests.CompanyID,\r\n            Requests.TypeID,\r\n            Requests.LocItemID, \r\n            Requests.RequestNO,\r\n            Items.ItemId, \r\n            Items.Tag, \r\n            Items.Description, \r\n            Units.UnitName,\r\n            SUM(COALESCE(Requests.DelMivQty, 0)) AS TotalDelMivQty, \r\n            SUM(COALESCE(Requests.DelMivRejQty, 0)) AS TotalDelMivRejQty\r\n        FROM \r\n            Requests \r\n        INNER JOIN\r\n            LocItems ON Requests.LocItemID = LocItems.LocItemID \r\n        INNER JOIN\r\n            Items ON LocItems.ItemId = Items.ItemId \r\n        INNER JOIN\r\n            Units ON Items.UnitID = Units.UnitID\r\n        WHERE  \r\n            Requests.CompanyID = @CompanyID \r\n            AND Requests.TypeID = 1  -- Filter for MIV data (TypeID = 1)\r\n        GROUP BY \r\n            Requests.CompanyID, \r\n            Requests.LocItemID, \r\n            Requests.TypeID,\r\n            Items.ItemId, \r\n            Items.Tag, \r\n            Items.Description, \r\n            Units.UnitName, \r\n            Requests.RequestNO\r\n        HAVING \r\n            SUM(COALESCE(Requests.DelMivQty, 0)) > 0\r\n    )\r\n\r\n    -- Main query joining MivData and HmvData with FULL JOIN to include all records from both\r\n    SELECT \r\n        COALESCE(m.LocItemID, h.LocItemID) AS LocItemID, \r\n        --CASE \r\n        --    WHEN m.TypeID = 1 THEN 'MIV-' + CAST(m.RequestNO AS VARCHAR)\r\n        --    WHEN h.TypeID = 3 THEN 'HMV-' + CAST(h.RequestNO AS VARCHAR)\r\n        --    ELSE NULL\r\n        --END AS RequestNO,\r\n\t\tCOALESCE(m.RequestNO, h.RequestNO) AS RequestNO, \r\n        CASE \r\n            WHEN COALESCE(m.TypeID, h.TypeID) = 1 THEN 'MIV'\r\n            WHEN COALESCE(m.TypeID, h.TypeID) = 3 THEN 'HMV'\r\n            ELSE NULL\r\n        END AS TypeName,\r\n        COALESCE(m.ItemId, h.ItemId) AS ItemId, \r\n        COALESCE(m.Tag, h.Tag) AS Tag, \r\n        COALESCE(m.Description, h.Description) AS Description, \r\n        COALESCE(m.UnitName, h.UnitName) AS UnitName,\r\n        COALESCE(m.TotalDelMivQty, h.TotalGetHmvQty, 0) AS TotalDelMivQty,  \r\n        COALESCE(m.TotalDelMivRejQty, h.TotalGetHmvRejQty, 0) AS TotalDelMivRejQty, \r\n        ((COALESCE(m.TotalDelMivQty, 0) + COALESCE(m.TotalDelMivRejQty, 0) + COALESCE(h.TotalGetHmvQty, 0) + COALESCE(h.TotalGetHmvRejQty, 0))) \r\n            - (SUM(COALESCE(r.DelMrvQty, 0)) + SUM(COALESCE(r.DelMrvRejQty, 0)) + SUM(COALESCE(hmv.DelHmvQty, 0)) + SUM(COALESCE(hmv.DelHmvRejQty, 0))) AS MrvHmvAvailableQty,  \r\n        SUM(COALESCE(r.ReqMrvQty, 0) * -1) AS TotalReqMrvQty, \r\n        SUM(COALESCE(r.DelMrvQty, 0) * -1) AS TotalDelMrvQty,\r\n        SUM(COALESCE(r.DelMrvRejQty, 0) * -1) AS TotalDelMrvRejQty,\r\n        SUM(COALESCE(hmv.DelHmvQty, 0) * -1) AS TotalDelHmvQty,\r\n        SUM(COALESCE(hmv.DelHmvRejQty, 0) * -1) AS TotalDelHmvRejQty,\r\n        COALESCE(h.TotalGetHmvQty, 0) AS TotalGetHmvQty,  \r\n        COALESCE(h.TotalGetHmvRejQty, 0) AS TotalGetHmvRejQty  \r\n    FROM \r\n        MivData m\r\n    FULL JOIN \r\n        (SELECT \r\n            HMVRequests.LocItemID,\r\n            HMVRequests.RequestNO,\r\n            HMVRequests.TypeID,\r\n            HMVRequests.MRCNO,\r\n            Items.ItemId,\r\n            Items.Tag,\r\n            Items.Description,\r\n            Units.UnitName,\r\n            SUM(COALESCE(HMVRequests.DelHmvQty, 0)) AS TotalGetHmvQty,\r\n            SUM(COALESCE(HMVRequests.DelHmvRejQty, 0)) AS TotalGetHmvRejQty\r\n         FROM \r\n            Requests AS HMVRequests\r\n         INNER JOIN \r\n            LocItems ON HMVRequests.LocItemID = LocItems.LocItemID\r\n         INNER JOIN \r\n            Items ON LocItems.ItemId = Items.ItemId\r\n         INNER JOIN \r\n            Units ON Items.UnitID = Units.UnitID\r\n         WHERE \r\n            HMVRequests.TypeID = 3  \r\n            AND HMVRequests.CompanyID2 = @CompanyID\r\n         GROUP BY \r\n            HMVRequests.LocItemID,\r\n            HMVRequests.MRCNO,\r\n            HMVRequests.RequestNO,\r\n            HMVRequests.TypeID,\r\n            Items.ItemId,\r\n            Items.Tag,\r\n            Items.Description,\r\n            Units.UnitName\r\n        ) h ON m.LocItemID = h.LocItemID AND m.RequestNO = h.MRCNO\r\n    LEFT JOIN \r\n        Requests r ON COALESCE(m.LocItemID, h.LocItemID) = r.LocItemID\r\n            AND COALESCE(m.RequestNO, h.MRCNO) = r.MRCNO  \r\n            AND r.CompanyID = @CompanyID\r\n            AND r.TypeID = 2  -- MRV data (TypeID = 2)\r\n    LEFT JOIN \r\n        Requests hmv ON COALESCE(m.LocItemID, h.LocItemID) = hmv.LocItemID\r\n            AND COALESCE(m.RequestNO, h.MRCNO) = hmv.MRCNO  \r\n            AND hmv.CompanyID = @CompanyID\r\n            AND hmv.TypeID = 3  -- HMV data (TypeID = 3)\r\n    GROUP BY \r\n        COALESCE(m.LocItemID, h.LocItemID), \r\n        --CASE \r\n        --    WHEN m.TypeID = 1 THEN 'MIV-' + CAST(m.RequestNO AS VARCHAR)\r\n        --    WHEN h.TypeID = 3 THEN 'HMV-' + CAST(h.RequestNO AS VARCHAR)\r\n        --    ELSE NULL\r\n        --END,\r\n\t\tCOALESCE(m.RequestNO, h.RequestNO),\r\n        CASE \r\n            WHEN COALESCE(m.TypeID, h.TypeID) = 1 THEN 'MIV'\r\n            WHEN COALESCE(m.TypeID, h.TypeID) = 3 THEN 'HMV'\r\n            ELSE NULL\r\n        END,\r\n        COALESCE(m.ItemId, h.ItemId), \r\n        COALESCE(m.Tag, h.Tag), \r\n        COALESCE(m.Description, h.Description), \r\n        COALESCE(m.UnitName, h.UnitName), \r\n        m.TotalDelMivQty, \r\n        m.TotalDelMivRejQty, \r\n        h.TotalGetHmvQty, \r\n        h.TotalGetHmvRejQty\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AllMaterialMrvHmvable2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[AllMaterialMrvHmvable2025]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AllMaterialMrvHmvable2025' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[AllMaterialMrvHmvable2025]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[AllMaterialMrvHmvable2025]\r\n    @CompanyID INT\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- CTE to calculate MIV data (TypeID = 1)\r\n    WITH MivData AS (\r\n        SELECT \r\n            Requests.CompanyID,\r\n            Requests.TypeID,\r\n            Requests.LocItemID, \r\n            Requests.RequestNO,\r\n            Items.ItemId, \r\n            Items.Tag, \r\n            Items.Description, \r\n            Units.UnitName,\r\n            SUM(COALESCE(Requests.DelMivQty, 0)) AS TotalDelMivQty, \r\n            SUM(COALESCE(Requests.DelMivRejQty, 0)) AS TotalDelMivRejQty\r\n        FROM \r\n            Requests \r\n        INNER JOIN\r\n            LocItems ON Requests.LocItemID = LocItems.LocItemID \r\n        INNER JOIN\r\n            Items ON LocItems.ItemId = Items.ItemId \r\n        INNER JOIN\r\n            Units ON Items.UnitID = Units.UnitID\r\n        WHERE  \r\n            Requests.CompanyID = @CompanyID \r\n            AND Requests.TypeID = 1  -- Filter for MIV data (TypeID = 1)\r\n        GROUP BY \r\n            Requests.CompanyID, \r\n            Requests.LocItemID, \r\n            Requests.TypeID,\r\n            Items.ItemId, \r\n            Items.Tag, \r\n            Items.Description, \r\n            Units.UnitName, \r\n            Requests.RequestNO\r\n        HAVING \r\n            SUM(COALESCE(Requests.DelMivQty, 0)) > 0\r\n    )\r\n\r\n    -- Main query joining MivData and HmvData with FULL JOIN to include all records from both\r\n    SELECT \r\n        COALESCE(m.LocItemID, h.LocItemID) AS LocItemID, \r\n        --CASE \r\n        --    WHEN m.TypeID = 1 THEN 'MIV-' + CAST(m.RequestNO AS VARCHAR)\r\n        --    WHEN h.TypeID = 3 THEN 'HMV-' + CAST(h.RequestNO AS VARCHAR)\r\n        --    ELSE NULL\r\n        --END AS RequestNO,\r\n\t\tCOALESCE(m.RequestNO, h.RequestNO) AS RequestNO, \r\n        CASE \r\n            WHEN COALESCE(m.TypeID, h.TypeID) = 1 THEN 'MIV'\r\n            WHEN COALESCE(m.TypeID, h.TypeID) = 3 THEN 'HMV'\r\n            ELSE NULL\r\n        END AS TypeName,\r\n        COALESCE(m.ItemId, h.ItemId) AS ItemId, \r\n        COALESCE(m.Tag, h.Tag) AS Tag, \r\n        COALESCE(m.Description, h.Description) AS Description, \r\n        COALESCE(m.UnitName, h.UnitName) AS UnitName,\r\n        COALESCE(m.TotalDelMivQty, h.TotalGetHmvQty, 0) AS TotalDelMivQty,  \r\n        COALESCE(m.TotalDelMivRejQty, h.TotalGetHmvRejQty, 0) AS TotalDelMivRejQty, \r\n        ((COALESCE(m.TotalDelMivQty, 0) + COALESCE(m.TotalDelMivRejQty, 0) \r\n\t\t+ COALESCE(h.TotalGetHmvQty, 0) + COALESCE(h.TotalGetHmvRejQty, 0))) \r\n        - (SUM(COALESCE(r.DelMrvQty, 0)) + SUM(COALESCE(r.DelMrvRejQty, 0)) \r\n\t\t+ SUM(COALESCE(hmv.DelHmvQty, 0)) + SUM(COALESCE(hmv.DelHmvRejQty, 0)) \r\n\t\t+ SUM(COALESCE(hmv2.DelMrvQty, 0)) + SUM(COALESCE(hmv2.DelMrvRejQty, 0))) AS MrvHmvAvailableQty, \r\n\t\t--+ SUM(COALESCE(hmv2.DelHmvQty, 0)) + SUM(COALESCE(hmv2.DelHmvRejQty, 0))) AS MrvHmvAvailableQty,  \r\n        SUM(COALESCE(r.ReqMrvQty, 0) * -1) AS TotalReqMrvQty, \r\n        SUM(COALESCE(r.DelMrvQty,hmv2.DelMrvQty, 0) * -1) AS TotalDelMrvQty,\r\n        SUM(COALESCE(r.DelMrvRejQty,hmv2.DelMrvRejQty, 0) * -1) AS TotalDelMrvRejQty,\r\n        SUM(COALESCE(hmv.DelHmvQty, 0) * -1) AS TotalDelHmvQty,\r\n        SUM(COALESCE(hmv.DelHmvRejQty, 0) * -1) AS TotalDelHmvRejQty,\r\n        COALESCE(h.TotalGetHmvQty, 0) AS TotalGetHmvQty,  \r\n        COALESCE(h.TotalGetHmvRejQty, 0) AS TotalGetHmvRejQty  \r\n    FROM \r\n        MivData m\r\n    FULL JOIN \r\n        (SELECT \r\n            HMVRequests.LocItemID,\r\n            HMVRequests.RequestNO,\r\n            HMVRequests.TypeID,\r\n            HMVRequests.MRCNO,\r\n            Items.ItemId,\r\n            Items.Tag,\r\n            Items.Description,\r\n            Units.UnitName,\r\n            SUM(COALESCE(HMVRequests.DelHmvQty, 0)) AS TotalGetHmvQty,\r\n            SUM(COALESCE(HMVRequests.DelHmvRejQty, 0)) AS TotalGetHmvRejQty\r\n         FROM \r\n            Requests AS HMVRequests\r\n         INNER JOIN \r\n            LocItems ON HMVRequests.LocItemID = LocItems.LocItemID\r\n         INNER JOIN \r\n            Items ON LocItems.ItemId = Items.ItemId\r\n         INNER JOIN \r\n            Units ON Items.UnitID = Units.UnitID\r\n         WHERE \r\n            HMVRequests.TypeID = 3  \r\n            AND HMVRequests.CompanyID2 = @CompanyID\r\n         GROUP BY \r\n            HMVRequests.LocItemID,\r\n            HMVRequests.MRCNO,\r\n            HMVRequests.RequestNO,\r\n            HMVRequests.TypeID,\r\n            Items.ItemId,\r\n            Items.Tag,\r\n            Items.Description,\r\n            Units.UnitName\r\n        ) h ON m.LocItemID = h.LocItemID AND m.RequestNO = h.MRCNO\r\n    LEFT JOIN \r\n        Requests r ON COALESCE(m.LocItemID, h.LocItemID) = r.PLocItemIDforMRV\r\n            AND COALESCE(m.RequestNO, h.MRCNO) = r.MRCNO  \r\n            AND r.CompanyID = @CompanyID\r\n            AND r.TypeID = 2  -- MRV data (TypeID = 2)\r\n\tLEFT JOIN \r\n        Requests hmv2 ON h.LocItemID = hmv2.PLocItemIDforMRV\r\n            AND h.RequestNO = hmv2.MRCNO  \r\n            AND hmv2.CompanyID = @CompanyID\r\n            AND hmv2.TypeID = 2  -- HMV data (TypeID = 3)\r\n    LEFT JOIN \r\n        Requests hmv ON COALESCE(m.LocItemID, h.LocItemID) = hmv.LocItemID\r\n            AND COALESCE(m.RequestNO, h.MRCNO) = hmv.MRCNO  \r\n            AND hmv.CompanyID = @CompanyID\r\n            AND hmv.TypeID = 3  -- HMV data (TypeID = 3)\r\n    GROUP BY \r\n        COALESCE(m.LocItemID, h.LocItemID), \r\n        --CASE \r\n        --    WHEN m.TypeID = 1 THEN 'MIV-' + CAST(m.RequestNO AS VARCHAR)\r\n        --    WHEN h.TypeID = 3 THEN 'HMV-' + CAST(h.RequestNO AS VARCHAR)\r\n        --    ELSE NULL\r\n        --END,\r\n\t\tCOALESCE(m.RequestNO, h.RequestNO),\r\n        CASE \r\n            WHEN COALESCE(m.TypeID, h.TypeID) = 1 THEN 'MIV'\r\n            WHEN COALESCE(m.TypeID, h.TypeID) = 3 THEN 'HMV'\r\n            ELSE NULL\r\n        END,\r\n        COALESCE(m.ItemId, h.ItemId), \r\n        COALESCE(m.Tag, h.Tag), \r\n        COALESCE(m.Description, h.Description), \r\n        COALESCE(m.UnitName, h.UnitName), \r\n        m.TotalDelMivQty, \r\n        m.TotalDelMivRejQty, \r\n        h.TotalGetHmvQty, \r\n        h.TotalGetHmvRejQty\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AllMaterialMrvHmvable2025' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[AllMaterialMrvHmvable3]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AllMaterialMrvHmvable3' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[AllMaterialMrvHmvable3]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[AllMaterialMrvHmvable3]\r\n    @CompanyID INT\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- CTE to calculate MIV data (TypeID = 1)\r\n    WITH MivData AS (\r\n        SELECT \r\n            Requests.CompanyID,\r\n            Requests.TypeID,\r\n            Requests.LocItemID, \r\n            Requests.RequestNO,\r\n            Items.ItemId, \r\n            Items.Tag, \r\n            Items.Description, \r\n            Units.UnitName,\r\n            SUM(COALESCE(Requests.DelMivQty, 0)) AS TotalDelMivQty, \r\n            SUM(COALESCE(Requests.DelMivRejQty, 0)) AS TotalDelMivRejQty\r\n        FROM \r\n            Requests \r\n        INNER JOIN\r\n            LocItems ON Requests.LocItemID = LocItems.LocItemID \r\n        INNER JOIN\r\n            Items ON LocItems.ItemId = Items.ItemId \r\n        INNER JOIN\r\n            Units ON Items.UnitID = Units.UnitID\r\n        WHERE  \r\n            Requests.CompanyID = @CompanyID \r\n            AND Requests.TypeID = 1  -- Filter for MIV data (TypeID = 1)\r\n        GROUP BY \r\n            Requests.CompanyID, \r\n            Requests.LocItemID, \r\n            Requests.TypeID,\r\n            Items.ItemId, \r\n            Items.Tag, \r\n            Items.Description, \r\n            Units.UnitName, \r\n            Requests.RequestNO\r\n        HAVING \r\n            SUM(COALESCE(Requests.DelMivQty, 0)) > 0\r\n    )\r\n\r\n    -- Main query joining MivData and HmvData with FULL JOIN to include all records from both\r\n    SELECT \r\n        COALESCE(m.LocItemID, h.LocItemID) AS LocItemID, \r\n        --CASE \r\n        --    WHEN m.TypeID = 1 THEN 'MIV-' + CAST(m.RequestNO AS VARCHAR)\r\n        --    WHEN h.TypeID = 3 THEN 'HMV-' + CAST(h.RequestNO AS VARCHAR)\r\n        --    ELSE NULL\r\n        --END AS RequestNO,\r\n\t\tCOALESCE(m.RequestNO, h.RequestNO) AS RequestNO, \r\n        CASE \r\n            WHEN COALESCE(m.TypeID, h.TypeID) = 1 THEN 'MIV'\r\n            WHEN COALESCE(m.TypeID, h.TypeID) = 3 THEN 'HMV'\r\n            ELSE NULL\r\n        END AS TypeName,\r\n        COALESCE(m.ItemId, h.ItemId) AS ItemId, \r\n        COALESCE(m.Tag, h.Tag) AS Tag, \r\n        COALESCE(m.Description, h.Description) AS Description, \r\n        COALESCE(m.UnitName, h.UnitName) AS UnitName,\r\n        COALESCE(m.TotalDelMivQty, h.TotalGetHmvQty, 0) AS TotalDelMivQty,  \r\n        COALESCE(m.TotalDelMivRejQty, h.TotalGetHmvRejQty, 0) AS TotalDelMivRejQty, \r\n        ((COALESCE(m.TotalDelMivQty, 0) + COALESCE(m.TotalDelMivRejQty, 0) \r\n\t\t+ COALESCE(h.TotalGetHmvQty, 0) + COALESCE(h.TotalGetHmvRejQty, 0))) \r\n         - (SUM(COALESCE(r.DelMrvQty, 0)) + SUM(COALESCE(r.DelMrvRejQty, 0)) \r\n\t\t + SUM(COALESCE(hmv.DelHmvQty, 0)) + SUM(COALESCE(hmv.DelHmvRejQty, 0))++ SUM(COALESCE(hmv2.DelHmvQty, 0)) + SUM(COALESCE(hmv2.DelHmvRejQty, 0))) AS MrvHmvAvailableQty,  \r\n        SUM(COALESCE(r.ReqMrvQty, 0) * -1) AS TotalReqMrvQty, \r\n        SUM(COALESCE(r.DelMrvQty, 0) * -1) AS TotalDelMrvQty,\r\n        SUM(COALESCE(r.DelMrvRejQty, 0) * -1) AS TotalDelMrvRejQty,\r\n        SUM(COALESCE(hmv.DelHmvQty,hmv2.DelHmvQty, 0) * -1) AS TotalDelHmvQty,\r\n        SUM(COALESCE(hmv.DelHmvRejQty,hmv2.DelHmvRejQty, 0) * -1) AS TotalDelHmvRejQty,\r\n        COALESCE(h.TotalGetHmvQty, 0) AS TotalGetHmvQty,  \r\n        COALESCE(h.TotalGetHmvRejQty, 0) AS TotalGetHmvRejQty  \r\n    FROM \r\n        MivData m\r\n    FULL JOIN \r\n        (SELECT \r\n            HMVRequests.LocItemID,\r\n            HMVRequests.RequestNO,\r\n            HMVRequests.TypeID,\r\n            HMVRequests.MRCNO,\r\n            Items.ItemId,\r\n            Items.Tag,\r\n            Items.Description,\r\n            Units.UnitName,\r\n            SUM(COALESCE(HMVRequests.DelHmvQty, 0)) AS TotalGetHmvQty,\r\n            SUM(COALESCE(HMVRequests.DelHmvRejQty, 0)) AS TotalGetHmvRejQty\r\n         FROM \r\n            Requests AS HMVRequests\r\n         INNER JOIN \r\n            LocItems ON HMVRequests.LocItemID = LocItems.LocItemID\r\n         INNER JOIN \r\n            Items ON LocItems.ItemId = Items.ItemId\r\n         INNER JOIN \r\n            Units ON Items.UnitID = Units.UnitID\r\n         WHERE \r\n            HMVRequests.TypeID = 3  \r\n            AND HMVRequests.CompanyID2 = @CompanyID\r\n         GROUP BY \r\n            HMVRequests.LocItemID,\r\n            HMVRequests.MRCNO,\r\n            HMVRequests.RequestNO,\r\n            HMVRequests.TypeID,\r\n            Items.ItemId,\r\n            Items.Tag,\r\n            Items.Description,\r\n            Units.UnitName\r\n        ) h ON m.LocItemID = h.LocItemID AND m.RequestNO = h.MRCNO\r\n    LEFT JOIN \r\n        Requests r ON COALESCE(m.LocItemID, h.LocItemID) = r.LocItemID\r\n            AND COALESCE(m.RequestNO, h.MRCNO) = r.MRCNO  \r\n            AND r.CompanyID = @CompanyID\r\n            AND r.TypeID = 2  -- MRV data (TypeID = 2)\r\n    LEFT JOIN \r\n        Requests hmv ON COALESCE(m.LocItemID, h.LocItemID) = hmv.LocItemID\r\n            AND COALESCE(m.RequestNO, h.MRCNO) = hmv.MRCNO  \r\n            AND hmv.CompanyID = @CompanyID\r\n            AND hmv.TypeID = 3  -- HMV data (TypeID = 3)\r\n\tLEFT JOIN \r\n        Requests hmv2 ON COALESCE(m.LocItemID, h.LocItemID) = hmv2.LocItemID\r\n            AND h.RequestNO = hmv2.MRCNO  \r\n            AND hmv2.CompanyID = @CompanyID\r\n            AND hmv2.TypeID = 3  -- HMV data (TypeID = 3)\r\n    GROUP BY \r\n        COALESCE(m.LocItemID, h.LocItemID), \r\n        --CASE \r\n        --    WHEN m.TypeID = 1 THEN 'MIV-' + CAST(m.RequestNO AS VARCHAR)\r\n        --    WHEN h.TypeID = 3 THEN 'HMV-' + CAST(h.RequestNO AS VARCHAR)\r\n        --    ELSE NULL\r\n        --END,\r\n\t\tCOALESCE(m.RequestNO, h.RequestNO),\r\n        CASE \r\n            WHEN COALESCE(m.TypeID, h.TypeID) = 1 THEN 'MIV'\r\n            WHEN COALESCE(m.TypeID, h.TypeID) = 3 THEN 'HMV'\r\n            ELSE NULL\r\n        END,\r\n        COALESCE(m.ItemId, h.ItemId), \r\n        COALESCE(m.Tag, h.Tag), \r\n        COALESCE(m.Description, h.Description), \r\n        COALESCE(m.UnitName, h.UnitName), \r\n        m.TotalDelMivQty, \r\n        m.TotalDelMivRejQty, \r\n        h.TotalGetHmvQty, \r\n        h.TotalGetHmvRejQty\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='AllMaterialMrvHmvable3' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[ALLmivNOTapproved]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='ALLmivNOTapproved' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[ALLmivNOTapproved]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[ALLmivNOTapproved]\r\nAS\r\nBEGIN\r\nSELECT DISTINCT RequestNO\r\nFROM Requests\r\nWHERE ReserveMivQty != 0;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='ALLmivNOTapproved' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[ALLMrvinfo]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='ALLMrvinfo' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[ALLMrvinfo]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","create PROCEDURE [dbo].[ALLMrvinfo]\r\n    @RequestNO INT\r\nAS\r\nBEGIN\r\nSELECT TOP 1 Requests.RequestNO, Requests.MRVNO, Companies.CompanyName\r\nFROM     Requests INNER JOIN\r\n                  Companies ON Requests.CompanyID = Companies.CompanyID\r\nWHERE  (Requests.TypeID = 2) AND (RequestNO=@RequestNO)\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='ALLMrvinfo' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[ALLMrvs]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='ALLMrvs' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[ALLMrvs]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[ALLMrvs]\r\nAS\r\nBEGIN\r\nSELECT DISTINCT RequestNO\r\nFROM Requests\r\nWHERE TypeID=2;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='ALLMrvs' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[APPROVEmiv]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='APPROVEmiv' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[APPROVEmiv]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[APPROVEmiv]\r\n    @RequestNO NVARCHAR(100)\r\nAS\r\nBEGIN\r\nSELECT \r\n    Companies.CompanyName, \r\n    CompanyContracts.ContractNumber, \r\n    Requests.ReqLocItemID, \r\n\tSubQuery.ItemId,\r\n\tSubQuery.LocItemID,\r\n\tRequests.RequestNO, \r\n    SubQuery.PLName, \r\n    SubQuery.PK, \r\n    SubQuery.ItemOfPk, \r\n    SubQuery.Tag, \r\n    SubQuery.Description, \r\n    SubQuery.UnitName, \r\n    Requests.ReqMivQty, \r\n    Requests.ReserveMivQty, \r\n    Requests.DelMivQty, \r\n    Requests.ReqDate, \r\n    Requests.MRCNO, \r\n    Requests.IssuedBy, \r\n    Requests.IssuedDate, \r\n    Requests.ApprovedBy, \r\n    Requests.ApprovedDate, \r\n    SubQuery.LocationName, \r\n    SubQuery.ScopeName\r\nFROM Requests\r\nLEFT OUTER JOIN (\r\n    SELECT \r\n        LocItems.LocItemID,\r\n        Items.ItemId,\r\n        Packages.PK,\r\n        Items.ItemOfPk,\r\n        Items.Tag,\r\n        Items.Description,\r\n        Units.UnitName,\r\n        PackingLists.PLName,\r\n        Locations.LocationName,\r\n        Scopes.ScopeName\r\n    FROM LocItems\r\n    INNER JOIN Items ON LocItems.ItemId = Items.ItemId\r\n    INNER JOIN Packages ON Items.PKID = Packages.PKID\r\n    INNER JOIN PackingLists ON Packages.PLId = PackingLists.PLId\r\n    INNER JOIN Units ON Items.UnitID = Units.UnitID\r\n    INNER JOIN Scopes ON Items.ScopeID = Scopes.ScopeID\r\n    INNER JOIN Locations ON LocItems.LocationID = Locations.LocationID\r\n) AS SubQuery ON Requests.LocItemID = SubQuery.LocItemID\r\nINNER JOIN Companies ON Requests.CompanyID = Companies.CompanyID\r\nINNER JOIN CompanyContracts ON Requests.ContractId = CompanyContracts.ContractId\r\nWHERE Requests.RequestNO = @RequestNO;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='APPROVEmiv' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[CheckHmvNameCondition]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='CheckHmvNameCondition' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[CheckHmvNameCondition]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","\r\nCREATE PROCEDURE [dbo].[CheckHmvNameCondition]\r\n    @CompanyID INT,\r\n    @HmvNo NVARCHAR(50)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n    \r\n    -- بررسی وجود رکورد با CompanyID و HmvNo مشخص\r\n    SELECT \r\n        CASE \r\n            WHEN EXISTS (\r\n                SELECT 1 \r\n                FROM Requests\r\n                WHERE CompanyID = @CompanyID \r\n                  AND HMVNO = @HmvNo\r\n            ) \r\n            THEN 1 \r\n            ELSE 0 \r\n        END AS ConditionCheck;\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='CheckHmvNameCondition' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[CheckMrcDuplicate]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='CheckMrcDuplicate' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[CheckMrcDuplicate]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[CheckMrcDuplicate]\r\n    @CompanyID INT,\r\n    @MRCNO NVARCHAR(50),\r\n    @IsDuplicate BIT OUTPUT\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- بررسی وجود رکورد با CompanyID و MRCNO\r\n    IF EXISTS (\r\n        SELECT 1\r\n        FROM Requests\r\n        WHERE CompanyID = @CompanyID AND MRCNO = @MRCNO\r\n    )\r\n    BEGIN\r\n        SET @IsDuplicate = 1;  -- رکورد تکراری وجود دارد\r\n    END\r\n    ELSE\r\n    BEGIN\r\n        SET @IsDuplicate = 0;  -- رکورد تکراری وجود ندارد\r\n    END\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='CheckMrcDuplicate' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[CheckMrvCondition]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='CheckMrvCondition' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[CheckMrvCondition]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[CheckMrvCondition]\r\n    @LocItemID INT,\r\n    @CompanyID INT\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- محاسبه مجموع DelMivQty و DelMrvQty برای locItemID و companyID خاص\r\n    SELECT \r\n        CASE \r\n            WHEN SUM(COALESCE(DelMrvQty, 0)) < SUM(COALESCE(DelMivQty, 0)) \r\n            THEN 1 \r\n            ELSE 0 \r\n        END AS IsConditionMet\r\n    FROM Requests\r\n    WHERE LocItemID = @LocItemID AND CompanyID = @CompanyID;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='CheckMrvCondition' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[CheckMrvCondition2]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='CheckMrvCondition2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[CheckMrvCondition2]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","create PROCEDURE [dbo].[CheckMrvCondition2]\r\n    @LocItemID INT,\r\n    @CompanyID INT,\r\n\t@RequestNO NVARCHAR(50)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- محاسبه مجموع DelMivQty و DelMrvQty برای locItemID و companyID خاص\r\n    SELECT \r\n        CASE \r\n            WHEN SUM(COALESCE(DelMrvQty, 0)) < SUM(COALESCE(DelMivQty, 0)) \r\n            THEN 1 \r\n            ELSE 0 \r\n        END AS IsConditionMet\r\n    FROM Requests\r\n    WHERE LocItemID = @LocItemID AND CompanyID = @CompanyID AND RequestNO=@RequestNO;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='CheckMrvCondition2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[CheckMrvHmvCondition]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='CheckMrvHmvCondition' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[CheckMrvHmvCondition]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","\r\nCREATE PROCEDURE [dbo].[CheckMrvHmvCondition]\r\n    @LocItemID INT,\r\n    @CompanyID INT,\r\n    @RequestNO NVARCHAR(100)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Define CTEs\r\n    WITH CTE_RequestMivs AS (\r\n        SELECT \r\n            SUM(COALESCE(DelMivQty, 0)) + SUM(COALESCE(DelMivRejQty, 0)) AS TotalDelMivQty\r\n        FROM Requests\r\n        WHERE LocItemID = @LocItemID \r\n            AND RequestNO = RIGHT('000000' + @RequestNO, 6)\r\n            AND CompanyID = @CompanyID \r\n            AND TypeID = 1\r\n    ),\r\n    CTE_RequestMivs2 AS (\r\n        SELECT \r\n            SUM(COALESCE(DelHmvQty, 0)) + SUM(COALESCE(DelHmvRejQty, 0)) AS TotalDelMivQty2\r\n        FROM Requests\r\n        WHERE LocItemID = @LocItemID \r\n            AND RequestNO = RIGHT('000000' + @RequestNO, 6)\r\n            AND CompanyID2 = @CompanyID \r\n            AND TypeID = 3\r\n    ),\r\n    CTE_RequestMrvs AS (\r\n        SELECT \r\n            SUM(COALESCE(DelMrvQty, 0)) + SUM(COALESCE(DelMrvRejQty, 0)) AS TotalDelMrvQty\r\n        FROM Requests\r\n        WHERE PLocItemIDforMRV = @LocItemID \r\n            AND MRCNO = RIGHT('000000' + @RequestNO, 6)\r\n            AND CompanyID = @CompanyID \r\n            AND TypeID = 2\r\n    ),\r\n    CTE_RequestHmvs AS (\r\n        SELECT \r\n            SUM(COALESCE(DelHmvQty, 0)) + SUM(COALESCE(DelHmvRejQty, 0)) AS TotalDelHmvQty\r\n        FROM Requests\r\n        WHERE LocItemID = @LocItemID \r\n            AND MRCNO = RIGHT('000000' + @RequestNO, 6)\r\n            AND CompanyID = @CompanyID \r\n            AND TypeID = 3\r\n    ),\r\n    CTE_HMV2 AS (\r\n        SELECT \r\n            SUM(COALESCE(h.DelMrvQty, 0)) + SUM(COALESCE(h.DelMrvRejQty, 0)) AS TotalDelHmvQty2\r\n        FROM Requests h\r\n        JOIN Requests hmv2 ON h.LocItemID = hmv2.PLocItemIDforMRV\r\n            AND h.RequestNO = hmv2.MRCNO\r\n            AND hmv2.CompanyID = @CompanyID\r\n            AND hmv2.TypeID = 2\r\n        WHERE h.TypeID = 3\r\n    )\r\n\r\n    -- Final SELECT with JOIN to include CTE_HMV2\r\n    SELECT \r\n        CASE \r\n            WHEN (ISNULL(CTE_RequestMivs.TotalDelMivQty, 0) \r\n                + ISNULL(CTE_RequestMivs2.TotalDelMivQty2, 0)) \r\n                > (ISNULL(CTE_RequestMrvs.TotalDelMrvQty, 0) \r\n                + ISNULL(CTE_RequestHmvs.TotalDelHmvQty, 0) \r\n                + ISNULL(CTE_HMV2.TotalDelHmvQty2, 0))\r\n            THEN 1 \r\n            ELSE 0\r\n        END AS ConditionCheck\r\n    FROM CTE_RequestMivs\r\n    CROSS JOIN CTE_RequestMivs2\r\n    CROSS JOIN CTE_RequestMrvs\r\n    CROSS JOIN CTE_RequestHmvs\r\n    CROSS JOIN CTE_HMV2;\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='CheckMrvHmvCondition' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[CheckMrvNameCondition]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='CheckMrvNameCondition' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[CheckMrvNameCondition]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","\r\ncreate PROCEDURE [dbo].[CheckMrvNameCondition]\r\n    @CompanyID INT,\r\n    @MrvNo NVARCHAR(50)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n    \r\n    -- بررسی وجود رکورد با CompanyID و MrvNo مشخص\r\n    SELECT \r\n        CASE \r\n            WHEN EXISTS (\r\n                SELECT 1 \r\n                FROM Requests\r\n                WHERE CompanyID = @CompanyID \r\n                  AND MRVNO = @MrvNo\r\n            ) \r\n            THEN 1 \r\n            ELSE 0 \r\n        END AS ConditionCheck;\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='CheckMrvNameCondition' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[CheckPackageByName]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='CheckPackageByName' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[CheckPackageByName]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[CheckPackageByName]\r\n    @PackageName NVARCHAR(MAX)\r\nAS\r\nBEGIN\r\n    IF EXISTS (SELECT 1 FROM Packages WHERE Desciption = @PackageName)\r\n        SELECT 1;\r\n    ELSE\r\n        SELECT 0;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='CheckPackageByName' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[CheckPackageExistence]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='CheckPackageExistence' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[CheckPackageExistence]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[CheckPackageExistence]\r\n    @PLId INT,\r\n    @PK INT\r\nAS\r\nBEGIN\r\n    IF EXISTS (SELECT 1 FROM Packages WHERE PLId = @PLId AND PK = @PK)\r\n        SELECT 1;\r\n    ELSE\r\n        SELECT 0;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='CheckPackageExistence' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[ClearMsrData]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='ClearMsrData' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[ClearMsrData]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[ClearMsrData]\r\n    @PLId INT\r\nAS\r\nBEGIN\r\n    --SET NOCOUNT ON;\r\n\r\n    -- پاک کردن مقادیر مرتبط با MSR\r\n    UPDATE Packages\r\n    SET \r\n        MSRNO = NULL,\r\n        MSRDate = NULL,\r\n        MSREnteredBy = NULL,\r\n        MSRRev = NULL,\r\n        MSRRevDate = NULL,\r\n        MSRRevEnteredBy = NULL,\r\n        MSRStatus = NULL\r\n    WHERE PLId = @PLId;\r\n\r\n    -- در صورت موفقیت\r\n    SELECT 'MSR data cleared successfully' AS Message;\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='ClearMsrData' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[DeleteHMVByHMVNO]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='DeleteHMVByHMVNO' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[DeleteHMVByHMVNO]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[DeleteHMVByHMVNO]\r\n    @RequestNO NVARCHAR(50)\r\nAS\r\nBEGIN\r\n    BEGIN TRANSACTION;\r\n\r\n    BEGIN TRY\r\n    \r\n        -- حذف تمام ردیف‌های مرتبط با RequestNO\r\n        DELETE FROM Requests\r\n        WHERE RequestNO = @RequestNO AND TypeID = 3;\r\n\r\n        -- تکمیل تراکنش\r\n        COMMIT TRANSACTION;\r\n    END TRY\r\n    BEGIN CATCH\r\n        -- مدیریت خطا و بازگرداندن تراکنش\r\n        ROLLBACK TRANSACTION;\r\n        THROW;\r\n    END CATCH;\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='DeleteHMVByHMVNO' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[DeleteHmvRow]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='DeleteHmvRow' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[DeleteHmvRow]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[DeleteHmvRow]\r\n    @ReqLocItemID INT,\r\n    @RequestNO NVARCHAR(50)\r\nAS\r\nBEGIN\r\n    BEGIN TRANSACTION;\r\n\r\n    BEGIN TRY\r\n\r\n\r\n     \r\n            -- حذف ردیف از جدول بر اساس ReqLocItemID و RequestNO با TypeID = 2\r\n            DELETE FROM Requests\r\n            WHERE ReqLocItemID = @ReqLocItemID AND RequestNO = @RequestNO AND TypeID = 3;\r\n\r\n            -- تکمیل تراکنش\r\n            COMMIT TRANSACTION;\r\n       \r\n    END TRY\r\n    BEGIN CATCH\r\n        -- در صورت خطا تراکنش به حالت اول بازگردانده می‌شود\r\n        ROLLBACK TRANSACTION;\r\n        THROW;\r\n    END CATCH;\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='DeleteHmvRow' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[DeleteItems]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='DeleteItems' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[DeleteItems]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[DeleteItems]\r\n    @ItemIDList dbo.ItemIDListType READONLY\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- بررسی اینکه آیا locitemid مرتبط با itemid وجود دارد\r\n    IF EXISTS (\r\n        SELECT 1 \r\n        FROM LocItems \r\n        WHERE ItemId IN (SELECT ItemID FROM @ItemIDList)\r\n          AND LocItemID IN (SELECT ReqLocItemID FROM Requests)\r\n    )\r\n    BEGIN\r\n        -- اگر locitemid در جدول Requests موجود بود، پیام خطا ارسال شود\r\n        RAISERROR ('آیتم‌های انتخابی قابل حذف نیستند زیرا با درخواست‌های موجود مرتبط هستند.', 16, 1);\r\n        RETURN;\r\n    END\r\n\r\n    -- حذف از جدول Items تنها در صورتی که locitemid در Requests نباشد\r\n    DELETE FROM Items\r\n    WHERE ItemId IN (SELECT ItemID FROM @ItemIDList);\r\n\r\n    -- حذف locitemid های مرتبط از جدول LocItems\r\n    DELETE FROM LocItems\r\n    WHERE ItemId IN (SELECT ItemID FROM @ItemIDList);\r\n\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='DeleteItems' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[DeleteLocItem]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='DeleteLocItem' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[DeleteLocItem]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[DeleteLocItem]\r\n    @LocItemID INT\r\nAS\r\nBEGIN\r\n    DELETE FROM LocItems\r\n    WHERE LocItemID = @LocItemID\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='DeleteLocItem' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[DeleteMRVByMRVNO]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='DeleteMRVByMRVNO' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[DeleteMRVByMRVNO]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[DeleteMRVByMRVNO]\r\n    @RequestNO NVARCHAR(50)\r\nAS\r\nBEGIN\r\n    BEGIN TRANSACTION;\r\n\r\n    BEGIN TRY\r\n        -- استخراج LocItemIDهای مرتبط با RequestNO\r\n        DECLARE @UsedLocItems TABLE (LocItemID INT);\r\n\r\n        INSERT INTO @UsedLocItems (LocItemID)\r\n        SELECT DISTINCT LocItemID\r\n        FROM Requests\r\n        WHERE RequestNO = @RequestNO AND TypeID = 2;\r\n\r\n        -- بررسی استفاده‌شدن LocItemIDها با TypeID = 1\r\n        IF EXISTS (\r\n            SELECT 1\r\n            FROM Requests\r\n            WHERE LocItemID IN (SELECT LocItemID FROM @UsedLocItems) AND TypeID = 1\r\n        )\r\n        BEGIN\r\n            -- ایجاد لیستی از LocItemIDهایی که استفاده شده‌اند\r\n            DECLARE @UsedLocItemIDs NVARCHAR(MAX);\r\n\r\n            SELECT @UsedLocItemIDs = STRING_AGG(CAST(LocItemID AS NVARCHAR), ', ')\r\n            FROM Requests\r\n            WHERE LocItemID IN (SELECT LocItemID FROM @UsedLocItems) AND TypeID = 1;\r\n\r\n            -- پیام خطا را آماده کنید\r\n            DECLARE @ErrorMessage NVARCHAR(MAX);\r\n            SET @ErrorMessage = 'Cannot delete. The following LocItemIDs are referenced with TypeID = 1: ' + @UsedLocItemIDs;\r\n\r\n            -- تراکنش را بازگردانده و خطا را ثبت کنید\r\n            ROLLBACK TRANSACTION;\r\n            THROW 50003, @ErrorMessage, 1;\r\n        END\r\n\r\n        -- حذف تمام ردیف‌های مرتبط با RequestNO\r\n        DELETE FROM Requests\r\n        WHERE RequestNO = @RequestNO AND TypeID = 2;\r\n\r\n        -- تکمیل تراکنش\r\n        COMMIT TRANSACTION;\r\n    END TRY\r\n    BEGIN CATCH\r\n        -- مدیریت خطا و بازگرداندن تراکنش\r\n        ROLLBACK TRANSACTION;\r\n        THROW;\r\n    END CATCH;\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='DeleteMRVByMRVNO' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[DeleteMrvRow]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='DeleteMrvRow' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[DeleteMrvRow]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[DeleteMrvRow]\r\n    @ReqLocItemID INT,\r\n    @RequestNO NVARCHAR(50)\r\nAS\r\nBEGIN\r\n    BEGIN TRANSACTION;\r\n\r\n    BEGIN TRY\r\n        -- استخراج LocItemID مرتبط با ReqLocItemID\r\n        DECLARE @LocItemID INT;\r\n\r\n        SELECT @LocItemID = LocItemID\r\n        FROM Requests\r\n        WHERE ReqLocItemID = @ReqLocItemID;\r\n\r\n        -- بررسی اینکه LocItemID با TypeID = 1 جایی استفاده نشده باشد\r\n        IF NOT EXISTS (\r\n            SELECT 1\r\n            FROM Requests\r\n            WHERE LocItemID = @LocItemID AND TypeID = 1\r\n        )\r\n        BEGIN\r\n            -- حذف ردیف از جدول بر اساس ReqLocItemID و RequestNO با TypeID = 2\r\n            DELETE FROM Requests\r\n            WHERE ReqLocItemID = @ReqLocItemID AND RequestNO = @RequestNO AND TypeID = 2;\r\n\r\n            -- تکمیل تراکنش\r\n            COMMIT TRANSACTION;\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            -- در صورتی که شرط وجود دارد\r\n            ROLLBACK TRANSACTION;\r\n            THROW 50002, 'Cannot delete. LocItemID is referenced with TypeID = 1.', 1;\r\n        END\r\n    END TRY\r\n    BEGIN CATCH\r\n        -- در صورت خطا تراکنش به حالت اول بازگردانده می‌شود\r\n        ROLLBACK TRANSACTION;\r\n        THROW;\r\n    END CATCH;\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='DeleteMrvRow' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[DeleteMultipleLocItems]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='DeleteMultipleLocItems' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[DeleteMultipleLocItems]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[DeleteMultipleLocItems]\r\n    @LocItemIDList dbo.LocItemIDListType READONLY\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- مرحله 1: بررسی وجود LocItemID در جدول Requests\r\n    IF EXISTS (SELECT 1 \r\n               FROM Requests \r\n               WHERE LocItemID IN (SELECT LocItemID FROM @LocItemIDList))\r\n    BEGIN\r\n        -- اگر LocItemID در Requests وجود داشت، عملیات حذف را متوقف می‌کنیم\r\n        RAISERROR ('Some LocItemIDs are in use in the Requests table and cannot be deleted.', 16, 1);\r\n        RETURN;\r\n    END\r\n\r\n    -- مرحله 2: قبل از حذف، ذخیره ItemID های مرتبط با LocItemID هایی که قرار است حذف شوند\r\n    DECLARE @ItemIDToDelete TABLE (ItemID INT);\r\n\r\n    -- اضافه کردن ItemID ها به جدول موقت برای حذف\r\n    INSERT INTO @ItemIDToDelete (ItemID)\r\n    SELECT DISTINCT ItemID\r\n    FROM LocItems\r\n    WHERE LocItemID IN (SELECT LocItemID FROM @LocItemIDList);\r\n\r\n    -- مرحله 3: حذف LocItemID ها در صورتی که در جدول Requests نباشند\r\n    DELETE FROM LocItems\r\n    WHERE LocItemID IN (SELECT LocItemID FROM @LocItemIDList);\r\n\r\n    -- مرحله 4: حذف ItemIDهایی که دیگر هیچ LocItemID مرتبطی ندارند\r\n\t DELETE FROM Items\r\n\tWHERE ItemId IN (\r\n\t\tSELECT ItemID \r\n\t\tFROM @ItemIDToDelete AS T\r\n\t\tWHERE NOT EXISTS (\r\n\t\t\tSELECT 1\r\n\t\t\tFROM LocItems LI\r\n\t\t\tWHERE LI.ItemID = T.ItemID\r\n\t\t)\r\n\t);\r\n\r\nEND\r\n\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='DeleteMultipleLocItems' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[DeletePackage]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='DeletePackage' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[DeletePackage]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[DeletePackage]\r\n    @PackageId INT\r\nAS\r\nBEGIN\r\n    DELETE FROM Packages WHERE PKID = @PackageId;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='DeletePackage' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[DeletePackages]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='DeletePackages' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[DeletePackages]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","\r\nCREATE PROCEDURE [dbo].[DeletePackages]\r\n(\r\n    @PKIDList dbo.PackagePKIDDtoType READONLY\r\n)\r\nAS\r\nBEGIN\r\n    DELETE FROM Packages\r\n    WHERE PKID IN (SELECT PKID FROM @PKIDList);\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='DeletePackages' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[DeletePackingList]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='DeletePackingList' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[DeletePackingList]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","\r\nCREATE PROCEDURE [dbo].[DeletePackingList]\r\n    @PlId INT\r\nAS\r\nBEGIN\r\n    DELETE FROM PackingLists WHERE PlId = @PlId;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='DeletePackingList' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[ExistsPackingListByOpiNumber]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='ExistsPackingListByOpiNumber' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[ExistsPackingListByOpiNumber]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","\r\nCREATE PROCEDURE [dbo].[ExistsPackingListByOpiNumber]\r\n    @OpiNumber NVARCHAR(255)\r\nAS\r\nBEGIN\r\n    SELECT CASE WHEN EXISTS (SELECT 1 FROM PackingLists WHERE OPINO = @OpiNumber) THEN 1 ELSE 0 END\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='ExistsPackingListByOpiNumber' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[ExistsPackingListByPlName]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='ExistsPackingListByPlName' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[ExistsPackingListByPlName]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","\r\nCREATE PROCEDURE [dbo].[ExistsPackingListByPlName]\r\n    @PlName NVARCHAR(255)\r\nAS\r\nBEGIN\r\n    SELECT CASE WHEN EXISTS (SELECT 1 FROM PackingLists WHERE PLName = @PlName) THEN CAST(1 AS BIT) ELSE CAST(0 AS BIT) END;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='ExistsPackingListByPlName' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[ExistsPackingListByPlNo]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='ExistsPackingListByPlNo' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[ExistsPackingListByPlNo]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","\r\nCREATE PROCEDURE [dbo].[ExistsPackingListByPlNo]\r\n    @PlNo NVARCHAR(255)\r\nAS\r\nBEGIN\r\n    SELECT * FROM PackingLists WHERE PLNO = @PlNo;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='ExistsPackingListByPlNo' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetAllLocItems]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetAllLocItems' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetAllLocItems]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetAllLocItems]\r\nAS\r\nBEGIN\r\n    SELECT * FROM LocItems\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetAllLocItems' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetAllPackages]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetAllPackages' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetAllPackages]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetAllPackages]\r\nAS\r\nBEGIN\r\n    SELECT * FROM Packages;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetAllPackages' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetAllPackingLists]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetAllPackingLists' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetAllPackingLists]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetAllPackingLists]\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;  -- Improve performance by stopping the message that shows the count of affected rows\r\n\r\n    -- Selecting specific columns instead of *\r\n    SELECT \r\n        PLId,\r\n        ShId,\r\n        MrId,\r\n        PoId,\r\n        IrnId,\r\n        PLName,\r\n        ArchiveNO,\r\n        PLNO,\r\n        OPINO,\r\n        Project,\r\n        AreaUnitID,\r\n        SupplierId,\r\n        DesciplineId,\r\n        VendorId,\r\n        DescriptionForPkId,\r\n        NetW,\r\n        GrossW,\r\n        Volume,\r\n        Vessel,\r\n        EnteredBy,\r\n        EnteredDate,\r\n        MARDate,\r\n        Remark,\r\n        LocalForeign,\r\n        RTINO,\r\n        InvoiceNO,\r\n        IRCNO,\r\n        LCNO,\r\n        BLNO,\r\n        Remarkcustoms,\r\n        EditedBy,\r\n        EditedDate,\r\n        PLDPF,\r\n        Balance,\r\n        Attachment,\r\n        SitePL\r\n    FROM PackingLists;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetAllPackingLists' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetAllPackingListsNames]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetAllPackingListsNames' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetAllPackingListsNames]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","Create PROCEDURE [dbo].[GetAllPackingListsNames]\r\nAS\r\nBEGIN\r\n    SELECT PLId,PLName,PLNO FROM PackingLists;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetAllPackingListsNames' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetContractorMaterialSummary]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetContractorMaterialSummary' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetContractorMaterialSummary]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetContractorMaterialSummary]\r\n    @ContractorID INT -- شناسه پیمانکار\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- گرفتن مواد دریافتی (MIV) برای پیمانکار مشخص به همراه مقادیر برگشتی (MRV)\r\n    WITH MivData AS (\r\n        SELECT \r\n            Requests.LocItemID, \r\n            Requests.RequestNO,\r\n            Items.ItemId, \r\n            Items.Tag, \r\n            Items.Description, \r\n            Units.UnitName,\r\n            SUM(COALESCE(Requests.DelMivQty, 0)) AS TotalDelMivQty, -- کل مقدار دریافت شده MIV\r\n            SUM(COALESCE(Requests.ReserveMivQty, 0)) AS TotalReserveQty -- مقدار رزرو شده\r\n        FROM \r\n            Requests \r\n        INNER JOIN\r\n            LocItems ON Requests.LocItemID = LocItems.LocItemID \r\n        INNER JOIN\r\n            Items ON LocItems.ItemId = Items.ItemId \r\n        INNER JOIN\r\n            Units ON Items.UnitID = Units.UnitID\r\n        WHERE  \r\n            Requests.CompanyID = @ContractorID \r\n            AND Requests.TypeID = 1 -- فقط MIV ها (TypeID = 1)\r\n        GROUP BY \r\n            Requests.LocItemID, Items.ItemId, Items.Tag, Items.Description, Units.UnitName, Requests.RequestNO\r\n    )\r\n\r\n    SELECT \r\n        m.LocItemID, \r\n        m.RequestNO,\r\n        m.ItemId, \r\n        m.Tag, \r\n        m.Description, \r\n        m.UnitName,\r\n        m.TotalDelMivQty, -- کل دریافتی MIV\r\n        m.TotalReserveQty, -- مقدار رزرو شده\r\n        SUM(COALESCE(r.DelMrvQty, 0)) AS TotalDelMrvQty, -- کل MRV های برگشتی\r\n        (m.TotalDelMivQty - SUM(COALESCE(r.DelMrvQty, 0))) AS FinalQty  -- مقدار نهایی پس از کسر MRV\r\n    FROM \r\n        MivData m\r\n    LEFT JOIN \r\n        Requests r ON m.LocItemID = r.LocItemID \r\n                  AND m.RequestNO = r.MRCNO -- بر اساس RequestNO و LocItemID همسان‌سازی می‌شود\r\n                  AND r.TypeID = 2  -- فقط MRV ها (TypeID = 2)\r\n    GROUP BY \r\n        m.LocItemID, m.RequestNO, m.ItemId, m.Tag, m.Description, m.UnitName, m.TotalDelMivQty, m.TotalReserveQty\r\n    --HAVING \r\n    --    (m.TotalDelMivQty > 0); -- فقط مواردی که دریافتی MIV دارند\r\n\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetContractorMaterialSummary' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetInfoHmv]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetInfoHmv' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetInfoHmv]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetInfoHmv]\r\n    @RequestNO varchar(100)\r\nAS\r\nBEGIN\r\n    -- فعال کردن نمایش خطاها\r\n    SET NOCOUNT ON;\r\n\r\n    SELECT \r\n        ROW_NUMBER() OVER (ORDER BY Requests.RequestNO ASC) AS RowNumber, -- اضافه کردن ستون شماره ردیف\r\n        RIGHT('000000' + Requests.RequestNO, 6) AS RequestNO, \r\n        Requests.HMVNO, \r\n\t\tRequests.ReqLocItemID,\r\n        Companies.CompanyName AS fromCompanyName, \r\n        Companies2.CompanyName AS toCompanyName,\r\n        Items.ItemId, \r\n        LocItems.LocItemID, \r\n        PackingLists.PLName, \r\n        Packages.PK, \r\n        Items.ItemOfPk, \r\n        Items.Tag, \r\n        Items.Description, \r\n        Units.UnitName, \r\n        Requests.ReqHmvQty, \r\n        Requests.DelHmvQty, \r\n        Requests.DelHmvRejQty, \r\n        Scopes.ScopeName, \r\n        Requests.Remark AS RemarkRequests, \r\n        Requests.MRCNO, \r\n        Requests.DelDate\r\n    FROM     \r\n        Requests \r\n    INNER JOIN Companies ON Requests.CompanyID = Companies.CompanyID\r\n    INNER JOIN Companies AS Companies2 ON Requests.CompanyID2 = Companies2.CompanyID\r\n    INNER JOIN LocItems ON Requests.LocItemID = LocItems.LocItemID \r\n    INNER JOIN Items ON LocItems.ItemId = Items.ItemId \r\n    INNER JOIN Packages ON Items.PKID = Packages.PKID \r\n    INNER JOIN PackingLists ON Packages.PLId = PackingLists.PLId \r\n    INNER JOIN Scopes ON Items.ScopeID = Scopes.ScopeID \r\n    INNER JOIN Units ON Items.UnitID = Units.UnitID\r\n    WHERE  \r\n        (Requests.TypeID = 3) AND (Requests.RequestNO = @RequestNO)\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetInfoHmv' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetInfoMrv]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetInfoMrv' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetInfoMrv]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetInfoMrv]\r\n    @RequestNO varchar(100)\r\nAS\r\nBEGIN\r\n    -- فعال کردن نمایش خطاها\r\n    SET NOCOUNT ON;\r\n\r\n    SELECT \r\n        ROW_NUMBER() OVER (ORDER BY Requests.RequestNO ASC) AS RowNumber, -- اضافه کردن ستون شماره ردیف\r\n        RIGHT('000000' + Requests.RequestNO, 6) AS RequestNO, \r\n        Requests.MRVNO, \r\n\t\tRequests.ReqLocItemID,\r\n        Companies.CompanyName, \r\n        Items.ItemId, \r\n        LocItems.LocItemID, \r\n        PackingLists.PLName, \r\n        Packages.PK, \r\n        Items.ItemOfPk, \r\n        Items.Tag, \r\n        Items.Description, \r\n        Units.UnitName, \r\n        Requests.ReqMrvQty, \r\n        Requests.DelMrvQty, \r\n        Requests.DelMrvRejQty, \r\n        Locations.LocationName AS LocationName, \r\n\t\tLocItems.LocationID,\r\n        Scopes.ScopeName, \r\n        LocItems.RemarkLocitemID, \r\n        Requests.Remark AS RemarkRequests, \r\n        Requests.PLocItemIDforMRV, \r\n        Requests.MRCNO, \r\n        Requests.DelDate, \r\n        LocItems.ParentLocItemID\r\n    FROM     \r\n        Requests \r\n    INNER JOIN Companies ON Requests.CompanyID = Companies.CompanyID \r\n    INNER JOIN LocItems ON Requests.LocItemID = LocItems.LocItemID \r\n    INNER JOIN Items ON LocItems.ItemId = Items.ItemId \r\n    INNER JOIN Locations ON LocItems.LocationID = Locations.LocationID \r\n    INNER JOIN Packages ON Items.PKID = Packages.PKID \r\n    INNER JOIN PackingLists ON Packages.PLId = PackingLists.PLId \r\n    INNER JOIN Scopes ON Items.ScopeID = Scopes.ScopeID \r\n    INNER JOIN Units ON Items.UnitID = Units.UnitID\r\n    WHERE  \r\n        (Requests.TypeID = 2) AND (Requests.RequestNO = @RequestNO)\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetInfoMrv' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetInspectionDetails]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetInspectionDetails' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetInspectionDetails]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetInspectionDetails]\r\nAS\r\nBEGIN\r\n    SELECT \r\n        pl.PLId,\r\n        pl.PLName, -- نام مرتبط از جدول PackingList\r\n        pl.IrnId,\r\n        irn.IRNName, -- نام مرتبط از جدول IRN\r\n        ISNULL(i.IRN_Conflict, 0) AS IRN_Conflict, -- مقدار پیش‌فرض 0 برای NULL\r\n        i.IVR_NO,\r\n        i.IVR_IFR,\r\n        i.OrderStatus,\r\n        ISNULL(i.ThirdParty, 0) AS ThirdParty,\r\n        ISNULL(i.OPI, 0) AS OPI,\r\n        i.Description,\r\n        i.IcNo,\r\n        i.SubProject,\r\n        ISNULL(i.Site, 0) AS Site,\r\n        ISNULL(i.Laydown, 0) AS Laydown,\r\n        ISNULL(i.Warehouse, 0) AS Warehouse,\r\n        ISNULL(i.OSBL, 0) AS OSBL,\r\n        ISNULL(i.VisualInspection, 0) AS VisualInspection,\r\n        ISNULL(i.QuantityCheck, 0) AS QuantityCheck,\r\n        ISNULL(i.Marking, 0) AS Marking,\r\n        ISNULL(i.Unloading, 0) AS Unloading,\r\n        i.IVRPDF,\r\n        i.IFRPDF,\r\n        i.EnteredBy,\r\n        i.EnteredDate,\r\n        i.EditedBy,\r\n        i.EditedDate\r\n    FROM \r\n        PackingLists pl\r\n    LEFT JOIN \r\n        Inspection i ON i.PLId = pl.PLId -- اتصال به جدول Inspection (LEFT JOIN)\r\n    LEFT JOIN \r\n        Irns irn ON pl.IrnId = irn.IrnId -- اتصال به جدول IRN\r\nEND\r\n\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetInspectionDetails' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetInspectionWithEmptyMSRNO]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetInspectionWithEmptyMSRNO' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetInspectionWithEmptyMSRNO]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetInspectionWithEmptyMSRNO] \r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\nSELECT \r\n    PackingLists.PLId,\r\n\tPackingLists.PLName, \r\n    Pos.PoName, \r\n    Irns.IrnName,  \r\n    PackingLists.OPINO, \r\n    PackingLists.Project, \r\n    Vendors.VendorName, \r\n    Suppliers.SupplierName, \r\n    PackingLists.NetW, \r\n    PackingLists.GrossW, \r\n    Inspection.IVR_NO, \r\n    Inspection.IVR_IFR, \r\n    Desciplines.DesciplineName, \r\n    Packages.MSRNO, \r\n    Packages.MSRDate\r\nFROM \r\n    Inspection  \r\nLEFT JOIN \r\n    PackingLists ON Inspection.PLId = PackingLists.PLId \r\nLEFT JOIN \r\n    Irns ON PackingLists.IrnId = Irns.IrnId\r\nLEFT JOIN \r\n    Pos ON PackingLists.PoId = Pos.PoId\r\nLEFT JOIN \r\n    Vendors ON PackingLists.VendorId = Vendors.VendorID\r\nLEFT JOIN \r\n    Suppliers ON PackingLists.SupplierId = Suppliers.SupplierId\r\nLEFT JOIN \r\n    Desciplines ON PackingLists.DesciplineId = Desciplines.DesciplineId\r\nLEFT JOIN \r\n    Packages ON PackingLists.PLId = Packages.PLId\r\nWHERE \r\n    -- فقط رکوردهایی که ستون‌های IVR_NO و IVR_IFR پر هستند\r\n    Inspection.IVR_NO IS NOT NULL \r\n    AND Inspection.IVR_NO <> ''\r\n    AND Inspection.IVR_IFR IS NOT NULL \r\n    AND Inspection.IVR_IFR <> ''\r\n    -- و ستون MSRNO خالی است\r\n    AND (Packages.MSRNO IS NULL OR Packages.MSRNO = '')\r\nGROUP BY \r\n    Pos.PoName, \r\n    Irns.IrnName, \r\n    PackingLists.PLId, \r\n    PackingLists.PLName, \r\n    PackingLists.OPINO, \r\n    PackingLists.Project, \r\n    Vendors.VendorName, \r\n    Suppliers.SupplierName, \r\n    PackingLists.NetW, \r\n    PackingLists.GrossW, \r\n    Inspection.IVR_NO, \r\n    Inspection.IVR_IFR, \r\n    Desciplines.DesciplineName, \r\n    Packages.MSRNO, \r\n    Packages.MSRDate;\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetInspectionWithEmptyMSRNO' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetInspectionWithEmptyMSRNO2025]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetInspectionWithEmptyMSRNO2025' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetInspectionWithEmptyMSRNO2025]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","create PROCEDURE [dbo].[GetInspectionWithEmptyMSRNO2025] \r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    SELECT \r\n        PackingLists.PLId,\r\n        PackingLists.PLName, \r\n        Pos.PoName, \r\n        Irns.IrnName,  \r\n        PackingLists.OPINO, \r\n        PackingLists.Project, \r\n        Vendors.VendorName, \r\n        Suppliers.SupplierName, \r\n        PackingLists.NetW, \r\n        PackingLists.GrossW, \r\n        Inspection.IVR_NO, \r\n        Inspection.IVR_IFR, \r\n        Desciplines.DesciplineName, \r\n        Packages.MSRNO, \r\n        Packages.MSRDate\r\n    FROM \r\n        Inspection  \r\n    LEFT JOIN \r\n        PackingLists ON Inspection.PLId = PackingLists.PLId \r\n    LEFT JOIN \r\n        Irns ON PackingLists.IrnId = Irns.IrnId\r\n    LEFT JOIN \r\n        Pos ON PackingLists.PoId = Pos.PoId\r\n    LEFT JOIN \r\n        Vendors ON PackingLists.VendorId = Vendors.VendorID\r\n    LEFT JOIN \r\n        Suppliers ON PackingLists.SupplierId = Suppliers.SupplierId\r\n    LEFT JOIN \r\n        Desciplines ON PackingLists.DesciplineId = Desciplines.DesciplineId\r\n    LEFT JOIN \r\n        Packages ON PackingLists.PLId = Packages.PLId\r\n    WHERE \r\n        -- فقط رکوردهایی که ستون‌های IVR_NO و IVR_IFR پر هستند\r\n        Inspection.IVR_NO IS NOT NULL \r\n        AND Inspection.IVR_NO <> ''\r\n        AND Inspection.IVR_IFR IS NOT NULL \r\n        AND Inspection.IVR_IFR <> ''\r\n        -- و هیچ‌کدام از رکوردهای مرتبط با PLId در جدول Packages MSRNO نداشته باشند\r\n        AND NOT EXISTS (\r\n            SELECT 1 \r\n            FROM Packages p\r\n            WHERE p.PLId = PackingLists.PLId\r\n              AND p.MSRNO IS NOT NULL \r\n              AND p.MSRNO <> ''\r\n        )\r\n    GROUP BY \r\n        Pos.PoName, \r\n        Irns.IrnName, \r\n        PackingLists.PLId, \r\n        PackingLists.PLName, \r\n        PackingLists.OPINO, \r\n        PackingLists.Project, \r\n        Vendors.VendorName, \r\n        Suppliers.SupplierName, \r\n        PackingLists.NetW, \r\n        PackingLists.GrossW, \r\n        Inspection.IVR_NO, \r\n        Inspection.IVR_IFR, \r\n        Desciplines.DesciplineName, \r\n        Packages.MSRNO, \r\n        Packages.MSRDate;\r\nEND;\r\n\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetInspectionWithEmptyMSRNO2025' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetInspectionWithMSRNO2025]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetInspectionWithMSRNO2025' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetInspectionWithMSRNO2025]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetInspectionWithMSRNO2025] \r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    SELECT \r\n        PackingLists.PLId,\r\n        PackingLists.PLName, \r\n        Pos.PoName, \r\n        Irns.IrnName,  \r\n        PackingLists.OPINO, \r\n        PackingLists.Project, \r\n        Vendors.VendorName, \r\n        Suppliers.SupplierName, \r\n        PackingLists.NetW, \r\n        PackingLists.GrossW, \r\n        Inspection.IVR_NO, \r\n        Inspection.IVR_IFR, \r\n        Desciplines.DesciplineName, \r\n        Packages.MSRNO, \r\n        Packages.MSRDate,\r\n\t\tPackages.MSREnteredBy,\r\n\t\tPackages.MSRRev,\r\n\t\tPackages.MSRRevDate,\r\n\t\tPackages.MSRRevEnteredBy,\r\n\t\tPackages.MSRStatus\r\n    FROM \r\n        Inspection  \r\n    LEFT JOIN \r\n        PackingLists ON Inspection.PLId = PackingLists.PLId \r\n    LEFT JOIN \r\n        Irns ON PackingLists.IrnId = Irns.IrnId\r\n    LEFT JOIN \r\n        Pos ON PackingLists.PoId = Pos.PoId\r\n    LEFT JOIN \r\n        Vendors ON PackingLists.VendorId = Vendors.VendorID\r\n    LEFT JOIN \r\n        Suppliers ON PackingLists.SupplierId = Suppliers.SupplierId\r\n    LEFT JOIN \r\n        Desciplines ON PackingLists.DesciplineId = Desciplines.DesciplineId\r\n    LEFT JOIN \r\n        Packages ON PackingLists.PLId = Packages.PLId\r\n    WHERE \r\n        -- فقط رکوردهایی که ستون‌های IVR_NO و IVR_IFR پر هستند\r\n        Inspection.IVR_NO IS NOT NULL \r\n        AND Inspection.IVR_NO <> ''\r\n        AND Inspection.IVR_IFR IS NOT NULL \r\n        AND Inspection.IVR_IFR <> ''\r\n        -- و فقط رکوردهایی که حداقل یکی از MSRNO ها پر هستند (یعنی در جدول Packages MSRNO وجود دارد)\r\n        AND EXISTS (\r\n            SELECT 1 \r\n            FROM Packages p\r\n            WHERE p.PLId = PackingLists.PLId\r\n              AND p.MSRNO IS NOT NULL \r\n              AND p.MSRNO <> ''\r\n        )\r\n    GROUP BY \r\n        Pos.PoName, \r\n        Irns.IrnName, \r\n        PackingLists.PLId, \r\n        PackingLists.PLName, \r\n        PackingLists.OPINO, \r\n        PackingLists.Project, \r\n        Vendors.VendorName, \r\n        Suppliers.SupplierName, \r\n        PackingLists.NetW, \r\n        PackingLists.GrossW, \r\n        Inspection.IVR_NO, \r\n        Inspection.IVR_IFR, \r\n        Desciplines.DesciplineName, \r\n        Packages.MSRNO, \r\n        Packages.MSRDate,\r\n\t\tPackages.MSREnteredBy,\r\n\t\tPackages.MSRRev,\r\n\t\tPackages.MSRRevDate,\r\n\t\tPackages.MSRRevEnteredBy,\r\n\t\tPackages.MSRStatus\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetInspectionWithMSRNO2025' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetLastArchiveNo]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetLastArchiveNo' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetLastArchiveNo]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetLastArchiveNo]\r\nAS\r\nBEGIN\r\n    SELECT TOP 1 ArchiveNO\r\n    FROM PackingLists\r\n    ORDER BY ArchiveNO DESC\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetLastArchiveNo' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetLastPackage]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetLastPackage' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetLastPackage]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetLastPackage]\r\n    @PLId INT\r\nAS\r\nBEGIN\r\n    SELECT ISNULL(MAX(PK), 0) FROM Packages WHERE PLId = @PLId;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetLastPackage' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetLastPKID]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetLastPKID' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetLastPKID]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetLastPKID]\r\n    @PLId INT\r\nAS\r\nBEGIN\r\n    DECLARE @MaxPK INT;\r\n\r\n    -- ابتدا بزرگترین مقدار PK را پیدا کنید\r\n    SELECT @MaxPK = MAX(PK) \r\n    FROM Packages \r\n    WHERE PLId = @PLId;\r\n\r\n    -- بررسی مقدار @MaxPK\r\n    IF @MaxPK IS NULL\r\n    BEGIN\r\n        SELECT 'No PK found for the given PLId', @PLId;\r\n        RETURN;\r\n    END\r\n\r\n    -- سپس PKID مربوط به آن PK را برگردانید\r\n    SELECT PKID\r\n    FROM Packages\r\n    WHERE PLId = @PLId AND PK = @MaxPK;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetLastPKID' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetLatestRequestNoByTypeId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetLatestRequestNoByTypeId' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetLatestRequestNoByTypeId]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetLatestRequestNoByTypeId]\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    DECLARE @latestRequestNo INT;\r\n\r\n    SELECT @latestRequestNo = ISNULL(MAX(CAST(RequestNo AS INT)), 0)\r\n    FROM Requests\r\n    WHERE TypeId = 1;\r\n\r\n    SELECT @latestRequestNo + 1 AS NextRequestNo;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetLatestRequestNoByTypeId' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetLocItemById]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetLocItemById' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetLocItemById]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetLocItemById]\r\n    @LocItemID INT\r\nAS\r\nBEGIN\r\n    SELECT * FROM LocItems\r\n    WHERE LocItemID = @LocItemID\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetLocItemById' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetLocItemOFSelectedItemID_FOR_ISSUE_VOUCHER]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetLocItemOFSelectedItemID_FOR_ISSUE_VOUCHER' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetLocItemOFSelectedItemID_FOR_ISSUE_VOUCHER]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","create PROCEDURE [dbo].[GetLocItemOFSelectedItemID_FOR_ISSUE_VOUCHER]\r\n    @ItemIds VARCHAR(MAX)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Filter LocItemID related to selected ItemId only\r\n    ;WITH CTE_RequestData AS\r\n    (\r\n        SELECT \r\n            li.LocItemID,\r\n            SUM(req.ReserveMivQty) AS TotalReserveMivQty,\r\n            SUM(req.DelMivQty) AS TotalDelMivQty,\r\n            SUM(li.NISQty) AS NISQty,\r\n            SUM(li.RejectQty) AS RejectQty,\r\n            SUM(req.DelMrvQty * -1) AS TotalReturnAcceptQty\r\n        FROM \r\n            LocItems AS li\r\n        LEFT OUTER JOIN Requests AS req ON li.LocItemID = req.LocItemID\r\n        WHERE li.ItemId IN (SELECT value FROM STRING_SPLIT(@ItemIds, ','))\r\n        GROUP BY \r\n            li.LocItemID\r\n    )\r\n    SELECT \r\n        Items.ItemId,\r\n        li.LocItemID,\r\n        Items.Tag,\r\n        Items.Description,\r\n        li.Qty AS QtyInLoc,  -- Each LocItemID will have its own QtyInLoc\r\n        li.Qty \r\n            - ISNULL(rd.TotalReserveMivQty, 0) \r\n            - ISNULL(rd.TotalDelMivQty, 0) \r\n            - ISNULL(li.NISQty, 0) \r\n            - ISNULL(li.RejectQty, 0) \r\n            + ISNULL(rd.TotalReturnAcceptQty, 0) AS Balance, -- Calculate Balance per LocItemID\r\n        pl.PLName AS PL,          -- Add PL field\r\n        pl.Project as Project,\r\n\t\tp.PK AS PK,              -- Add PK field\r\n        --pl.DesciplineId AS Discipline, -- Add Discipline field\r\n        d.DesciplineName AS Discipline, -- Add DesciplineName from Disciplines table\r\n        Items.BatchNo AS BatchNo,   -- Add BatchNo field from Items\r\n        Items.HeatNo AS HeatNo,     -- Add HeatNo field from Items\r\n\t\tItems.Remark AS Remark,\r\n        loc.LocationName AS Location, -- Add Location field\r\n        Units.UnitName AS Units,        -- Add Unit field from Items\r\n        --Items.ScopeID AS Scope,      -- Add Scope field from Items\r\n        sc.ScopeName AS Scope,   -- Add ScopeName from Scope table\r\n        po.PoName AS Po         -- Add PoName field from Po table\r\n    FROM \r\n        LocItems AS li\r\n    INNER JOIN Items ON li.ItemId = Items.ItemId\r\n\tINNER JOIN Units ON Items.UnitID = Units.UnitID\r\n    LEFT JOIN CTE_RequestData AS rd ON li.LocItemID = rd.LocItemID\r\n    INNER JOIN Packages AS p ON p.PKID = Items.PKID\r\n    INNER JOIN PackingLists AS pl ON p.PLId = pl.PLId\r\n    INNER JOIN Locations AS loc ON li.LocationID = loc.LocationID\r\n    LEFT JOIN Pos AS po ON pl.PoId = po.PoId  -- Join with Po table based on PoId\r\n    LEFT JOIN Desciplines AS d ON pl.DesciplineId = d.DesciplineId  -- Join with Disciplines table\r\n    LEFT JOIN Scopes AS sc ON Items.ScopeID = sc.ScopeID  -- Join with Scope table based on ScopeID\r\n    WHERE Items.ItemId IN (SELECT value FROM STRING_SPLIT(@ItemIds, ','))\r\n    AND (li.Qty - ISNULL(rd.TotalReserveMivQty, 0) \r\n                  - ISNULL(rd.TotalDelMivQty, 0) \r\n                  - ISNULL(li.NISQty, 0) \r\n                  - ISNULL(li.RejectQty, 0) \r\n                  + ISNULL(rd.TotalReturnAcceptQty, 0)) > 0\r\n    ORDER BY Items.ItemId, li.LocItemID;\r\nEND\r\n\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetLocItemOFSelectedItemID_FOR_ISSUE_VOUCHER' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetLocItemOFSelectedItemID_FOR_ISSUE_VOUCHER2]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetLocItemOFSelectedItemID_FOR_ISSUE_VOUCHER2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetLocItemOFSelectedItemID_FOR_ISSUE_VOUCHER2]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetLocItemOFSelectedItemID_FOR_ISSUE_VOUCHER2]\r\n    @ItemIds VARCHAR(MAX)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Filter LocItemID related to selected ItemId only\r\n    ;WITH CTE_RequestData AS\r\n    (\r\n        SELECT \r\n            li.LocItemID,\r\n            SUM(req.ReserveMivQty) AS TotalReserveMivQty,\r\n            SUM(req.DelMivQty) AS TotalDelMivQty,\r\n            SUM(li.NISQty) AS NISQty,\r\n            SUM(li.RejectQty) AS RejectQty,\r\n            SUM(req.DelMrvQty * -1) AS TotalReturnAcceptQty\r\n        FROM \r\n            LocItems AS li\r\n        LEFT OUTER JOIN Requests AS req ON li.LocItemID = req.LocItemID\r\n        WHERE li.ItemId IN (SELECT value FROM STRING_SPLIT(@ItemIds, ','))\r\n        GROUP BY \r\n            li.LocItemID\r\n    )\r\n    SELECT \r\n        Items.ItemId,\r\n        li.LocItemID,\r\n        Items.Tag,\r\n        Items.Description,\r\n        li.Qty AS QtyInLoc,  -- Each LocItemID will have its own QtyInLoc\r\n        li.Qty \r\n            - ISNULL(rd.TotalReserveMivQty, 0) \r\n            - ISNULL(rd.TotalDelMivQty, 0) \r\n            - ISNULL(li.NISQty, 0) \r\n            - ISNULL(li.RejectQty, 0) \r\n            - ISNULL(rd.TotalReturnAcceptQty, 0) AS Balance, -- Calculate Balance per LocItemID\r\n        pl.PLName AS PL,          -- Add PL field\r\n        pl.Project as Project,\r\n\t\tp.PK AS PK,              -- Add PK field\r\n        --pl.DesciplineId AS Discipline, -- Add Discipline field\r\n        d.DesciplineName AS Discipline, -- Add DesciplineName from Disciplines table\r\n        Items.BatchNo AS BatchNo,   -- Add BatchNo field from Items\r\n        Items.HeatNo AS HeatNo,     -- Add HeatNo field from Items\r\n\t\tItems.Remark AS Remark,\r\n        loc.LocationName AS Location, -- Add Location field\r\n        Units.UnitName AS Units,        -- Add Unit field from Items\r\n        --Items.ScopeID AS Scope,      -- Add Scope field from Items\r\n        sc.ScopeName AS Scope,   -- Add ScopeName from Scope table\r\n        po.PoName AS Po         -- Add PoName field from Po table\r\n    FROM \r\n        LocItems AS li\r\n    INNER JOIN Items ON li.ItemId = Items.ItemId\r\n\tINNER JOIN Units ON Items.UnitID = Units.UnitID\r\n    LEFT JOIN CTE_RequestData AS rd ON li.LocItemID = rd.LocItemID\r\n    INNER JOIN Packages AS p ON p.PKID = Items.PKID\r\n    INNER JOIN PackingLists AS pl ON p.PLId = pl.PLId\r\n    INNER JOIN Locations AS loc ON li.LocationID = loc.LocationID\r\n    LEFT JOIN Pos AS po ON pl.PoId = po.PoId  -- Join with Po table based on PoId\r\n    LEFT JOIN Desciplines AS d ON pl.DesciplineId = d.DesciplineId  -- Join with Disciplines table\r\n    LEFT JOIN Scopes AS sc ON Items.ScopeID = sc.ScopeID  -- Join with Scope table based on ScopeID\r\n    WHERE Items.ItemId IN (SELECT value FROM STRING_SPLIT(@ItemIds, ','))\r\n    AND (li.Qty   - ISNULL(rd.TotalReserveMivQty, 0) \r\n                  - ISNULL(rd.TotalDelMivQty, 0) \r\n                  - ISNULL(li.NISQty, 0) \r\n                  - ISNULL(li.RejectQty, 0) \r\n                  - ISNULL(rd.TotalReturnAcceptQty, 0)) > 0\r\n    ORDER BY Items.ItemId, li.LocItemID;\r\nEND\r\n\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetLocItemOFSelectedItemID_FOR_ISSUE_VOUCHER2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetLocItemsByItemId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetLocItemsByItemId' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetLocItemsByItemId]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetLocItemsByItemId]\r\n    @ItemId INT\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    SELECT\r\n        LocItemID,\r\n        LocationID,\r\n        ItemId,\r\n        Qty,\r\n        OverQty,\r\n        ShortageQty,\r\n        DamageQty,\r\n        RejectQty,\r\n        NISQty,\r\n        EnteredBy,\r\n        EnteredDate,\r\n        EditedBy,\r\n        EditedDate\r\n    FROM LocItems\r\n    WHERE ItemId = @ItemId;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetLocItemsByItemId' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetMivDataByRequestNO]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetMivDataByRequestNO' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetMivDataByRequestNO]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetMivDataByRequestNO]\r\n    @MivNumber NVARCHAR(50)\r\nAS\r\nBEGIN\r\n    -- جلوگیری از ارسال تعداد ردیف‌های متاثر شده به کلاینت\r\n    SET NOCOUNT ON;\r\n\r\n    SELECT \r\n        Items.Tag, \r\n        Items.Description, \r\n        Requests.TypeID, \r\n        Requests.RequestNO, \r\n        Requests.ReqDate, \r\n        Requests.MRCNO, \r\n        Packages.PK, \r\n        PackingLists.PLName, \r\n        Items.ItemOfPk, \r\n        Units.UnitName,\r\n        Companies.CompanyName,\r\n        -- جمع کردن ReqMivQty برای هر LocItemID که مربوط به یک ItemID است\r\n        SUM(Requests.ReqMivQty) AS ReqMivQty,\r\n        Items.Remark\r\n    FROM \r\n        LocItems \r\n        INNER JOIN Items ON LocItems.ItemId = Items.ItemId \r\n        INNER JOIN Packages ON Items.PKID = Packages.PKID \r\n        INNER JOIN PackingLists ON Packages.PLId = PackingLists.PLId \r\n        INNER JOIN Requests ON LocItems.LocItemID = Requests.LocItemID \r\n        INNER JOIN Units ON Items.UnitID = Units.UnitID \r\n        INNER JOIN Companies ON Requests.CompanyID = Companies.CompanyID\r\n    WHERE \r\n        Requests.TypeID = 1 \r\n        AND Requests.RequestNO = @MivNumber\r\n    GROUP BY \r\n\t    items.ItemId,\r\n        Items.Tag, \r\n        Items.Description, \r\n        Requests.TypeID, \r\n        Requests.RequestNO, \r\n        Requests.ReqDate, \r\n        Requests.MRCNO, \r\n        Packages.PK, \r\n        PackingLists.PLName, \r\n        Items.ItemOfPk, \r\n        Units.UnitName,\r\n        Companies.CompanyName,\r\n        Requests.ReqDate,\r\n        Items.Remark\r\nEND\r\n\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetMivDataByRequestNO' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetMivDataByRequestNO_REAR]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetMivDataByRequestNO_REAR' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetMivDataByRequestNO_REAR]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetMivDataByRequestNO_REAR]\r\n    @MivNumber NVARCHAR(50)\r\nAS\r\nBEGIN\r\n    -- جلوگیری از ارسال تعداد ردیف‌های متاثر شده به کلاینت\r\n    SET NOCOUNT ON;\r\n\r\n    SELECT \r\n        Items.Tag, \r\n        Items.Description, \r\n        Requests.TypeID, \r\n        Requests.RequestNO, \r\n        Requests.ReqDate, \r\n        Requests.MRCNO, \r\n        Packages.PK, \r\n        PackingLists.PLName, \r\n        Items.ItemOfPk, \r\n        Units.UnitName,\r\n        Companies.CompanyName,\r\n        -- جمع کردن ReqMivQty برای هر LocItemID که مربوط به یک ItemID است\r\n        SUM(Requests.ReqMivQty) AS ReqMivQty,\r\n\t\tSUM(Requests.ReserveMivQty) AS ReserveMivQty,\r\n        Items.Remark,\r\n\t\tLocations.LocationName,\r\n\t\tUSERS.Username\r\n    FROM \r\n        LocItems \r\n        INNER JOIN Items ON LocItems.ItemId = Items.ItemId \r\n        INNER JOIN Packages ON Items.PKID = Packages.PKID \r\n        INNER JOIN PackingLists ON Packages.PLId = PackingLists.PLId \r\n        INNER JOIN Requests ON LocItems.LocItemID = Requests.LocItemID \r\n        INNER JOIN Units ON Items.UnitID = Units.UnitID \r\n        INNER JOIN Companies ON Requests.CompanyID = Companies.CompanyID\r\n\t\tINNER JOIN Locations ON Locations.LocationID=LocItems.LocationID\r\n\t\tINNER JOIN ApplicationUser AS USERS ON USERS.UserID = Requests.IssuedBy\r\n    WHERE \r\n        Requests.TypeID = 1 \r\n        AND Requests.RequestNO = @MivNumber\r\n    GROUP BY \r\n\t    items.ItemId,\r\n\t\tLocItems.LocItemID,\r\n        Items.Tag, \r\n        Items.Description, \r\n        Requests.TypeID, \r\n        Requests.RequestNO, \r\n        Requests.ReqDate, \r\n        Requests.MRCNO, \r\n        Packages.PK, \r\n        PackingLists.PLName, \r\n        Items.ItemOfPk, \r\n        Units.UnitName,\r\n        Companies.CompanyName,\r\n        Requests.ReqDate,\r\n        Items.Remark,\r\n\t    USERS.Username,\r\n\t    Locations.LocationName\r\nEND\r\n\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetMivDataByRequestNO_REAR' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetPackageById]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetPackageById' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetPackageById]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetPackageById]\r\n    @PackageId INT\r\nWITH RECOMPILE\r\nAS\r\nBEGIN\r\n    SELECT PKID, PLId, PK, NetW, GrossW, Dimension, Volume, ArrivalDate, Desciption, Remark, EnteredBy, EnteredDate, EditedBy, EditedDate, MSRNO, MSRPDF, MSRDate, MSREnteredBy, MSRStatus, MSRRev, MSRRevEnteredBy, MSRRevDate\r\n    FROM Packages WHERE PKID = @PackageId;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetPackageById' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetPackageByPK]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetPackageByPK' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetPackageByPK]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetPackageByPK]\r\n    @PK INT\r\nWITH RECOMPILE\r\nAS\r\nBEGIN\r\n    SELECT PKID, PLId, PK, NetW, GrossW, Dimension, Volume, ArrivalDate, Desciption, Remark, EnteredBy, EnteredDate, EditedBy, EditedDate, MSRNO, MSRPDF, MSRDate, MSREnteredBy, MSRStatus, MSRRev, MSRRevEnteredBy, MSRRevDate\r\n    FROM Packages\r\n    WHERE PK = @PK;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetPackageByPK' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetPackageCount]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetPackageCount' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetPackageCount]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetPackageCount]\r\n    @PLId INT\r\nAS\r\nBEGIN\r\n    SELECT COUNT(1) FROM Packages WHERE PLId = @PLId;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetPackageCount' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetPackageId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetPackageId' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetPackageId]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetPackageId]\r\n    @PLId INT,\r\n    @PK INT\r\nAS\r\nBEGIN\r\n    SELECT PKID FROM Packages WHERE PLId = @PLId AND PK = @PK;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetPackageId' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetPackagePKByPKID]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetPackagePKByPKID' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetPackagePKByPKID]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetPackagePKByPKID]\r\n    @PackageId INT\r\nAS\r\nBEGIN\r\n    SELECT PK FROM Packages WHERE PKID = @PackageId;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetPackagePKByPKID' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetPackagesByPLId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetPackagesByPLId' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetPackagesByPLId]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetPackagesByPLId]\r\n    @PLId INT\r\nAS\r\nBEGIN\r\n    SELECT PKID, PLId, PK, NetW, GrossW, Dimension, Volume, ArrivalDate, Desciption, Remark, EnteredBy, EnteredDate, EditedBy, EditedDate, MSRNO, MSRPDF, MSRDate, MSREnteredBy, MSRStatus, MSRRev, MSRRevEnteredBy, MSRRevDate\r\n    FROM Packages WHERE PLId = @PLId;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetPackagesByPLId' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetPackingListById]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetPackingListById' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetPackingListById]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","\r\nCREATE PROCEDURE [dbo].[GetPackingListById]\r\n    @PlId INT\r\nAS\r\nBEGIN\r\n    SELECT * FROM PackingLists WHERE PlId = @PlId;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetPackingListById' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetPackingListByPlName]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetPackingListByPlName' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetPackingListByPlName]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","\r\nCREATE PROCEDURE [dbo].[GetPackingListByPlName]\r\n    @PlName NVARCHAR(255)\r\nAS\r\nBEGIN\r\n    SELECT * FROM PackingLists WHERE PLName = @PlName;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetPackingListByPlName' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetPackingListsWithoutPackages]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetPackingListsWithoutPackages' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetPackingListsWithoutPackages]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetPackingListsWithoutPackages]\r\nAS\r\nBEGIN\r\n    SELECT \r\n        PL.PLId, \r\n        PL.PLName\r\n    FROM \r\n        PackingLists PL\r\n    LEFT JOIN \r\n        Packages PKG ON PL.PLId = PKG.PLId\r\n    WHERE \r\n        PKG.PLId IS NULL\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetPackingListsWithoutPackages' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetTotalIssueRecordCount]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetTotalIssueRecordCount' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetTotalIssueRecordCount]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[GetTotalIssueRecordCount]\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    SELECT COUNT(*)\r\n    FROM \r\n    (\r\n        -- اجرای query مشابهی که در Stored Procedure اصلی استفاده می‌شود\r\n        SELECT \r\n            ISNULL(SUM(li.Qty), 0) \r\n                - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n                - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                - ISNULL(SUM(li.NISQty), 0) \r\n                - ISNULL(SUM(li.RejectQty), 0) \r\n                + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Balance\r\n        FROM \r\n            Items\r\n        LEFT OUTER JOIN LocItems AS li ON Items.ItemId = li.ItemId\r\n        LEFT OUTER JOIN \r\n        (\r\n            SELECT \r\n                li.LocItemID,\r\n                SUM(req.ReserveMivQty) AS TotalReserveMivQty,\r\n                SUM(req.DelMivQty) AS TotalDelMivQty,\r\n                SUM(li.NISQty) AS NISQty,\r\n                SUM(li.RejectQty) AS RejectQty,\r\n                SUM(req.DelMrvQty * -1) AS TotalReturnAcceptQty\r\n            FROM \r\n                LocItems AS li\r\n            LEFT OUTER JOIN Requests AS req ON li.LocItemID = req.LocItemID\r\n            GROUP BY \r\n                li.LocItemID\r\n        ) AS rd ON li.LocItemID = rd.LocItemID\r\n        GROUP BY \r\n            Items.ItemId,\r\n            Items.ScopeID,\r\n            Items.UnitID,\r\n            Items.PKID,\r\n            Items.Tag,\r\n            Items.Description,\r\n            Items.HeatNo,\r\n            Items.BatchNo,\r\n            Items.Remark,\r\n            Items.Hold\r\n        HAVING \r\n            ISNULL(SUM(li.Qty), 0) \r\n                - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n                - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                - ISNULL(SUM(li.NISQty), 0) \r\n                - ISNULL(SUM(li.RejectQty), 0) \r\n                + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) > 0\r\n    ) AS CountedItems;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetTotalIssueRecordCount' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[GetTotalItemsRecordCount]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetTotalItemsRecordCount' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[GetTotalItemsRecordCount]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","\r\ncreate PROCEDURE [dbo].[GetTotalItemsRecordCount]\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- تعداد ردیف‌های جدول Items را برمی‌گرداند\r\n    SELECT COUNT(*)\r\n    FROM Items;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='GetTotalItemsRecordCount' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[InsertMRVBatch]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='InsertMRVBatch' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[InsertMRVBatch]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[InsertMRVBatch]\r\n    @CompanyID INT,\r\n    @ContractId INT,\r\n    @MRVNO NVARCHAR(50),\r\n    @AreaUnitID INT,\r\n    @IssuedBy INT,\r\n    @DelDate DATETIME,\r\n    @RequestMrvs dbo.NewMRVDtoType READONLY\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n    \r\n    -- Check for duplicate MRVNO and CompanyID\r\n    IF EXISTS (SELECT 1 FROM Requests WHERE MRVNO = @MRVNO AND CompanyID = @CompanyID)\r\n    BEGIN\r\n        -- Return error message if duplicate\r\n        RAISERROR('Duplicate MRV number for the specified company.', 16, 1);\r\n        RETURN;\r\n    END\r\n\r\n    DECLARE @NextMRVNumber INT;\r\n\r\n    BEGIN TRANSACTION;\r\n\r\n    -- Get the last MRV number and start from 1 if no MRV exists\r\n    SELECT TOP 1 @NextMRVNumber = TRY_CAST(RequestNo AS INT) + 1\r\n    FROM Requests\r\n    WHERE TypeId = 2 AND TRY_CAST(RequestNo AS INT) IS NOT NULL\r\n    ORDER BY TRY_CAST(RequestNo AS INT) DESC;\r\n\r\n    -- If NULL, start from 1\r\n    IF @NextMRVNumber IS NULL\r\n        SET @NextMRVNumber = 1;\r\n\r\n    -- Insert requests with TypeId = 2 and increment MRV numbers\r\n    INSERT INTO Requests (CompanyID, ContractId, MRVNO, AreaUnitID, ReqMrvQty, DelMrvQty, LocItemID,DelMrvRejQty,Remark,RequestNO, TypeId, IssuedBy, DelDate)\r\n    SELECT \r\n        @CompanyID,\r\n        @ContractId,\r\n        @MRVNO,\r\n        @AreaUnitID,\r\n        ReqMrvQty,\r\n        DelMrvQty,\r\n        LocItemID,\r\n\t\tDelMrvRejQty,\r\n\t\tRemark,\r\n        FORMAT(@NextMRVNumber, 'D6'),\r\n        2,  -- Set TypeId to 2\r\n        @IssuedBy,\r\n        @DelDate\r\n    FROM @RequestMrvs;\r\n\r\n    COMMIT TRANSACTION;\r\n\r\n    -- Return the new MRV numbers\r\n    SELECT DISTINCT FORMAT(@NextMRVNumber, 'D6') AS NewMRVNumber\r\n    FROM @RequestMrvs;\r\n\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='InsertMRVBatch' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[InsertMRVBatch2]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='InsertMRVBatch2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[InsertMRVBatch2]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[InsertMRVBatch2]\r\n    @CompanyID INT,\r\n    @ContractId INT,\r\n    @MRVNO NVARCHAR(50),\r\n    @AreaUnitID INT,\r\n    @IssuedBy INT,\r\n    @DelDate DATETIME,\r\n    @RequestMrvs dbo.NewMRVDtoType READONLY\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n    \r\n    -- Check for duplicate MRVNO and CompanyID\r\n    IF EXISTS (SELECT 1 FROM Requests WHERE MRVNO = @MRVNO AND CompanyID = @CompanyID)\r\n    BEGIN\r\n        -- Return error message if duplicate\r\n        RAISERROR('Duplicate MRV number for the specified company.', 16, 1);\r\n        RETURN;\r\n    END\r\n\r\n    DECLARE @NextMRVNumber INT;\r\n    DECLARE @LocItemTVP dbo.IntLocItemsList;  -- TVP برای LocItemIDs\r\n    DECLARE @LocItemID INT;\r\n    DECLARE @NewLocationId INT;\r\n\r\n    BEGIN TRANSACTION;\r\n\r\n    -- Get the last MRV number and start from 1 if no MRV exists\r\n    SELECT TOP 1 @NextMRVNumber = TRY_CAST(RequestNo AS INT) + 1\r\n    FROM Requests\r\n    WHERE TypeId = 2 AND TRY_CAST(RequestNo AS INT) IS NOT NULL\r\n    ORDER BY TRY_CAST(RequestNo AS INT) DESC;\r\n\r\n    -- If NULL, start from 1\r\n    IF @NextMRVNumber IS NULL\r\n        SET @NextMRVNumber = 1;\r\n\r\n    -- Insert requests with TypeId = 2 and increment MRV numbers\r\n    INSERT INTO Requests (CompanyID, ContractId, MRVNO, AreaUnitID, ReqMrvQty, DelMrvQty, LocItemID, DelMrvRejQty, Remark, RequestNO, TypeId, IssuedBy, DelDate)\r\n    SELECT \r\n        @CompanyID,\r\n        @ContractId,\r\n        @MRVNO,\r\n        @AreaUnitID,\r\n        ReqMrvQty,\r\n        DelMrvQty,\r\n        LocItemID,\r\n        DelMrvRejQty,\r\n        Remark,\r\n        FORMAT(@NextMRVNumber, 'D6'),\r\n        2,  -- Set TypeId to 2\r\n        @IssuedBy,\r\n        @DelDate\r\n    FROM @RequestMrvs;\r\n\r\n    -- Iterate through the rows in @RequestMrvs and update locations\r\n    DECLARE cur CURSOR FOR \r\n    SELECT LocItemID, ISNULL(SelectedLocation, 0) AS SelectedLocation\r\n    FROM @RequestMrvs;\r\n\r\n    OPEN cur;\r\n\r\n    FETCH NEXT FROM cur INTO @LocItemID, @NewLocationId;\r\n\r\n    WHILE @@FETCH_STATUS = 0\r\n    BEGIN\r\n        IF @NewLocationId != 0\r\n        BEGIN\r\n            -- Clear the TVP table variable before inserting\r\n            DELETE FROM @LocItemTVP;\r\n            \r\n            -- Insert the LocItemID into the TVP\r\n            INSERT INTO @LocItemTVP (Value)\r\n            VALUES (@LocItemID);\r\n            \r\n            -- Call the spUpdateLocItemsLocation procedure\r\n            EXEC dbo.spUpdateLocItemsLocation @LocItemIds = @LocItemTVP, @NewLocationId = @NewLocationId;\r\n        END\r\n        FETCH NEXT FROM cur INTO @LocItemID, @NewLocationId;\r\n    END\r\n\r\n    CLOSE cur;\r\n    DEALLOCATE cur;\r\n\r\n    COMMIT TRANSACTION;\r\n\r\n    -- Return the new MRV numbers\r\n    SELECT DISTINCT FORMAT(@NextMRVNumber, 'D6') AS NewMRVNumber\r\n    FROM @RequestMrvs;\r\n\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='InsertMRVBatch2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[InsertMRVBatch3]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='InsertMRVBatch3' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[InsertMRVBatch3]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[InsertMRVBatch3]\r\n    @CompanyID INT,\r\n    @ContractId INT,\r\n    @MRVNO NVARCHAR(50),\r\n    @AreaUnitID INT,\r\n    @IssuedBy INT,\r\n    @DelDate DATETIME,\r\n    @RequestMrvs dbo.NewMRVDtoType READONLY\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n    \r\n    -- Check for duplicate MRVNO and CompanyID\r\n    IF EXISTS (SELECT 1 FROM Requests WHERE MRVNO = @MRVNO AND CompanyID = @CompanyID)\r\n    BEGIN\r\n        RAISERROR('Duplicate MRV number for the specified company.', 16, 1);\r\n        RETURN;\r\n    END\r\n\r\n    DECLARE @NextMRVNumber INT;\r\n    DECLARE @LocItemID INT;\r\n    DECLARE @SelectedLocation INT;\r\n    DECLARE @Qty DECIMAL(18, 2);\r\n    DECLARE @CurrentBalance DECIMAL(18, 2);\r\n    DECLARE @ItemId INT; -- Added to store ItemId\r\n\r\n    BEGIN TRANSACTION;\r\n\r\n    -- Get the last MRV number and start from 1 if no MRV exists\r\n    SELECT TOP 1 @NextMRVNumber = TRY_CAST(RequestNo AS INT) + 1\r\n    FROM Requests\r\n    WHERE TypeId = 2 AND TRY_CAST(RequestNo AS INT) IS NOT NULL\r\n    ORDER BY TRY_CAST(RequestNo AS INT) DESC;\r\n\r\n    -- If NULL, start from 1\r\n    IF @NextMRVNumber IS NULL\r\n        SET @NextMRVNumber = 1;\r\n\r\n    -- Insert requests with TypeId = 2 and increment MRV numbers\r\n    INSERT INTO Requests (CompanyID, ContractId, MRVNO, AreaUnitID, ReqMrvQty, DelMrvQty, LocItemID, DelMrvRejQty, Remark, RequestNO, TypeId, IssuedBy, DelDate)\r\n    SELECT \r\n        @CompanyID,\r\n        @ContractId,\r\n        @MRVNO,\r\n        @AreaUnitID,\r\n        ReqMrvQty,\r\n        DelMrvQty,\r\n        LocItemID,\r\n        DelMrvRejQty,\r\n        Remark,\r\n        FORMAT(@NextMRVNumber, 'D6'),\r\n        2,\r\n        @IssuedBy,\r\n        @DelDate\r\n    FROM @RequestMrvs;\r\n\r\n    -- Iterate through the rows in @RequestMrvs\r\n    DECLARE cur CURSOR FOR \r\n    SELECT LocItemID, ISNULL(SelectedLocation, 0) AS SelectedLocation, DelMrvQty \r\n    FROM @RequestMrvs;\r\n\r\n    OPEN cur;\r\n\r\n    FETCH NEXT FROM cur INTO @LocItemID, @SelectedLocation, @Qty;\r\n\r\n    WHILE @@FETCH_STATUS = 0\r\n    BEGIN\r\n        -- Check current balance for the LocItemID\r\n        SELECT @CurrentBalance = Qty FROM LocItems WHERE LocItemID = @LocItemID;\r\n\r\n        -- Fetch ItemId from LocItems\r\n        SELECT @ItemId = ItemId FROM LocItems WHERE LocItemID = @LocItemID;\r\n\r\n        IF @SelectedLocation != 0\r\n        BEGIN\r\n            -- Call the spUpdateBalanceAndInsertLocItem2 procedure to handle updates and insertions\r\n            EXEC dbo.spUpdateBalanceAndInsertLocItem3\r\n                @ItemId = @ItemId,\r\n                @LocItemID = @LocItemID,\r\n                @Qty = @Qty,\r\n                @LocationID = @SelectedLocation,\r\n                @CurrentBalance = @CurrentBalance,\r\n                @EnteredBy = @IssuedBy;\r\n        END\r\n\r\n        FETCH NEXT FROM cur INTO @LocItemID, @SelectedLocation, @Qty;\r\n    END\r\n\r\n    CLOSE cur;\r\n    DEALLOCATE cur;\r\n\r\n    COMMIT TRANSACTION;\r\n\r\n    -- Return the new MRV numbers\r\n    SELECT DISTINCT FORMAT(@NextMRVNumber, 'D6') AS NewMRVNumber\r\n    FROM @RequestMrvs;\r\n\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='InsertMRVBatch3' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[InsertMRVBatch4]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='InsertMRVBatch4' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[InsertMRVBatch4]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","create PROCEDURE [dbo].[InsertMRVBatch4]\r\n    @CompanyID INT,\r\n    @ContractId INT,\r\n    @MRVNO NVARCHAR(50),\r\n    @AreaUnitID INT,\r\n    @IssuedBy INT,\r\n    @DelDate DATETIME,\r\n    @RequestMrvs dbo.NewMRVDtoType READONLY\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n    \r\n    -- Check for duplicate MRVNO and CompanyID\r\n    IF EXISTS (SELECT 1 FROM Requests WHERE MRVNO = @MRVNO AND CompanyID = @CompanyID)\r\n    BEGIN\r\n        RAISERROR('Duplicate MRV number for the specified company.', 16, 1);\r\n        RETURN;\r\n    END\r\n\r\n    DECLARE @NextMRVNumber INT;\r\n    DECLARE @LocItemID INT;\r\n    DECLARE @SelectedLocation INT;\r\n    DECLARE @DelMrvQty DECIMAL(18, 2);\r\n    DECLARE @DelMrvRejQty DECIMAL(18, 2); -- اضافه شد\r\n    DECLARE @CurrentBalance DECIMAL(18, 2);\r\n    DECLARE @ItemId INT;\r\n\r\n    BEGIN TRANSACTION;\r\n\r\n    -- Get the last MRV number and start from 1 if no MRV exists\r\n    SELECT TOP 1 @NextMRVNumber = TRY_CAST(RequestNo AS INT) + 1\r\n    FROM Requests\r\n    WHERE TypeId = 2 AND TRY_CAST(RequestNo AS INT) IS NOT NULL\r\n    ORDER BY TRY_CAST(RequestNo AS INT) DESC;\r\n\r\n    IF @NextMRVNumber IS NULL\r\n        SET @NextMRVNumber = 1;\r\n\r\n    -- Insert requests with TypeId = 2 and increment MRV numbers\r\n    INSERT INTO Requests (CompanyID, ContractId, MRVNO, AreaUnitID, ReqMrvQty, DelMrvQty, LocItemID, DelMrvRejQty, Remark, RequestNO, TypeId, IssuedBy, DelDate)\r\n    SELECT \r\n        @CompanyID,\r\n        @ContractId,\r\n        @MRVNO,\r\n        @AreaUnitID,\r\n        ReqMrvQty,\r\n        DelMrvQty,\r\n        LocItemID,\r\n        DelMrvRejQty,\r\n        Remark,\r\n        FORMAT(@NextMRVNumber, 'D6'),\r\n        2,\r\n        @IssuedBy,\r\n        @DelDate\r\n    FROM @RequestMrvs;\r\n\r\n    -- Iterate through the rows in @RequestMrvs\r\n    DECLARE cur CURSOR FOR \r\n    SELECT LocItemID, ISNULL(SelectedLocation, 0) AS SelectedLocation, DelMrvQty, DelMrvRejQty -- اضافه شد\r\n    FROM @RequestMrvs;\r\n\r\n    OPEN cur;\r\n\r\n    FETCH NEXT FROM cur INTO @LocItemID, @SelectedLocation, @DelMrvQty, @DelMrvRejQty; -- اضافه شد\r\n\r\n    WHILE @@FETCH_STATUS = 0\r\n    BEGIN\r\n        -- Check current balance for the LocItemID\r\n        SELECT @CurrentBalance = Qty FROM LocItems WHERE LocItemID = @LocItemID;\r\n\r\n        -- Fetch ItemId from LocItems\r\n        SELECT @ItemId = ItemId FROM LocItems WHERE LocItemID = @LocItemID;\r\n\r\n        IF @SelectedLocation != 0\r\n        BEGIN\r\n            -- Call the spUpdateBalanceAndInsertLocItem3 procedure to handle updates and insertions\r\n            EXEC dbo.spUpdateBalanceAndInsertLocItem4\r\n                @ItemId = @ItemId,\r\n                @LocItemID = @LocItemID,\r\n                @DelMrvQty = @DelMrvQty, -- ارسال DelMrvQty\r\n                @DelMrvRejQty = @DelMrvRejQty, -- ارسال DelMrvRejQty\r\n                @LocationID = @SelectedLocation,\r\n                @CurrentBalance = @CurrentBalance,\r\n                @EnteredBy = @IssuedBy;\r\n        END\r\n\r\n        FETCH NEXT FROM cur INTO @LocItemID, @SelectedLocation, @DelMrvQty, @DelMrvRejQty;\r\n    END\r\n\r\n    CLOSE cur;\r\n    DEALLOCATE cur;\r\n\r\n    COMMIT TRANSACTION;\r\n\r\n    -- Return the new MRV numbers\r\n    SELECT DISTINCT FORMAT(@NextMRVNumber, 'D6') AS NewMRVNumber\r\n    FROM @RequestMrvs;\r\n\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='InsertMRVBatch4' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[InsertMRVBatch5]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='InsertMRVBatch5' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[InsertMRVBatch5]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[InsertMRVBatch5]\r\n    @CompanyID INT,\r\n    @ContractId INT,\r\n    @MRVNO NVARCHAR(50),\r\n    @AreaUnitID INT,\r\n    @IssuedBy INT,\r\n    @DelDate DATETIME,\r\n    @RequestMrvs dbo.NewMRVDtoType4 READONLY\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    DECLARE @NextMRVNumber INT;\r\n    DECLARE @LocItemID INT;\r\n    DECLARE @SelectedLocation INT;\r\n    DECLARE @DelMrvQty DECIMAL(18, 2);\r\n    DECLARE @DelMrvRejQty DECIMAL(18, 2);\r\n    DECLARE @CurrentBalance DECIMAL(18, 2);\r\n    DECLARE @ItemId INT;\r\n    DECLARE @Remark NVARCHAR(300);\r\n    DECLARE @Status NVARCHAR(50);  -- ??????? ???? ?????? ?????\r\n\r\n    BEGIN TRANSACTION;\r\n\r\n    -- Get the last MRV number and start from 1 if no MRV exists\r\n    SELECT TOP 1 @NextMRVNumber = TRY_CAST(RequestNo AS INT) + 1\r\n    FROM Requests\r\n    WHERE TypeId = 2 AND TRY_CAST(RequestNo AS INT) IS NOT NULL\r\n    ORDER BY TRY_CAST(RequestNo AS INT) DESC;\r\n\r\n    IF @NextMRVNumber IS NULL\r\n        SET @NextMRVNumber = 1;\r\n\r\n    INSERT INTO Requests (CompanyID, ContractId, MRVNO, AreaUnitID, ReqMrvQty, DelMrvQty, LocItemID, DelMrvRejQty, Remark, RequestNO,MRCNO, TypeId, IssuedBy, DelDate)\r\n    SELECT \r\n        @CompanyID,\r\n        @ContractId,\r\n        @MRVNO,\r\n        @AreaUnitID,\r\n        ReqMrvQty,\r\n        DelMrvQty,\r\n        LocItemID,\r\n        DelMrvRejQty,\r\n        Remark,\r\n        FORMAT(@NextMRVNumber, 'D6'),\r\n\t\tMRCNO,\r\n        2,\r\n        @IssuedBy,\r\n        @DelDate\r\n    FROM @RequestMrvs;\r\n\r\n    DECLARE cur CURSOR FOR \r\n    SELECT LocItemID, ISNULL(SelectedLocation, 0) AS SelectedLocation, DelMrvQty, DelMrvRejQty, Remark\r\n    FROM @RequestMrvs;\r\n\r\n    OPEN cur;\r\n\r\n    FETCH NEXT FROM cur INTO @LocItemID, @SelectedLocation, @DelMrvQty, @DelMrvRejQty, @Remark;\r\n\r\n    WHILE @@FETCH_STATUS = 0\r\n    BEGIN\r\n        SELECT @CurrentBalance = Qty FROM LocItems WHERE LocItemID = @LocItemID;\r\n        SELECT @ItemId = ItemId FROM LocItems WHERE LocItemID = @LocItemID;\r\n\r\n        IF @SelectedLocation != 0\r\n        BEGIN\r\n            -- Call spUpdateBalanceAndInsertLocItem5 procedure\r\n            EXEC dbo.spUpdateBalanceAndInsertLocItem5\r\n                @ItemId = @ItemId,\r\n                @LocItemID = @LocItemID,\r\n                @DelMrvQty = @DelMrvQty,\r\n                @DelMrvRejQty = @DelMrvRejQty,\r\n                @LocationID = @SelectedLocation,\r\n                @CurrentBalance = @CurrentBalance,\r\n                @EnteredBy = @IssuedBy,\r\n                @Remark = @Remark,\r\n                @Status = @Status OUTPUT;  -- ?????? ?????\r\n        END\r\n\r\n        FETCH NEXT FROM cur INTO @LocItemID, @SelectedLocation, @DelMrvQty, @DelMrvRejQty, @Remark;\r\n    END\r\n\r\n    CLOSE cur;\r\n    DEALLOCATE cur;\r\n\r\n    COMMIT TRANSACTION;\r\n\r\n    -- Return the new MRV number\r\n    SELECT FORMAT(@NextMRVNumber, 'D6') AS NewMRVNumber, @Status AS Status;  -- ????????? ????? MRV ? ?????\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='InsertMRVBatch5' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[InsertMRVBatch55]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='InsertMRVBatch55' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[InsertMRVBatch55]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","\r\nCREATE PROCEDURE [dbo].[InsertMRVBatch55]\r\n    @CompanyID INT,--id مربوط به پیمانکار\r\n    @ContractId INT, -- id مربوط به شماره قراداد پیمانکار\r\n    @MRVNO NVARCHAR(50),-- نام mrv\r\n    @AreaUnitID INT,-- مربوط به کدام unitدر سایت پالایشگاه هست\r\n    @IssuedBy INT,-- توسط چه کسی\r\n    @DelDate DATETIME, -- در چه تاریخی\r\n    @RequestMrvs dbo.NewMRVDtoType4 READONLY -- شامل ReqMrvQty - تعداد درخواست , DelMrvQty -تعدادی که واقعا گرفته شده , DelMrvRejQty -تعدادی که گرفته شده ولی مشکل دارد , LocitemID , Remark , MRCNO -داخل این من شماره miv رو ذخیره کردم, SelectedLocation - مربوط به لوکیشن\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    DECLARE @NextMRVNumber INT;\r\n    DECLARE @LocItemID INT;\r\n    DECLARE @SelectedLocation INT;\r\n    DECLARE @DelMrvQty DECIMAL(18, 2);\r\n    DECLARE @DelMrvRejQty DECIMAL(18, 2);\r\n    DECLARE @CurrentBalance DECIMAL(18, 2);\r\n    DECLARE @ItemId INT;\r\n    DECLARE @Remark NVARCHAR(300);\r\n    DECLARE @MRCNO NVARCHAR(50);  \r\n    DECLARE @Status NVARCHAR(50);  \r\n    DECLARE @FormattedMRVNumber NVARCHAR(50); -- برای نگهداری فرمت‌شده MRVNumber\r\n\r\n    BEGIN TRANSACTION;\r\n\r\n    -- دریافت شماره MRV بعدی\r\n    SELECT TOP 1 @NextMRVNumber = TRY_CAST(RequestNo AS INT) + 1\r\n    FROM Requests\r\n    WHERE TypeId = 2 AND TRY_CAST(RequestNo AS INT) IS NOT NULL\r\n    ORDER BY TRY_CAST(RequestNo AS INT) DESC;\r\n\r\n    IF @NextMRVNumber IS NULL\r\n        SET @NextMRVNumber = 1;\r\n\r\n    -- وارد کردن اطلاعات به Requests\r\n    INSERT INTO Requests (CompanyID, ContractId, MRVNO, AreaUnitID, ReqMrvQty, DelMrvQty, LocItemID, DelMrvRejQty, Remark, RequestNO, MRCNO, TypeId, IssuedBy, DelDate)\r\n    SELECT \r\n        @CompanyID,\r\n        @ContractId,\r\n        @MRVNO,\r\n        @AreaUnitID,\r\n        ReqMrvQty,\r\n        DelMrvQty,\r\n        LocItemID,\r\n        DelMrvRejQty,\r\n        Remark,\r\n        FORMAT(@NextMRVNumber, 'D6'),\r\n        MRCNO,\r\n        2,\r\n        @IssuedBy,\r\n        @DelDate\r\n    FROM @RequestMrvs;\r\n\r\n    -- پیمایش داده‌ها در CURSOR\r\n    DECLARE cur CURSOR FOR \r\n    SELECT LocItemID, ISNULL(SelectedLocation, 0) AS SelectedLocation, DelMrvQty, DelMrvRejQty, Remark, MRCNO\r\n    FROM @RequestMrvs;\r\n\r\n    OPEN cur;\r\n\r\n    FETCH NEXT FROM cur INTO @LocItemID, @SelectedLocation, @DelMrvQty, @DelMrvRejQty, @Remark, @MRCNO;\r\n\r\n    WHILE @@FETCH_STATUS = 0\r\n    BEGIN\r\n        -- دریافت موجودی فعلی و ItemId برای LocItemID\r\n        SELECT @CurrentBalance = Qty FROM LocItems WHERE LocItemID = @LocItemID;\r\n        SELECT @ItemId = ItemId FROM LocItems WHERE LocItemID = @LocItemID;\r\n\r\n        -- فرمت کردن MRVNumber برای هر LocItemID\r\n        SET @FormattedMRVNumber = FORMAT(@NextMRVNumber, 'D6');\r\n\r\n        IF @SelectedLocation != 0\r\n        BEGIN\r\n            -- فراخوانی پروسیجر spUpdateBalanceAndInsertLocItem55 با پارامترهای مورد نیاز\r\n            EXEC dbo.spUpdateBalanceAndInsertLocItem55\r\n                @COMPANYID = @CompanyID,\r\n                @ItemId = @ItemId,\r\n                @LocItemID = @LocItemID,\r\n                @DelMrvQty = @DelMrvQty,\r\n                @DelMrvRejQty = @DelMrvRejQty,\r\n                @LocationID = @SelectedLocation,\r\n                @CurrentBalance = @CurrentBalance,\r\n                @EnteredBy = @IssuedBy,\r\n                @Remark = @Remark,\r\n                @REQUESTNOO = @MRCNO,\r\n                @MRVNumber = @FormattedMRVNumber,  -- ارسال MRVNumber فرمت‌شده\r\n                @Status = @Status OUTPUT;\r\n        END\r\n\r\n        -- افزایش مقدار @NextMRVNumber برای LocItemID بعدی\r\n        SET @NextMRVNumber = @NextMRVNumber + 1;\r\n\r\n        FETCH NEXT FROM cur INTO @LocItemID, @SelectedLocation, @DelMrvQty, @DelMrvRejQty, @Remark, @MRCNO;\r\n    END\r\n\r\n    CLOSE cur;\r\n    DEALLOCATE cur;\r\n\r\n    COMMIT TRANSACTION;\r\n\r\n    -- بازگرداندن شماره جدید MRV و وضعیت\r\n    SELECT FORMAT(@NextMRVNumber - 1, 'D6') AS NewMRVNumber, @Status AS Status;  \r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='InsertMRVBatch55' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[InsertMRVBatch6]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='InsertMRVBatch6' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[InsertMRVBatch6]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[InsertMRVBatch6]\r\n    @CompanyID INT,\r\n    @ContractId INT,\r\n    @MRVNO NVARCHAR(50),\r\n    @AreaUnitID INT,\r\n    @IssuedBy INT,\r\n    @DelDate DATETIME,\r\n    @RequestMrvs dbo.NewMRVDtoType4 READONLY\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    DECLARE @NextMRVNumber INT;\r\n    DECLARE @LocItemID INT;\r\n    DECLARE @SelectedLocation INT;\r\n    DECLARE @DelMrvQty DECIMAL(18, 2);\r\n    DECLARE @DelMrvRejQty DECIMAL(18, 2);\r\n    DECLARE @CurrentBalance DECIMAL(18, 2);\r\n    DECLARE @ItemId INT;\r\n    DECLARE @Remark NVARCHAR(300);\r\n    DECLARE @NewLocItemID INT;  -- LocItemID جدید که برای لوکیشن جدید ایجاد می‌شود\r\n    DECLARE @Status NVARCHAR(50);\r\n\r\n    BEGIN TRANSACTION;\r\n\r\n    -- دریافت آخرین شماره MRV\r\n    SELECT TOP 1 @NextMRVNumber = TRY_CAST(RequestNo AS INT) + 1\r\n    FROM Requests\r\n    WHERE TypeId = 2 AND TRY_CAST(RequestNo AS INT) IS NOT NULL\r\n    ORDER BY TRY_CAST(RequestNo AS INT) DESC;\r\n\r\n    IF @NextMRVNumber IS NULL\r\n        SET @NextMRVNumber = 1;\r\n\r\n    -- درج رکوردهای جدید در Requests\r\n    INSERT INTO Requests (CompanyID, ContractId, MRVNO, AreaUnitID, ReqMrvQty, DelMrvQty, LocItemID, DelMrvRejQty, Remark, RequestNO, MRCNO, TypeId, IssuedBy, DelDate)\r\n    SELECT \r\n        @CompanyID,\r\n        @ContractId,\r\n        @MRVNO,\r\n        @AreaUnitID,\r\n        ReqMrvQty,\r\n        DelMrvQty,\r\n        LocItemID,\r\n        DelMrvRejQty,\r\n        Remark,\r\n        FORMAT(@NextMRVNumber, 'D6'),\r\n        MRCNO,\r\n        2,\r\n        @IssuedBy,\r\n        @DelDate\r\n    FROM @RequestMrvs;\r\n\r\n    -- ایجاد cursor برای پردازش مقادیر هر رکورد\r\n    DECLARE cur CURSOR FOR \r\n    SELECT LocItemID, ISNULL(SelectedLocation, 0) AS SelectedLocation, DelMrvQty, DelMrvRejQty, Remark\r\n    FROM @RequestMrvs;\r\n\r\n    OPEN cur;\r\n\r\n    FETCH NEXT FROM cur INTO @LocItemID, @SelectedLocation, @DelMrvQty, @DelMrvRejQty, @Remark;\r\n\r\n    WHILE @@FETCH_STATUS = 0\r\n    BEGIN\r\n        -- دریافت بالانس فعلی\r\n        SELECT @CurrentBalance = Qty FROM LocItems WHERE LocItemID = @LocItemID;\r\n        SELECT @ItemId = ItemId FROM LocItems WHERE LocItemID = @LocItemID;\r\n\r\n        -- اگر لوکیشن جدید انتخاب شده است\r\n        IF @SelectedLocation != 0\r\n        BEGIN\r\n            -- ایجاد LocItem جدید برای لوکیشن جدید\r\n            INSERT INTO LocItems (ItemId, LocationID, Qty, ParentLocItemID, RemarkLocitemID)\r\n            VALUES (@ItemId, @SelectedLocation, 0, @LocItemID, @Remark);\r\n\r\n            -- دریافت LocItemID جدید\r\n            SET @NewLocItemID = SCOPE_IDENTITY();\r\n\r\n            -- کاهش مقدار DelMrvQty از LocItemID اصلی\r\n            UPDATE LocItems\r\n            SET Qty = Qty - @DelMrvQty\r\n            WHERE LocItemID = @LocItemID;\r\n\r\n            -- کسر مقدار برگشتی (DelMrvRejQty) از LocItemID اصلی\r\n            IF @DelMrvRejQty > 0\r\n            BEGIN\r\n                UPDATE LocItems\r\n                SET Qty = Qty - @DelMrvRejQty\r\n                WHERE LocItemID = @LocItemID;\r\n\r\n                -- درج رکورد برای LocItemID جدید با مقدار برگشتی\r\n                INSERT INTO Requests (CompanyID, ContractId, MRVNO, AreaUnitID, ReqMrvQty, DelMrvQty, LocItemID, DelMrvRejQty, Remark, RequestNO, MRCNO, TypeId, IssuedBy, DelDate)\r\n                VALUES (@CompanyID, @ContractId, @MRVNO, @AreaUnitID, 0, 0, @NewLocItemID, @DelMrvRejQty, @Remark, FORMAT(@NextMRVNumber, 'D6'), NULL, 2, @IssuedBy, @DelDate);\r\n            END\r\n\r\n            -- درج رکورد برای LocItemID جدید با مقدار تحویلی\r\n            INSERT INTO Requests (CompanyID, ContractId, MRVNO, AreaUnitID, ReqMrvQty, DelMrvQty, LocItemID, DelMrvRejQty, Remark, RequestNO, MRCNO, TypeId, IssuedBy, DelDate)\r\n            VALUES (@CompanyID, @ContractId, @MRVNO, @AreaUnitID, 0, @DelMrvQty, @NewLocItemID, 0, @Remark, FORMAT(@NextMRVNumber, 'D6'), NULL, 2, @IssuedBy, @DelDate);\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            -- اگر لوکیشن تغییر نکرده است، فقط مقدار برگشتی را در LocItemID اصلی ثبت کن\r\n            IF @DelMrvRejQty > 0\r\n            BEGIN\r\n                UPDATE LocItems\r\n                SET Qty = Qty - @DelMrvRejQty\r\n                WHERE LocItemID = @LocItemID;\r\n\r\n                -- ثبت مقدار برگشتی در Requests\r\n                INSERT INTO Requests (CompanyID, ContractId, MRVNO, AreaUnitID, ReqMrvQty, DelMrvQty, LocItemID, DelMrvRejQty, Remark, RequestNO, MRCNO, TypeId, IssuedBy, DelDate)\r\n                VALUES (@CompanyID, @ContractId, @MRVNO, @AreaUnitID, 0, 0, @LocItemID, @DelMrvRejQty, @Remark, FORMAT(@NextMRVNumber, 'D6'), NULL, 2, @IssuedBy, @DelDate);\r\n            END\r\n\r\n            -- ثبت مقدار تحویلی در همان LocItemID\r\n            UPDATE LocItems\r\n            SET Qty = Qty - @DelMrvQty\r\n            WHERE LocItemID = @LocItemID;\r\n\r\n            -- ثبت مقدار تحویلی در Requests\r\n            INSERT INTO Requests (CompanyID, ContractId, MRVNO, AreaUnitID, ReqMrvQty, DelMrvQty, LocItemID, DelMrvRejQty, Remark, RequestNO, MRCNO, TypeId, IssuedBy, DelDate)\r\n            VALUES (@CompanyID, @ContractId, @MRVNO, @AreaUnitID, 0, @DelMrvQty, @LocItemID, 0, @Remark, FORMAT(@NextMRVNumber, 'D6'), NULL, 2, @IssuedBy, @DelDate);\r\n        END\r\n\r\n        FETCH NEXT FROM cur INTO @LocItemID, @SelectedLocation, @DelMrvQty, @DelMrvRejQty, @Remark;\r\n    END\r\n\r\n    CLOSE cur;\r\n    DEALLOCATE cur;\r\n\r\n    COMMIT TRANSACTION;\r\n\r\n    -- بازگرداندن شماره MRV جدید\r\n    SELECT FORMAT(@NextMRVNumber, 'D6') AS NewMRVNumber, @Status AS Status;\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='InsertMRVBatch6' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[InsertRequestBatch]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='InsertRequestBatch' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[InsertRequestBatch]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[InsertRequestBatch]\r\n    @CompanyID INT,\r\n    @ContractId INT,\r\n    @MRCNO NVARCHAR(50),\r\n    @AreaUnitID INT,\r\n    @IssuedBy INT,  -- اضافه کردن IssuedBy\r\n    @RequestMivs NewRequestDtoType READONLY\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n    DECLARE @NextMIVNumber INT;\r\n\r\n    BEGIN TRANSACTION;\r\n\r\n    -- گرفتن آخرین شماره MIV و شروع از 1 اگر MIV وجود نداشت\r\n    SELECT TOP 1 @NextMIVNumber = TRY_CAST(RequestNo AS INT) + 1\r\n    FROM Requests\r\n    WHERE TypeId = 1 AND TRY_CAST(RequestNo AS INT) IS NOT NULL\r\n    ORDER BY TRY_CAST(RequestNo AS INT) DESC;\r\n\r\n    -- اگر مقدار NULL است از 1 شروع کن\r\n    IF @NextMIVNumber IS NULL\r\n        SET @NextMIVNumber = 1;\r\n\r\n    -- وارد کردن درخواست‌ها با TypeId = 1 و شماره‌های MIV که 15 تا 15 تا افزایش می‌یابند\r\n    INSERT INTO Requests (CompanyID, ContractId, MRCNO, AreaUnitID, ReqMivQty, ReserveMivQty, LocItemID, RequestNO, TypeId, IssuedBy,IssuedDate,ReqDate)\r\n    SELECT \r\n        @CompanyID,\r\n        @ContractId,\r\n        @MRCNO,\r\n        @AreaUnitID,\r\n        ReqMivQty,\r\n        ReserveMivQty,\r\n        LocItemID,\r\n        FORMAT(@NextMIVNumber + ((ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) - 1) / 15), 'D6'),\r\n        1,  -- مقدار TypeId را به 1 تنظیم می‌کنیم\r\n        @IssuedBy,\r\n\t\tGETDATE(),\r\n\t\tGETDATE()\r\n    FROM @RequestMivs;\r\n\r\n    COMMIT TRANSACTION;\r\n\r\n    -- بازگرداندن شماره‌های جدید MIV\r\n    SELECT DISTINCT FORMAT(@NextMIVNumber + ((ROW_NUMBER() OVER (ORDER BY (SELECT NULL)) - 1) / 15), 'D6') AS NewMIVNumber\r\n    FROM @RequestMivs;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='InsertRequestBatch' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[InsertRequestMivsBatch]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='InsertRequestMivsBatch' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[InsertRequestMivsBatch]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[InsertRequestMivsBatch]\r\n    @RequestMivs RequestDtoType READONLY\r\nAS\r\nBEGIN\r\n    INSERT INTO Requests (CompanyID, ContractId, MRCNO, AreaUnitID, ReqMivQty, ReserveMivQty, LocItemID, RequestNO)\r\n    SELECT CompanyID, ContractId, MRCNO, AreaUnitID, ReqMivQty, ReserveMivQty, LocItemID, RequestNO\r\n    FROM @RequestMivs;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='InsertRequestMivsBatch' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[IsLocationUsedByItem]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='IsLocationUsedByItem' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[IsLocationUsedByItem]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[IsLocationUsedByItem]\r\n    @LocationID INT,\r\n    @ItemId INT\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- Check if the locationID is used by any LocItem of the specified ItemId\r\n    IF EXISTS (\r\n        SELECT 1\r\n        FROM LocItems\r\n        WHERE LocationID = @LocationID\r\n          AND ItemId = @ItemId\r\n    )\r\n    BEGIN\r\n        -- Location is used by at least one LocItem of the specified ItemId\r\n        SELECT 1 AS IsUsed;\r\n    END\r\n    ELSE\r\n    BEGIN\r\n        -- Location is not used by any LocItem of the specified ItemId\r\n        SELECT 0 AS IsUsed;\r\n    END\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='IsLocationUsedByItem' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[PDFSsectionIRN]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='PDFSsectionIRN' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[PDFSsectionIRN]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[PDFSsectionIRN]\r\nAS\r\nBEGIN\r\nSELECT DISTINCT IrnName, IrnPdf AS DPF, EnteredDate\r\nFROM     Irns\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='PDFSsectionIRN' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[PDFSsectionMIV]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='PDFSsectionMIV' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[PDFSsectionMIV]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","create PROCEDURE [dbo].[PDFSsectionMIV]\r\nAS\r\nBEGIN\r\nSELECT DISTINCT \r\n    Requests.RequestNO, \r\n    Requests.RequestPDF as DPF, \r\n    Requests.MRCNO, \r\n    Requests.MRVNO, \r\n    Requests.HMVNO, \r\n    IssuedByUser.Username AS IssuedBy,\r\n\tRequests.IssuedDate, \r\n    ApprovedByUser.Username AS ApprovedBy,\r\n    Requests.ApprovedDate\r\nFROM Requests\r\nLEFT JOIN ApplicationUser AS IssuedByUser \r\n    ON Requests.IssuedBy = IssuedByUser.UserID\r\nLEFT JOIN ApplicationUser AS ApprovedByUser \r\n    ON Requests.ApprovedBy = ApprovedByUser.UserID\r\n\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='PDFSsectionMIV' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[PDFSsectionPL]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='PDFSsectionPL' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[PDFSsectionPL]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[PDFSsectionPL]\r\nAS\r\nBEGIN\r\nSELECT DISTINCT PackingLists.PLName, PackingLists.PLDPF AS DPF, ApplicationUser.Username as EnteredBy, PackingLists.EnteredDate\r\nFROM     PackingLists left JOIN\r\n                  ApplicationUser ON PackingLists.EnteredBy = ApplicationUser.UserID\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='PDFSsectionPL' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[RegisterMSR]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='RegisterMSR' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[RegisterMSR]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE  [dbo].[RegisterMSR]\r\n    @PLId INT,\r\n\t@userID INT,\r\n    @NewMSRNo NVARCHAR(10) OUTPUT\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    DECLARE @LastMSRNo NVARCHAR(10);\r\n    DECLARE @NextMSRNo NVARCHAR(10);\r\n\r\n    -- دریافت آخرین شماره MSR از جدول Packages\r\n    SELECT TOP 1 @LastMSRNo = MSRNO\r\n    FROM Packages\r\n    WHERE MSRNO IS NOT NULL\r\n    ORDER BY CAST(MSRNO AS INT) DESC;\r\n\r\n    -- تولید شماره جدید (افزایش به عدد 6 رقمی)\r\n    IF @LastMSRNo IS NOT NULL\r\n        SET @NextMSRNo = RIGHT('000000' + CAST(CAST(@LastMSRNo AS INT) + 1 AS NVARCHAR), 6);\r\n    ELSE\r\n        SET @NextMSRNo = '000001'; -- اولین شماره در صورت نبود مقدار\r\n\r\n    -- به‌روزرسانی ستون MSRNO و MSRDate برای PLId مشخص‌شده\r\n    UPDATE Packages\r\n    SET \r\n        MSRNO = @NextMSRNo,\r\n        MSRDate = GETDATE(),\r\n\t    MSREnteredBy=@userID\r\n    WHERE PLId = @PLId;\r\n\r\n    -- بازگشت شماره جدید\r\n    SET @NewMSRNo = @NextMSRNo;\r\nEND;\r\n\r\n\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='RegisterMSR' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[Search_ChangeLocitem]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_ChangeLocitem' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[Search_ChangeLocitem]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[Search_ChangeLocitem]\r\nAS\r\nBEGIN\r\n    BEGIN TRY\r\n        SET NOCOUNT ON;\r\n\r\n        ;WITH CTE_RequestData AS\r\n        (\r\n            SELECT \r\n                li.LocItemID,\r\n                li.LocationID, -- Add LocationID\r\n                SUM(req.ReserveMivQty) AS TotalReserveMivQty,\r\n                SUM(req.DelMivQty) AS TotalDelMivQty,\r\n                SUM(li.NISQty) AS NISQty,\r\n\t\t\t\tSUM(li.OverQty) AS OverQty,\r\n\t\t\t\tSUM(li.ShortageQty) AS ShortageQty,\r\n\t\t\t\tSUM(li.DamageQty) AS DamageQty,\r\n                SUM(li.RejectQty) AS RejectQty,\r\n                SUM(req.DelMrvQty * -1) AS TotalReturnAcceptQty, \r\n                SUM(req.ReqMivQty) AS TotalReqMivQty\r\n            FROM \r\n                LocItems AS li\r\n            LEFT OUTER JOIN Requests AS req ON li.LocItemID = req.LocItemID\r\n            GROUP BY \r\n                li.LocItemID,\r\n                li.LocationID -- Add LocationID to group by\r\n        ),\r\n        CTE_FilteredItems AS\r\n        (\r\n            SELECT \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold,\r\n\t\t\t\tItems.ExpiredDate,\r\n                li.LocItemID, -- Add LocItemID\r\n                li.LocationID, -- Add LocationID\r\n                ISNULL(SUM(li.Qty), 0) AS Qty, \r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Balance,\r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Inventory,\r\n                SUM(rd.TotalReturnAcceptQty) AS TotalReturnAcceptQty,\r\n                SUM(rd.TotalReqMivQty) AS ReqMivQty,\r\n                SUM(rd.TotalDelMivQty) AS DelMivQty,\r\n                SUM(rd.TotalReserveMivQty) AS ReserveMivQty,\r\n                SUM(li.NISQty) AS NISQty,\r\n                SUM(li.RejectQty) AS RejectQty\r\n            FROM \r\n                Items\r\n            LEFT OUTER JOIN LocItems AS li ON Items.ItemId = li.ItemId\r\n            LEFT OUTER JOIN CTE_RequestData AS rd ON li.LocItemID = rd.LocItemID\r\n            GROUP BY \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold,\r\n\t\t\t\tItems.ExpiredDate,\r\n                li.LocItemID, -- Group by LocItemID\r\n                li.LocationID -- Group by LocationID\r\n        )\r\n        SELECT \r\n            p.ArrivalDate,\r\n\t\t\tpl.ArchiveNO,\r\n\t\t\tpl.MARDate,\r\n\t\t\tpl.OPINO,\r\n\t\t\tpl.PLNO,\r\n            pl.Project,\r\n            po.PoName,\r\n            v.VendorName AS Vendor,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n\t\t\tItems.ExpiredDate,\r\n            fi.Tag,\r\n            fi.Description,\r\n            u.UnitName,\r\n            ISNULL(SUM(Items.Qty), 0) AS QtyPL,\r\n            MAX(fi.Qty) AS QtyInLoc, \r\n            MAX(fi.Balance) AS Balance,\r\n            MAX(fi.Inventory) AS Inventory,\r\n            d.DesciplineName AS Discipline,\r\n            sc.ScopeName AS Scope,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold,\r\n\t\t\tMAX(fi.TotalReturnAcceptQty) AS TotalReturnAcceptQty,\r\n            MAX(fi.ReqMivQty) AS ReqMivQty,\r\n            MAX(fi.DelMivQty) AS DelMivQty,\r\n            MAX(fi.ReserveMivQty) AS ReserveMivQty,\r\n\t\t\tISNULL(SUM(fi.NISQty), 0) AS NISQty, \r\n\t\t\tISNULL(SUM(fi.RejectQty), 0) AS RejectQty, \r\n\t\t\tISNULL(SUM(li.OverQty), 0) AS OverQty, \r\n\t\t\tISNULL(SUM(li.ShortageQty), 0) AS ShortageQty, \r\n\t\t\tISNULL(SUM(li.DamageQty), 0) AS DamageQty, \r\n            s.SupplierName AS Supplier, -- Adding SupplierName from Supplier table\r\n            fi.LocItemID, -- Add LocItemID to final select\r\n            loc.LocationName, -- Add LocationName from Location table\r\n\t\t\tloc.LocationID\r\n        FROM \r\n            CTE_FilteredItems AS fi\r\n        INNER JOIN Items ON fi.ItemId = Items.ItemId\r\n        LEFT OUTER JOIN LocItems AS li ON fi.LocItemID = li.LocItemID -- Join LocItems for LocItemID\r\n        LEFT OUTER JOIN Locations AS loc ON li.LocationID = loc.LocationID -- Join Locations for LocationName\r\n        LEFT OUTER JOIN Packages AS p ON Items.PKID = p.PKID\r\n        LEFT OUTER JOIN PackingLists AS pl ON p.PLId = pl.PLId\r\n        LEFT OUTER JOIN Pos AS po ON pl.PoId = po.PoId\r\n        LEFT OUTER JOIN Units AS u ON Items.UnitID = u.UnitID\r\n        LEFT OUTER JOIN Vendors AS v ON pl.VendorId = v.VendorID\r\n        LEFT OUTER JOIN Desciplines AS d ON pl.DesciplineId = d.DesciplineId\r\n        LEFT OUTER JOIN Scopes AS sc ON Items.ScopeID = sc.ScopeID\r\n        LEFT OUTER JOIN Suppliers AS s ON pl.SupplierId = s.SupplierId -- Joining Supplier table\r\n        GROUP BY \r\n            p.ArrivalDate,\r\n\t\t    pl.ArchiveNO,\r\n\t\t\tpl.MARDate,\r\n\t\t\tpl.OPINO,\r\n            pl.PLNO,\r\n            pl.Project,\r\n            po.PoName,\r\n            v.VendorName,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n\t\t\tItems.ExpiredDate,\r\n            fi.Tag,\r\n            fi.Description,\r\n            u.UnitName,\r\n            sc.ScopeName,\r\n            d.DesciplineName,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold,\r\n            pl.DesciplineId,\r\n            s.SupplierName, -- Adding Group By for SupplierName\r\n            fi.LocItemID, -- Group by LocItemID\r\n            loc.LocationName, -- Group by LocationName\r\n            loc.LocationID\r\n\t\t--ORDER BY fi.ItemId\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @ErrorMessage NVARCHAR(4000);\r\n        DECLARE @ErrorSeverity INT;\r\n        DECLARE @ErrorState INT;\r\n\r\n        SELECT \r\n            @ErrorMessage = ERROR_MESSAGE(),\r\n            @ErrorSeverity = ERROR_SEVERITY(),\r\n            @ErrorState = ERROR_STATE();\r\n\r\n        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);\r\n    END CATCH\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_ChangeLocitem' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[Search_ChangeLocitem2]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_ChangeLocitem2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[Search_ChangeLocitem2]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[Search_ChangeLocitem2]\r\nAS\r\nBEGIN\r\n    BEGIN TRY\r\n        SET NOCOUNT ON;\r\n\r\n        ;WITH CTE_RequestData AS\r\n        (\r\n            SELECT \r\n                li.LocItemID,\r\n                --li.LocationID, -- Add LocationID\r\n                SUM(req.ReserveMivQty) AS TotalReserveMivQty,\r\n                SUM(req.DelMivQty) AS TotalDelMivQty,\r\n                SUM(li.NISQty) AS NISQty,\r\n\t\t\t\tSUM(li.OverQty) AS OverQty,\r\n\t\t\t\tSUM(li.ShortageQty) AS ShortageQty,\r\n\t\t\t\tSUM(li.DamageQty) AS DamageQty,\r\n                SUM(li.RejectQty) AS RejectQty,\r\n                SUM(req.DelMrvQty * -1) AS TotalReturnAcceptQty, \r\n                SUM(req.ReqMivQty) AS TotalReqMivQty\r\n            FROM \r\n                LocItems AS li\r\n            LEFT OUTER JOIN Requests AS req ON li.LocItemID = req.LocItemID\r\n            GROUP BY \r\n                li.LocItemID--,\r\n                --li.LocationID -- Add LocationID to group by\r\n        ),\r\n        CTE_FilteredItems AS\r\n        (\r\n            SELECT \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold,\r\n\t\t\t\tItems.ExpiredDate,\r\n                li.LocItemID, -- Add LocItemID\r\n                li.LocationID, -- Add LocationID\r\n                ISNULL(SUM(li.Qty), 0) AS Qty, \r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    - ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Balance,\r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    - ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Inventory,\r\n                SUM(rd.TotalReturnAcceptQty) AS TotalReturnAcceptQty,\r\n                SUM(rd.TotalReqMivQty) AS ReqMivQty,\r\n                SUM(rd.TotalDelMivQty) AS DelMivQty,\r\n                SUM(rd.TotalReserveMivQty) AS ReserveMivQty,\r\n                SUM(li.NISQty) AS NISQty,\r\n                SUM(li.RejectQty) AS RejectQty\r\n            FROM \r\n                Items\r\n            LEFT OUTER JOIN LocItems AS li ON Items.ItemId = li.ItemId\r\n            LEFT OUTER JOIN CTE_RequestData AS rd ON li.LocItemID = rd.LocItemID\r\n            GROUP BY \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold,\r\n\t\t\t\tItems.ExpiredDate,\r\n                li.LocItemID, -- Group by LocItemID\r\n                li.LocationID -- Group by LocationID\r\n        )\r\n        SELECT \r\n            p.ArrivalDate,\r\n\t\t\tpl.ArchiveNO,\r\n\t\t\tpl.MARDate,\r\n\t\t\tpl.OPINO,\r\n\t\t\tpl.PLNO,\r\n            pl.Project,\r\n            po.PoName,\r\n            v.VendorName AS Vendor,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n\t\t\tItems.ExpiredDate,\r\n            fi.Tag,\r\n            fi.Description,\r\n            u.UnitName,\r\n            ISNULL(SUM(Items.Qty), 0) AS QtyPL,\r\n            ISNULL(SUM(fi.Qty),0) AS QtyInLoc, \r\n            ISNULL(SUM(fi.Balance),0) AS Balance,\r\n            ISNULL(SUM(fi.Inventory),0) AS Inventory,\r\n            d.DesciplineName AS Discipline,\r\n            sc.ScopeName AS Scope,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold,\r\n\t\t\tISNULL(SUM(fi.TotalReturnAcceptQty),0) AS TotalReturnAcceptQty,\r\n            ISNULL(SUM(fi.ReqMivQty),0) AS ReqMivQty,\r\n            ISNULL(SUM(fi.DelMivQty),0) AS DelMivQty,\r\n            ISNULL(SUM(fi.ReserveMivQty),0) AS ReserveMivQty,\r\n\t\t\tISNULL(SUM(fi.NISQty), 0) AS NISQty, \r\n\t\t\tISNULL(SUM(fi.RejectQty), 0) AS RejectQty, \r\n\t\t\tISNULL(SUM(li.OverQty), 0) AS OverQty, \r\n\t\t\tISNULL(SUM(li.ShortageQty), 0) AS ShortageQty, \r\n\t\t\tISNULL(SUM(li.DamageQty), 0) AS DamageQty, \r\n            s.SupplierName AS Supplier, -- Adding SupplierName from Supplier table\r\n            fi.LocItemID, -- Add LocItemID to final select\r\n            loc.LocationName, -- Add LocationName from Location table\r\n\t\t\tloc.LocationID\r\n        FROM \r\n            CTE_FilteredItems AS fi\r\n        INNER JOIN Items ON fi.ItemId = Items.ItemId\r\n        LEFT OUTER JOIN LocItems AS li ON fi.LocItemID = li.LocItemID -- Join LocItems for LocItemID\r\n        LEFT OUTER JOIN Locations AS loc ON li.LocationID = loc.LocationID -- Join Locations for LocationName\r\n        LEFT OUTER JOIN Packages AS p ON Items.PKID = p.PKID\r\n        LEFT OUTER JOIN PackingLists AS pl ON p.PLId = pl.PLId\r\n        LEFT OUTER JOIN Pos AS po ON pl.PoId = po.PoId\r\n        LEFT OUTER JOIN Units AS u ON Items.UnitID = u.UnitID\r\n        LEFT OUTER JOIN Vendors AS v ON pl.VendorId = v.VendorID\r\n        LEFT OUTER JOIN Desciplines AS d ON pl.DesciplineId = d.DesciplineId\r\n        LEFT OUTER JOIN Scopes AS sc ON Items.ScopeID = sc.ScopeID\r\n        LEFT OUTER JOIN Suppliers AS s ON pl.SupplierId = s.SupplierId -- Joining Supplier table\r\n        GROUP BY \r\n            p.ArrivalDate,\r\n\t\t    pl.ArchiveNO,\r\n\t\t\tpl.MARDate,\r\n\t\t\tpl.OPINO,\r\n            pl.PLNO,\r\n            pl.Project,\r\n            po.PoName,\r\n            v.VendorName,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n\t\t\tItems.ExpiredDate,\r\n            fi.Tag,\r\n            fi.Description,\r\n            u.UnitName,\r\n            sc.ScopeName,\r\n            d.DesciplineName,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold,\r\n            pl.DesciplineId,\r\n            s.SupplierName, -- Adding Group By for SupplierName\r\n            fi.LocItemID, -- Group by LocItemID\r\n            loc.LocationName, -- Group by LocationName\r\n            loc.LocationID\r\n\t\t--ORDER BY fi.ItemId\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @ErrorMessage NVARCHAR(4000);\r\n        DECLARE @ErrorSeverity INT;\r\n        DECLARE @ErrorState INT;\r\n\r\n        SELECT \r\n            @ErrorMessage = ERROR_MESSAGE(),\r\n            @ErrorSeverity = ERROR_SEVERITY(),\r\n            @ErrorState = ERROR_STATE();\r\n\r\n        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);\r\n    END CATCH\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_ChangeLocitem2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[Search_ChangeLocitem3]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_ChangeLocitem3' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[Search_ChangeLocitem3]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[Search_ChangeLocitem3]\r\nAS\r\nBEGIN\r\n    BEGIN TRY\r\n        SET NOCOUNT ON;\r\n\r\n        ;WITH CTE_RequestData AS\r\n        (\r\n            SELECT \r\n                li.LocItemID,\r\n                --li.LocationID, -- Add LocationID\r\n                SUM(req.ReserveMivQty) AS TotalReserveMivQty,\r\n                SUM(req.DelMivQty) AS TotalDelMivQty,\r\n\t\t\t\tSUM(req.DelMivRejQty) AS TotalDelMivRejQty,\r\n                SUM(li.NISQty) AS NISQty,\r\n\t\t\t\tSUM(li.OverQty) AS OverQty,\r\n\t\t\t\tSUM(li.ShortageQty) AS ShortageQty,\r\n\t\t\t\tSUM(li.DamageQty) AS DamageQty,\r\n                SUM(li.RejectQty) AS RejectQty,\r\n                SUM(req.DelMrvQty * -1) AS TotalReturnAcceptQty,\r\n\t\t\t\tSUM(req.DelMrvRejQty * -1) AS TotalDelMrvRejQty,\r\n                SUM(req.ReqMivQty) AS TotalReqMivQty\r\n            FROM \r\n                LocItems AS li\r\n            LEFT OUTER JOIN Requests AS req ON li.LocItemID = req.LocItemID\r\n            GROUP BY \r\n                li.LocItemID--,\r\n                --li.LocationID -- Add LocationID to group by\r\n        ),\r\n        CTE_FilteredItems AS\r\n        (\r\n            SELECT \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold,\r\n\t\t\t\tItems.ExpiredDate,\r\n                li.LocItemID, -- Add LocItemID\r\n                li.LocationID, -- Add LocationID\r\n                ISNULL(SUM(li.Qty), 0) AS Qty, \r\n\t\t\t\tISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(rd.TotalReturnAcceptQty), 0)\r\n\t\t\t\t\t- ISNULL(SUM(rd.TotalDelMivRejQty),0)\r\n\t\t\t\t    - ISNULL(SUM(rd.TotalDelMrvRejQty),0) AS BalanceWithRejectAndNIS,\r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(rd.TotalReturnAcceptQty), 0)\r\n\t\t\t\t\t- ISNULL(SUM(rd.TotalDelMivRejQty),0)\r\n\t\t\t\t    - ISNULL(SUM(rd.TotalDelMrvRejQty),0) AS BalanceWithReject,\r\n\t\t\t    ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    - ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Balance,\r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    - ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Inventory,\r\n                SUM(rd.TotalReturnAcceptQty) AS TotalReturnAcceptQty,\r\n                SUM(rd.TotalReqMivQty) AS ReqMivQty,\r\n                SUM(rd.TotalDelMivQty) AS DelMivQty,\r\n                SUM(rd.TotalReserveMivQty) AS ReserveMivQty,\r\n\t\t\t\tSUM(rd.TotalDelMivRejQty) AS TotalDelMivRejQty,\r\n\t\t\t\tSUM(rd.TotalDelMrvRejQty) AS TotalDelMrvRejQty,\r\n                SUM(li.NISQty) AS NISQty,\r\n                SUM(li.RejectQty) AS RejectQty\r\n            FROM \r\n                Items\r\n            LEFT OUTER JOIN LocItems AS li ON Items.ItemId = li.ItemId\r\n            LEFT OUTER JOIN CTE_RequestData AS rd ON li.LocItemID = rd.LocItemID\r\n            GROUP BY \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold,\r\n\t\t\t\tItems.ExpiredDate,\r\n                li.LocItemID, -- Group by LocItemID\r\n                li.LocationID -- Group by LocationID\r\n        )\r\n        SELECT \r\n            p.ArrivalDate,\r\n\t\t\tpl.ArchiveNO,\r\n\t\t\tpl.MARDate,\r\n\t\t\tpl.OPINO,\r\n\t\t\tpl.PLNO,\r\n            pl.Project,\r\n            po.PoName,\r\n            v.VendorName AS Vendor,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n\t\t\tItems.ExpiredDate,\r\n            fi.Tag,\r\n            fi.Description,\r\n            u.UnitName,\r\n            ISNULL(SUM(Items.Qty), 0) AS QtyPL,\r\n            ISNULL(SUM(fi.Qty),0) AS QtyInLoc, \r\n            ISNULL(SUM(fi.BalanceWithRejectAndNIS),0) AS BalanceWithRejectAndNIS,\r\n\t\t\tISNULL(SUM(fi.BalanceWithReject),0) AS BalanceWithReject,\r\n            ISNULL(SUM(fi.Balance),0) AS Balance,\r\n            ISNULL(SUM(fi.Inventory),0) AS Inventory,\r\n            d.DesciplineName AS Discipline,\r\n            sc.ScopeName AS Scope,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold,\r\n\t\t\tISNULL(SUM(fi.TotalReturnAcceptQty),0) AS ReturnQty,\r\n            ISNULL(SUM(fi.ReqMivQty),0) AS ReqMivQty,\r\n            ISNULL(SUM(fi.DelMivQty),0) AS DelMivQty,\r\n            ISNULL(SUM(fi.ReserveMivQty),0) AS ReserveMivQty,\r\n\t\t\tISNULL(SUM(fi.NISQty), 0) AS NISQty, \r\n\t\t\tISNULL(SUM(fi.RejectQty), 0) AS RejectQty, \r\n\t\t\tISNULL(SUM(fi.TotalDelMivRejQty), 0) AS DelMivRejQty, \r\n\t\t\tISNULL(SUM(fi.TotalDelMrvRejQty), 0) AS DelMrvRejQty, \r\n\t\t\tISNULL(SUM(li.OverQty), 0) AS OverQty, \r\n\t\t\tISNULL(SUM(li.ShortageQty), 0) AS ShortageQty, \r\n\t\t\tISNULL(SUM(li.DamageQty), 0) AS DamageQty, \r\n            s.SupplierName AS Supplier, -- Adding SupplierName from Supplier table\r\n            fi.LocItemID, -- Add LocItemID to final select\r\n            loc.LocationName, -- Add LocationName from Location table\r\n\t\t\tloc.LocationID\r\n        FROM \r\n            CTE_FilteredItems AS fi\r\n        INNER JOIN Items ON fi.ItemId = Items.ItemId\r\n        LEFT OUTER JOIN LocItems AS li ON fi.LocItemID = li.LocItemID -- Join LocItems for LocItemID\r\n        LEFT OUTER JOIN Locations AS loc ON li.LocationID = loc.LocationID -- Join Locations for LocationName\r\n        LEFT OUTER JOIN Packages AS p ON Items.PKID = p.PKID\r\n        LEFT OUTER JOIN PackingLists AS pl ON p.PLId = pl.PLId\r\n        LEFT OUTER JOIN Pos AS po ON pl.PoId = po.PoId\r\n        LEFT OUTER JOIN Units AS u ON Items.UnitID = u.UnitID\r\n        LEFT OUTER JOIN Vendors AS v ON pl.VendorId = v.VendorID\r\n        LEFT OUTER JOIN Desciplines AS d ON pl.DesciplineId = d.DesciplineId\r\n        LEFT OUTER JOIN Scopes AS sc ON Items.ScopeID = sc.ScopeID\r\n        LEFT OUTER JOIN Suppliers AS s ON pl.SupplierId = s.SupplierId -- Joining Supplier table\r\n        GROUP BY \r\n            p.ArrivalDate,\r\n\t\t    pl.ArchiveNO,\r\n\t\t\tpl.MARDate,\r\n\t\t\tpl.OPINO,\r\n            pl.PLNO,\r\n            pl.Project,\r\n            po.PoName,\r\n            v.VendorName,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n\t\t\tItems.ExpiredDate,\r\n            fi.Tag,\r\n            fi.Description,\r\n            u.UnitName,\r\n            sc.ScopeName,\r\n            d.DesciplineName,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold,\r\n            pl.DesciplineId,\r\n            s.SupplierName, -- Adding Group By for SupplierName\r\n            fi.LocItemID, -- Group by LocItemID\r\n            loc.LocationName, -- Group by LocationName\r\n            loc.LocationID\r\n\t\t--ORDER BY fi.ItemId\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @ErrorMessage NVARCHAR(4000);\r\n        DECLARE @ErrorSeverity INT;\r\n        DECLARE @ErrorState INT;\r\n\r\n        SELECT \r\n            @ErrorMessage = ERROR_MESSAGE(),\r\n            @ErrorSeverity = ERROR_SEVERITY(),\r\n            @ErrorState = ERROR_STATE();\r\n\r\n        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);\r\n    END CATCH\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_ChangeLocitem3' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[Search_ChangeLocitem4]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_ChangeLocitem4' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[Search_ChangeLocitem4]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","create PROCEDURE [dbo].[Search_ChangeLocitem4]\r\nAS\r\nBEGIN\r\n    BEGIN TRY\r\n        SET NOCOUNT ON;\r\n\r\n        ;WITH CTE_RequestData AS\r\n        (\r\n            SELECT \r\n                li.LocItemID,\r\n                --li.LocationID, -- Add LocationID\r\n                SUM(req.ReserveMivQty) AS TotalReserveMivQty,\r\n                SUM(req.DelMivQty) AS TotalDelMivQty,\r\n\t\t\t\tSUM(req.DelMivRejQty) AS TotalDelMivRejQty,\r\n                SUM(li.NISQty) AS NISQty,\r\n\t\t\t\tSUM(li.OverQty) AS OverQty,\r\n\t\t\t\tSUM(li.ShortageQty) AS ShortageQty,\r\n\t\t\t\tSUM(li.DamageQty) AS DamageQty,\r\n                SUM(li.RejectQty) AS RejectQty,\r\n                SUM(req.DelMrvQty * -1) AS TotalReturnAcceptQty,\r\n\t\t\t\tSUM(req.DelMrvRejQty * -1) AS TotalDelMrvRejQty,\r\n                SUM(req.ReqMivQty) AS TotalReqMivQty\r\n            FROM \r\n                LocItems AS li\r\n            LEFT OUTER JOIN Requests AS req ON li.LocItemID = req.LocItemID\r\n            GROUP BY \r\n                li.LocItemID--,\r\n                --li.LocationID -- Add LocationID to group by\r\n        ),\r\n        CTE_FilteredItems AS\r\n        (\r\n            SELECT \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold,\r\n\t\t\t\tItems.ExpiredDate,\r\n                li.LocItemID, -- Add LocItemID\r\n                li.LocationID, -- Add LocationID\r\n                ISNULL(SUM(li.Qty), 0) AS Qty, \r\n\t\t\t\tISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(rd.TotalReturnAcceptQty), 0)\r\n\t\t\t\t\t- ISNULL(SUM(rd.TotalDelMivRejQty),0)\r\n\t\t\t\t    - ISNULL(SUM(rd.TotalDelMrvRejQty),0) AS BalanceWithRejectAndNIS,\r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(rd.TotalReturnAcceptQty), 0)\r\n\t\t\t\t\t- ISNULL(SUM(rd.TotalDelMivRejQty),0)\r\n\t\t\t\t    - ISNULL(SUM(rd.TotalDelMrvRejQty),0) AS BalanceWithReject,\r\n\t\t\t    ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    - ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Balance,\r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    - ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Inventory,\r\n                SUM(rd.TotalReturnAcceptQty) AS TotalReturnAcceptQty,\r\n                SUM(rd.TotalReqMivQty) AS ReqMivQty,\r\n                SUM(rd.TotalDelMivQty) AS DelMivQty,\r\n                SUM(rd.TotalReserveMivQty) AS ReserveMivQty,\r\n\t\t\t\tSUM(rd.TotalDelMivRejQty) AS TotalDelMivRejQty,\r\n\t\t\t\tSUM(rd.TotalDelMrvRejQty) AS TotalDelMrvRejQty,\r\n                SUM(li.NISQty) AS NISQty,\r\n                SUM(li.RejectQty) AS RejectQty\r\n            FROM \r\n                Items\r\n            LEFT OUTER JOIN LocItems AS li ON Items.ItemId = li.ItemId\r\n            LEFT OUTER JOIN CTE_RequestData AS rd ON li.LocItemID = rd.LocItemID\r\n            GROUP BY \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold,\r\n\t\t\t\tItems.ExpiredDate,\r\n                li.LocItemID, -- Group by LocItemID\r\n                li.LocationID -- Group by LocationID\r\n        )\r\n        SELECT \r\n            p.ArrivalDate,\r\n\t\t\tpl.ArchiveNO,\r\n\t\t\tpl.MARDate,\r\n\t\t\tpl.OPINO,\r\n\t\t\tpl.PLNO,\r\n            pl.Project,\r\n            po.PoName,\r\n            v.VendorName AS Vendor,\r\n            fi.ItemId,\r\n\t\t\tli.ParentLocItemID,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n\t\t\tItems.ExpiredDate,\r\n            fi.Tag,\r\n            fi.Description,\r\n            u.UnitName,\r\n            ISNULL(SUM(Items.Qty), 0) AS QtyPL,\r\n            ISNULL(SUM(fi.Qty),0) AS QtyInLoc, \r\n            ISNULL(SUM(fi.BalanceWithRejectAndNIS),0) AS BalanceWithRejectAndNIS,\r\n\t\t\tISNULL(SUM(fi.BalanceWithReject),0) AS BalanceWithReject,\r\n            ISNULL(SUM(fi.Balance),0) AS Balance,\r\n            ISNULL(SUM(fi.Inventory),0) AS Inventory,\r\n            d.DesciplineName AS Discipline,\r\n            sc.ScopeName AS Scope,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold,\r\n\t\t\tISNULL(SUM(fi.TotalReturnAcceptQty),0) AS ReturnQty,\r\n            ISNULL(SUM(fi.ReqMivQty),0) AS ReqMivQty,\r\n            ISNULL(SUM(fi.DelMivQty),0) AS DelMivQty,\r\n            ISNULL(SUM(fi.ReserveMivQty),0) AS ReserveMivQty,\r\n\t\t\tISNULL(SUM(fi.NISQty), 0) AS NISQty, \r\n\t\t\tISNULL(SUM(fi.RejectQty), 0) AS RejectQty, \r\n\t\t\tISNULL(SUM(fi.TotalDelMivRejQty), 0) AS DelMivRejQty, \r\n\t\t\tISNULL(SUM(fi.TotalDelMrvRejQty), 0) AS DelMrvRejQty, \r\n\t\t\tISNULL(SUM(li.OverQty), 0) AS OverQty, \r\n\t\t\tISNULL(SUM(li.ShortageQty), 0) AS ShortageQty, \r\n\t\t\tISNULL(SUM(li.DamageQty), 0) AS DamageQty, \r\n            s.SupplierName AS Supplier, -- Adding SupplierName from Supplier table\r\n            fi.LocItemID, -- Add LocItemID to final select\r\n            loc.LocationName, -- Add LocationName from Location table\r\n\t\t\tloc.LocationID\r\n        FROM \r\n            CTE_FilteredItems AS fi\r\n        INNER JOIN Items ON fi.ItemId = Items.ItemId\r\n        LEFT OUTER JOIN LocItems AS li ON fi.LocItemID = li.LocItemID -- Join LocItems for LocItemID\r\n        LEFT OUTER JOIN Locations AS loc ON li.LocationID = loc.LocationID -- Join Locations for LocationName\r\n        LEFT OUTER JOIN Packages AS p ON Items.PKID = p.PKID\r\n        LEFT OUTER JOIN PackingLists AS pl ON p.PLId = pl.PLId\r\n        LEFT OUTER JOIN Pos AS po ON pl.PoId = po.PoId\r\n        LEFT OUTER JOIN Units AS u ON Items.UnitID = u.UnitID\r\n        LEFT OUTER JOIN Vendors AS v ON pl.VendorId = v.VendorID\r\n        LEFT OUTER JOIN Desciplines AS d ON pl.DesciplineId = d.DesciplineId\r\n        LEFT OUTER JOIN Scopes AS sc ON Items.ScopeID = sc.ScopeID\r\n        LEFT OUTER JOIN Suppliers AS s ON pl.SupplierId = s.SupplierId -- Joining Supplier table\r\n        GROUP BY \r\n            p.ArrivalDate,\r\n\t\t    pl.ArchiveNO,\r\n\t\t\tpl.MARDate,\r\n\t\t\tpl.OPINO,\r\n            pl.PLNO,\r\n            pl.Project,\r\n            po.PoName,\r\n            v.VendorName,\r\n            fi.ItemId,\r\n\t\t\tli.ParentLocItemID,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n\t\t\tItems.ExpiredDate,\r\n            fi.Tag,\r\n            fi.Description,\r\n            u.UnitName,\r\n            sc.ScopeName,\r\n            d.DesciplineName,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold,\r\n            pl.DesciplineId,\r\n            s.SupplierName, -- Adding Group By for SupplierName\r\n            fi.LocItemID, -- Group by LocItemID\r\n            loc.LocationName, -- Group by LocationName\r\n            loc.LocationID\r\n\t\t--ORDER BY fi.ItemId\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @ErrorMessage NVARCHAR(4000);\r\n        DECLARE @ErrorSeverity INT;\r\n        DECLARE @ErrorState INT;\r\n\r\n        SELECT \r\n            @ErrorMessage = ERROR_MESSAGE(),\r\n            @ErrorSeverity = ERROR_SEVERITY(),\r\n            @ErrorState = ERROR_STATE();\r\n\r\n        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);\r\n    END CATCH\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_ChangeLocitem4' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[Search_ChangeLocitem5]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_ChangeLocitem5' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[Search_ChangeLocitem5]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[Search_ChangeLocitem5]\r\nAS\r\nBEGIN\r\n    BEGIN TRY\r\n        SET NOCOUNT ON;\r\n\r\n        ;WITH CTE_RequestData AS\r\n        (\r\n            SELECT \r\n                li.LocItemID,\r\n                --li.LocationID, -- Add LocationID\r\n                SUM(req.ReserveMivQty) AS TotalReserveMivQty,\r\n                SUM(req.DelMivQty) AS TotalDelMivQty,\r\n\t\t\t\tSUM(req.DelMivRejQty) AS TotalDelMivRejQty,\r\n                SUM(li.NISQty) AS NISQty,\r\n\t\t\t\tSUM(li.OverQty) AS OverQty,\r\n\t\t\t\tSUM(li.ShortageQty) AS ShortageQty,\r\n\t\t\t\tSUM(li.DamageQty) AS DamageQty,\r\n                SUM(li.RejectQty) AS RejectQty,\r\n                SUM(req.DelMrvQty * -1) AS TotalReturnAcceptQty,\r\n\t\t\t\tSUM(req.DelMrvRejQty * -1) AS TotalDelMrvRejQty,\r\n                SUM(req.ReqMivQty) AS TotalReqMivQty\r\n            FROM \r\n                LocItems AS li\r\n            LEFT OUTER JOIN Requests AS req ON li.LocItemID = req.LocItemID\r\n            GROUP BY \r\n                li.LocItemID--,\r\n                --li.LocationID -- Add LocationID to group by\r\n        ),\r\n        CTE_FilteredItems AS\r\n        (\r\n            SELECT \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold,\r\n\t\t\t\tItems.ExpiredDate,\r\n                li.LocItemID, -- Add LocItemID\r\n                li.LocationID, -- Add LocationID\r\n                ISNULL(SUM(li.Qty), 0) AS Qty, \r\n\t\t\t\tISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(rd.TotalReturnAcceptQty), 0)\r\n\t\t\t\t\t- ISNULL(SUM(rd.TotalDelMivRejQty),0)\r\n\t\t\t\t\t- ISNULL(SUM(rd.TotalDelMrvRejQty),0) AS BalanceWithRejectAndNIS,\r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(rd.TotalReturnAcceptQty), 0)\r\n\t\t\t\t\t- ISNULL(SUM(rd.TotalDelMivRejQty),0)\r\n\t\t\t\t\t- ISNULL(SUM(rd.TotalDelMrvRejQty),0) AS BalanceWithReject,\r\n\t\t\t    ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    - ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Balance,\r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    - ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Inventory,\r\n                SUM(rd.TotalReturnAcceptQty) AS TotalReturnAcceptQty,\r\n                SUM(rd.TotalReqMivQty) AS ReqMivQty,\r\n                SUM(rd.TotalDelMivQty) AS DelMivQty,\r\n                SUM(rd.TotalReserveMivQty) AS ReserveMivQty,\r\n\t\t\t\tSUM(rd.TotalDelMivRejQty) AS TotalDelMivRejQty,\r\n\t\t\t\tSUM(rd.TotalDelMrvRejQty) AS TotalDelMrvRejQty,\r\n                SUM(li.NISQty) AS NISQty,\r\n                SUM(li.RejectQty) AS RejectQty\r\n            FROM \r\n                Items\r\n            LEFT OUTER JOIN LocItems AS li ON Items.ItemId = li.ItemId\r\n            LEFT OUTER JOIN CTE_RequestData AS rd ON li.LocItemID = rd.LocItemID\r\n            GROUP BY \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold,\r\n\t\t\t\tItems.ExpiredDate,\r\n                li.LocItemID, -- Group by LocItemID\r\n                li.LocationID -- Group by LocationID\r\n        )\r\n        SELECT \r\n            p.ArrivalDate,\r\n\t\t\tpl.ArchiveNO,\r\n\t\t\tpl.MARDate,\r\n\t\t\tpl.OPINO,\r\n\t\t\tpl.PLNO,\r\n            pl.Project,\r\n            po.PoName,\r\n            v.VendorName AS Vendor,\r\n            fi.ItemId,\r\n\t\t\tli.ParentLocItemID,\r\n\t\t\tli.RemarkLocitemID,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n\t\t\tItems.ExpiredDate,\r\n            fi.Tag,\r\n            fi.Description,\r\n            u.UnitName,\r\n            ISNULL(SUM(Items.Qty), 0) AS QtyPL,\r\n            ISNULL(SUM(fi.Qty),0) AS QtyInLoc, \r\n            ISNULL(SUM(fi.BalanceWithRejectAndNIS),0) AS BalanceWithRejectAndNIS,\r\n\t\t\tISNULL(SUM(fi.BalanceWithReject),0) AS BalanceWithReject,\r\n            ISNULL(SUM(fi.Balance),0) AS Balance,\r\n            ISNULL(SUM(fi.Inventory),0) AS Inventory,\r\n            d.DesciplineName AS Discipline,\r\n            sc.ScopeName AS Scope,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold,\r\n\t\t\tISNULL(SUM(fi.TotalReturnAcceptQty),0) AS ReturnQty,\r\n            ISNULL(SUM(fi.ReqMivQty),0) AS ReqMivQty,\r\n            ISNULL(SUM(fi.DelMivQty),0) AS DelMivQty,\r\n            ISNULL(SUM(fi.ReserveMivQty),0) AS ReserveMivQty,\r\n\t\t\tISNULL(SUM(fi.NISQty), 0) AS NISQty, \r\n\t\t\tISNULL(SUM(fi.RejectQty), 0) AS RejectQty, \r\n\t\t\tISNULL(SUM(fi.TotalDelMivRejQty), 0) AS DelMivRejQty, \r\n\t\t\tISNULL(SUM(fi.TotalDelMrvRejQty), 0) AS DelMrvRejQty, \r\n\t\t\tISNULL(SUM(li.OverQty), 0) AS OverQty, \r\n\t\t\tISNULL(SUM(li.ShortageQty), 0) AS ShortageQty, \r\n\t\t\tISNULL(SUM(li.DamageQty), 0) AS DamageQty, \r\n            s.SupplierName AS Supplier, -- Adding SupplierName from Supplier table\r\n            fi.LocItemID, -- Add LocItemID to final select\r\n            loc.LocationName, -- Add LocationName from Location table\r\n\t\t\tloc.LocationID\r\n        FROM \r\n            CTE_FilteredItems AS fi\r\n        INNER JOIN Items ON fi.ItemId = Items.ItemId\r\n        LEFT OUTER JOIN LocItems AS li ON fi.LocItemID = li.LocItemID -- Join LocItems for LocItemID\r\n        LEFT OUTER JOIN Locations AS loc ON li.LocationID = loc.LocationID -- Join Locations for LocationName\r\n        LEFT OUTER JOIN Packages AS p ON Items.PKID = p.PKID\r\n        LEFT OUTER JOIN PackingLists AS pl ON p.PLId = pl.PLId\r\n        LEFT OUTER JOIN Pos AS po ON pl.PoId = po.PoId\r\n        LEFT OUTER JOIN Units AS u ON Items.UnitID = u.UnitID\r\n        LEFT OUTER JOIN Vendors AS v ON pl.VendorId = v.VendorID\r\n        LEFT OUTER JOIN Desciplines AS d ON pl.DesciplineId = d.DesciplineId\r\n        LEFT OUTER JOIN Scopes AS sc ON Items.ScopeID = sc.ScopeID\r\n        LEFT OUTER JOIN Suppliers AS s ON pl.SupplierId = s.SupplierId -- Joining Supplier table\r\n        GROUP BY \r\n            p.ArrivalDate,\r\n\t\t    pl.ArchiveNO,\r\n\t\t\tpl.MARDate,\r\n\t\t\tpl.OPINO,\r\n            pl.PLNO,\r\n            pl.Project,\r\n            po.PoName,\r\n            v.VendorName,\r\n            fi.ItemId,\r\n\t\t\tli.ParentLocItemID,\r\n\t\t\tli.RemarkLocitemID,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n\t\t\tItems.ExpiredDate,\r\n            fi.Tag,\r\n            fi.Description,\r\n            u.UnitName,\r\n            sc.ScopeName,\r\n            d.DesciplineName,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold,\r\n            pl.DesciplineId,\r\n            s.SupplierName, -- Adding Group By for SupplierName\r\n            fi.LocItemID, -- Group by LocItemID\r\n            loc.LocationName, -- Group by LocationName\r\n            loc.LocationID\r\n\t\t--ORDER BY fi.ItemId\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @ErrorMessage NVARCHAR(4000);\r\n        DECLARE @ErrorSeverity INT;\r\n        DECLARE @ErrorState INT;\r\n\r\n        SELECT \r\n            @ErrorMessage = ERROR_MESSAGE(),\r\n            @ErrorSeverity = ERROR_SEVERITY(),\r\n            @ErrorState = ERROR_STATE();\r\n\r\n        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);\r\n    END CATCH\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_ChangeLocitem5' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[Search_Item]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Item' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[Search_Item]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[Search_Item]\r\n    @PageNumber INT = 1,\r\n    @PageSize INT = 100\r\nAS\r\nBEGIN\r\n    BEGIN TRY\r\n        SET NOCOUNT ON;\r\n\r\n        ;WITH CTE_RequestData AS\r\n        (\r\n            SELECT \r\n                li.LocItemID,\r\n                SUM(req.ReserveMivQty) AS TotalReserveMivQty,\r\n                SUM(req.DelMivQty) AS TotalDelMivQty,\r\n                SUM(li.NISQty) AS NISQty,\r\n                SUM(li.RejectQty) AS RejectQty,\r\n                SUM(req.DelMrvQty * -1) AS TotalReturnAcceptQty, \r\n                SUM(req.ReqMivQty) AS TotalReqMivQty\r\n            FROM \r\n                LocItems AS li\r\n            LEFT OUTER JOIN Requests AS req ON li.LocItemID = req.LocItemID\r\n            GROUP BY \r\n                li.LocItemID\r\n        ),\r\n        CTE_FilteredItems AS\r\n        (\r\n            SELECT \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold,\r\n                ISNULL(SUM(li.Qty), 0) AS Qty, \r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Balance,\r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Inventory,\r\n                SUM(rd.TotalReturnAcceptQty) AS TotalReturnAcceptQty,\r\n                SUM(rd.TotalReqMivQty) AS ReqMivQty,\r\n                SUM(rd.TotalDelMivQty) AS DelMivQty,\r\n                SUM(rd.TotalReserveMivQty) AS ReserveMivQty,\r\n                SUM(li.NISQty) AS NISQty,\r\n                SUM(li.RejectQty) AS RejectQty\r\n            FROM \r\n                Items\r\n            LEFT OUTER JOIN LocItems AS li ON Items.ItemId = li.ItemId\r\n            LEFT OUTER JOIN CTE_RequestData AS rd ON li.LocItemID = rd.LocItemID\r\n            GROUP BY \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold\r\n        )\r\n        SELECT \r\n            p.ArrivalDate,\r\n\t\t\tpl.ArchiveNO,\r\n\t\t\tpl.MARDate,\r\n\t\t\tpl.OPINO,\r\n\t\t\tpl.PLNO,\r\n            pl.Project,\r\n            po.PoName,\r\n            v.VendorName AS Vendor,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n            fi.Tag,\r\n            fi.Description,\r\n            u.UnitName,\r\n            ISNULL(SUM(Items.Qty), 0) AS QtyPL,\r\n            MAX(fi.Qty) AS QtyInLoc, \r\n            MAX(fi.Balance) AS Balance,\r\n            MAX(fi.Inventory) AS Inventory,\r\n            d.DesciplineName AS DisciplineName,\r\n            sc.ScopeName AS ScopeName,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold,\r\n\t\t\tMAX(fi.TotalReturnAcceptQty) AS TotalReturnAcceptQty,\r\n            MAX(fi.ReqMivQty) AS ReqMivQty,\r\n            MAX(fi.DelMivQty) AS DelMivQty,\r\n            MAX(fi.ReserveMivQty) AS ReserveMivQty,\r\n            MAX(fi.NISQty) AS NISQty,\r\n            MAX(fi.RejectQty) AS RejectQty,\r\n            s.SupplierName -- Adding SupplierName from Supplier table\r\n        FROM \r\n            CTE_FilteredItems AS fi\r\n        INNER JOIN Items ON fi.ItemId = Items.ItemId\r\n        LEFT OUTER JOIN Packages AS p ON Items.PKID = p.PKID\r\n        LEFT OUTER JOIN PackingLists AS pl ON p.PLId = pl.PLId\r\n        LEFT OUTER JOIN Pos AS po ON pl.PoId = po.PoId\r\n        LEFT OUTER JOIN Units AS u ON Items.UnitID = u.UnitID\r\n        LEFT OUTER JOIN Vendors AS v ON pl.VendorId = v.VendorID\r\n        LEFT OUTER JOIN Desciplines AS d ON pl.DesciplineId = d.DesciplineId\r\n        LEFT OUTER JOIN Scopes AS sc ON Items.ScopeID = sc.ScopeID\r\n        LEFT OUTER JOIN Suppliers AS s ON pl.SupplierId = s.SupplierId -- Joining Supplier table\r\n        GROUP BY \r\n            p.ArrivalDate,\r\n\t\t    pl.ArchiveNO,\r\n\t\t\tpl.MARDate,\r\n\t\t\tpl.OPINO,\r\n            pl.PLNO,\r\n            pl.Project,\r\n            po.PoName,\r\n            v.VendorName,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n            fi.Tag,\r\n            fi.Description,\r\n            u.UnitName,\r\n            sc.ScopeName,\r\n            d.DesciplineName,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold,\r\n            pl.DesciplineId,\r\n            s.SupplierName -- Adding Group By for SupplierName\r\n        ORDER BY fi.ItemId\r\n        OFFSET @PageSize * (@PageNumber - 1) ROWS\r\n        FETCH NEXT @PageSize ROWS ONLY;\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @ErrorMessage NVARCHAR(4000);\r\n        DECLARE @ErrorSeverity INT;\r\n        DECLARE @ErrorState INT;\r\n\r\n        SELECT \r\n            @ErrorMessage = ERROR_MESSAGE(),\r\n            @ErrorSeverity = ERROR_SEVERITY(),\r\n            @ErrorState = ERROR_STATE();\r\n\r\n        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);\r\n    END CATCH\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Item' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[Search_Item2]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Item2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[Search_Item2]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[Search_Item2]\r\nAS\r\nBEGIN\r\n    BEGIN TRY\r\n        SET NOCOUNT ON;\r\n\r\n        ;WITH CTE_RequestData AS\r\n        (\r\n            SELECT \r\n                li.LocItemID,\r\n                SUM(req.ReserveMivQty) AS TotalReserveMivQty,\r\n                SUM(req.DelMivQty) AS TotalDelMivQty,\r\n                SUM(li.NISQty) AS NISQty,\r\n                SUM(li.RejectQty) AS RejectQty,\r\n                SUM(req.DelMrvQty * -1) AS TotalReturnAcceptQty, \r\n                SUM(req.ReqMivQty) AS TotalReqMivQty\r\n            FROM \r\n                LocItems AS li\r\n            LEFT OUTER JOIN Requests AS req ON li.LocItemID = req.LocItemID\r\n            GROUP BY \r\n                li.LocItemID\r\n        ),\r\n        CTE_FilteredItems AS\r\n        (\r\n            SELECT \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold,\r\n                ISNULL(SUM(li.Qty), 0) AS Qty, \r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Balance,\r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Inventory,\r\n                SUM(rd.TotalReturnAcceptQty) AS TotalReturnAcceptQty,\r\n                SUM(rd.TotalReqMivQty) AS ReqMivQty,\r\n                SUM(rd.TotalDelMivQty) AS DelMivQty,\r\n                SUM(rd.TotalReserveMivQty) AS ReserveMivQty,\r\n                SUM(li.NISQty) AS NISQty,\r\n                SUM(li.RejectQty) AS RejectQty\r\n            FROM \r\n                Items\r\n            LEFT OUTER JOIN LocItems AS li ON Items.ItemId = li.ItemId\r\n            LEFT OUTER JOIN CTE_RequestData AS rd ON li.LocItemID = rd.LocItemID\r\n            GROUP BY \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold\r\n        )\r\n        SELECT \r\n            p.ArrivalDate,\r\n\t\t\tpl.ArchiveNO,\r\n\t\t\tpl.MARDate,\r\n\t\t\tpl.OPINO,\r\n\t\t\tpl.PLNO,\r\n            pl.Project,\r\n            po.PoName,\r\n            v.VendorName AS Vendor,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n            fi.Tag,\r\n            fi.Description,\r\n            u.UnitName,\r\n            ISNULL(SUM(Items.Qty), 0) AS QtyPL,\r\n            MAX(fi.Qty) AS QtyInLoc, \r\n            MAX(fi.Balance) AS Balance,\r\n            MAX(fi.Inventory) AS Inventory,\r\n            d.DesciplineName AS Discipline,\r\n            sc.ScopeName AS Scope,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold,\r\n\t\t\tMAX(fi.TotalReturnAcceptQty) AS TotalReturnAcceptQty,\r\n            MAX(fi.ReqMivQty) AS ReqMivQty,\r\n            MAX(fi.DelMivQty) AS DelMivQty,\r\n            MAX(fi.ReserveMivQty) AS ReserveMivQty,\r\n            MAX(fi.NISQty) AS NISQty,\r\n            MAX(fi.RejectQty) AS RejectQty,\r\n            s.SupplierName AS Supplier -- Adding SupplierName from Supplier table\r\n        FROM \r\n            CTE_FilteredItems AS fi\r\n        INNER JOIN Items ON fi.ItemId = Items.ItemId\r\n        LEFT OUTER JOIN Packages AS p ON Items.PKID = p.PKID\r\n        LEFT OUTER JOIN PackingLists AS pl ON p.PLId = pl.PLId\r\n        LEFT OUTER JOIN Pos AS po ON pl.PoId = po.PoId\r\n        LEFT OUTER JOIN Units AS u ON Items.UnitID = u.UnitID\r\n        LEFT OUTER JOIN Vendors AS v ON pl.VendorId = v.VendorID\r\n        LEFT OUTER JOIN Desciplines AS d ON pl.DesciplineId = d.DesciplineId\r\n        LEFT OUTER JOIN Scopes AS sc ON Items.ScopeID = sc.ScopeID\r\n        LEFT OUTER JOIN Suppliers AS s ON pl.SupplierId = s.SupplierId -- Joining Supplier table\r\n        GROUP BY \r\n            p.ArrivalDate,\r\n\t\t    pl.ArchiveNO,\r\n\t\t\tpl.MARDate,\r\n\t\t\tpl.OPINO,\r\n            pl.PLNO,\r\n            pl.Project,\r\n            po.PoName,\r\n            v.VendorName,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n            fi.Tag,\r\n            fi.Description,\r\n            u.UnitName,\r\n            sc.ScopeName,\r\n            d.DesciplineName,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold,\r\n            pl.DesciplineId,\r\n            s.SupplierName -- Adding Group By for SupplierName\r\n        --ORDER BY fi.ItemId\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @ErrorMessage NVARCHAR(4000);\r\n        DECLARE @ErrorSeverity INT;\r\n        DECLARE @ErrorState INT;\r\n\r\n        SELECT \r\n            @ErrorMessage = ERROR_MESSAGE(),\r\n            @ErrorSeverity = ERROR_SEVERITY(),\r\n            @ErrorState = ERROR_STATE();\r\n\r\n        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);\r\n    END CATCH\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Item2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[Search_LocItem]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_LocItem' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[Search_LocItem]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[Search_LocItem]\r\nAS\r\nBEGIN\r\n    BEGIN TRY\r\n        SET NOCOUNT ON;\r\n\r\n        ;WITH CTE_RequestData AS\r\n        (\r\n            SELECT \r\n                li.LocItemID,\r\n                li.LocationID, -- Add LocationID\r\n                SUM(req.ReserveMivQty) AS TotalReserveMivQty,\r\n                SUM(req.DelMivQty) AS TotalDelMivQty,\r\n                SUM(li.NISQty) AS NISQty,\r\n                SUM(li.RejectQty) AS RejectQty,\r\n                SUM(req.DelMrvQty * -1) AS TotalReturnAcceptQty, \r\n                SUM(req.ReqMivQty) AS TotalReqMivQty\r\n            FROM \r\n                LocItems AS li\r\n            LEFT OUTER JOIN Requests AS req ON li.LocItemID = req.LocItemID\r\n            GROUP BY \r\n                li.LocItemID,\r\n                li.LocationID -- Add LocationID to group by\r\n        ),\r\n        CTE_FilteredItems AS\r\n        (\r\n            SELECT \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold,\r\n                li.LocItemID, -- Add LocItemID\r\n                li.LocationID, -- Add LocationID\r\n                ISNULL(SUM(li.Qty), 0) AS Qty, \r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Balance,\r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Inventory,\r\n                SUM(rd.TotalReturnAcceptQty) AS TotalReturnAcceptQty,\r\n                SUM(rd.TotalReqMivQty) AS ReqMivQty,\r\n                SUM(rd.TotalDelMivQty) AS DelMivQty,\r\n                SUM(rd.TotalReserveMivQty) AS ReserveMivQty,\r\n                SUM(li.NISQty) AS NISQty,\r\n                SUM(li.RejectQty) AS RejectQty\r\n            FROM \r\n                Items\r\n            LEFT OUTER JOIN LocItems AS li ON Items.ItemId = li.ItemId\r\n            LEFT OUTER JOIN CTE_RequestData AS rd ON li.LocItemID = rd.LocItemID\r\n            GROUP BY \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold,\r\n                li.LocItemID, -- Group by LocItemID\r\n                li.LocationID -- Group by LocationID\r\n        )\r\n        SELECT \r\n            p.ArrivalDate,\r\n\t\t\tpl.ArchiveNO,\r\n\t\t\tpl.MARDate,\r\n\t\t\tpl.OPINO,\r\n\t\t\tpl.PLNO,\r\n            pl.Project,\r\n            po.PoName,\r\n            v.VendorName AS Vendor,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n            fi.Tag,\r\n            fi.Description,\r\n            u.UnitName,\r\n            ISNULL(SUM(Items.Qty), 0) AS QtyPL,\r\n            MAX(fi.Qty) AS QtyInLoc, \r\n            MAX(fi.Balance) AS Balance,\r\n            MAX(fi.Inventory) AS Inventory,\r\n            d.DesciplineName AS Discipline,\r\n            sc.ScopeName AS Scope,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold,\r\n\t\t\tMAX(fi.TotalReturnAcceptQty) AS TotalReturnAcceptQty,\r\n            MAX(fi.ReqMivQty) AS ReqMivQty,\r\n            MAX(fi.DelMivQty) AS DelMivQty,\r\n            MAX(fi.ReserveMivQty) AS ReserveMivQty,\r\n            MAX(fi.NISQty) AS NISQty,\r\n            MAX(fi.RejectQty) AS RejectQty,\r\n            s.SupplierName AS Supplier, -- Adding SupplierName from Supplier table\r\n            fi.LocItemID, -- Add LocItemID to final select\r\n            loc.LocationName -- Add LocationName from Location table\r\n        FROM \r\n            CTE_FilteredItems AS fi\r\n        INNER JOIN Items ON fi.ItemId = Items.ItemId\r\n        LEFT OUTER JOIN LocItems AS li ON fi.LocItemID = li.LocItemID -- Join LocItems for LocItemID\r\n        LEFT OUTER JOIN Locations AS loc ON li.LocationID = loc.LocationID -- Join Locations for LocationName\r\n        LEFT OUTER JOIN Packages AS p ON Items.PKID = p.PKID\r\n        LEFT OUTER JOIN PackingLists AS pl ON p.PLId = pl.PLId\r\n        LEFT OUTER JOIN Pos AS po ON pl.PoId = po.PoId\r\n        LEFT OUTER JOIN Units AS u ON Items.UnitID = u.UnitID\r\n        LEFT OUTER JOIN Vendors AS v ON pl.VendorId = v.VendorID\r\n        LEFT OUTER JOIN Desciplines AS d ON pl.DesciplineId = d.DesciplineId\r\n        LEFT OUTER JOIN Scopes AS sc ON Items.ScopeID = sc.ScopeID\r\n        LEFT OUTER JOIN Suppliers AS s ON pl.SupplierId = s.SupplierId -- Joining Supplier table\r\n        GROUP BY \r\n            p.ArrivalDate,\r\n\t\t    pl.ArchiveNO,\r\n\t\t\tpl.MARDate,\r\n\t\t\tpl.OPINO,\r\n            pl.PLNO,\r\n            pl.Project,\r\n            po.PoName,\r\n            v.VendorName,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n            fi.Tag,\r\n            fi.Description,\r\n            u.UnitName,\r\n            sc.ScopeName,\r\n            d.DesciplineName,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold,\r\n            pl.DesciplineId,\r\n            s.SupplierName, -- Adding Group By for SupplierName\r\n            fi.LocItemID, -- Group by LocItemID\r\n            loc.LocationName -- Group by LocationName\r\n        --ORDER BY fi.ItemId\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @ErrorMessage NVARCHAR(4000);\r\n        DECLARE @ErrorSeverity INT;\r\n        DECLARE @ErrorState INT;\r\n\r\n        SELECT \r\n            @ErrorMessage = ERROR_MESSAGE(),\r\n            @ErrorSeverity = ERROR_SEVERITY(),\r\n            @ErrorState = ERROR_STATE();\r\n\r\n        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);\r\n    END CATCH\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_LocItem' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[Search_Material_Issue_Voucher]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Material_Issue_Voucher' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[Search_Material_Issue_Voucher]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[Search_Material_Issue_Voucher]\r\nAS\r\nWITH RequestData AS (\r\n    SELECT \r\n        li.LocItemID,\r\n        SUM(req.ReserveMivQty) AS TotalReserveMivQty,\r\n        SUM(req.DelMivQty) AS TotalDelMivQty,\r\n        SUM(li.NISQty) AS NISQty,\r\n        SUM(li.RejectQty) AS RejectQty,\r\n        SUM(req.ReserveMrvQty * -1) AS TotalReturnAcceptQty\r\n    FROM \r\n        LocItems AS li\r\n    LEFT OUTER JOIN Requests AS req ON li.LocItemID = req.LocItemID\r\n    GROUP BY \r\n        li.LocItemID\r\n),\r\nFilteredItems AS (\r\n    SELECT \r\n        Items.ItemId,\r\n        Items.ScopeID,\r\n        Items.UnitID,\r\n        Items.PKID,\r\n        Items.Tag,\r\n        Items.Description,\r\n        Items.HeatNo,\r\n        Items.BatchNo,\r\n        Items.Remark,\r\n        Items.Hold,\r\n        ISNULL(SUM(li.Qty), 0) - ISNULL(SUM(rd.TotalReserveMivQty), 0) - ISNULL(SUM(rd.TotalDelMivQty), 0) - ISNULL(SUM(li.NISQty), 0) - ISNULL(SUM(li.RejectQty), 0) + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Balance,\r\n        ISNULL(SUM(li.Qty), 0) - ISNULL(SUM(rd.TotalDelMivQty), 0) - ISNULL(SUM(li.NISQty), 0) - ISNULL(SUM(li.RejectQty), 0) + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Inventory\r\n    FROM \r\n        Items\r\n    LEFT OUTER JOIN LocItems AS li ON Items.ItemId = li.ItemId\r\n    LEFT OUTER JOIN RequestData AS rd ON li.LocItemID = rd.LocItemID\r\n    GROUP BY \r\n        Items.ItemId,\r\n        Items.ScopeID,\r\n        Items.UnitID,\r\n        Items.PKID,\r\n        Items.Tag,\r\n        Items.Description,\r\n        Items.HeatNo,\r\n        Items.BatchNo,\r\n        Items.Remark,\r\n        Items.Hold\r\n    HAVING \r\n        ISNULL(SUM(li.Qty), 0) - ISNULL(SUM(rd.TotalReserveMivQty), 0) - ISNULL(SUM(rd.TotalDelMivQty), 0) - ISNULL(SUM(li.NISQty), 0) - ISNULL(SUM(li.RejectQty), 0) + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) > 0\r\n)\r\nSELECT \r\n    p.ArrivalDate,\r\n    pl.Project,\r\n    po.PoName AS Po,\r\n    v.VendorName AS Vendor,\r\n    Items.ItemId,\r\n    pl.PLName,\r\n    p.PK,\r\n    Items.ItemOfPk,\r\n    Items.Tag,\r\n    Items.Description,\r\n    Units.UnitName AS Unit,\r\n    ISNULL(SUM(Items.Qty), 0) AS QtyPL,\r\n    MAX(fi.Balance) AS Balance,\r\n    MAX(fi.Inventory) AS Inventory,\r\n    d.DesciplineName AS Discipline,\r\n    Scopes.ScopeName AS Scope,\r\n    Items.HeatNo,\r\n    Items.BatchNo,\r\n    Items.Remark,\r\n    Items.Hold\r\nFROM \r\n    FilteredItems AS fi\r\nINNER JOIN Items ON fi.ItemId = Items.ItemId\r\nINNER JOIN Scopes ON Items.ScopeID = Scopes.ScopeID\r\nINNER JOIN Units ON Items.UnitID = Units.UnitID\r\nLEFT OUTER JOIN Packages AS p ON Items.PKID = p.PKID\r\nLEFT OUTER JOIN PackingLists AS pl ON p.PLId = pl.PLId\r\nLEFT OUTER JOIN Desciplines AS d ON pl.DesciplineId = d.DesciplineId\r\nLEFT OUTER JOIN Pos AS po ON pl.PoId = po.PoId\r\nLEFT OUTER JOIN Vendors AS v ON pl.VendorId = v.VendorID\r\nGROUP BY \r\n    p.ArrivalDate,\r\n    pl.Project,\r\n    po.PoName,\r\n    v.VendorName,\r\n    Items.ItemId,\r\n    pl.PLName,\r\n    p.PK,\r\n    Items.ItemOfPk,\r\n    Items.Tag,\r\n    Items.Description,\r\n    Units.UnitName,\r\n    Scopes.ScopeName,\r\n    Items.HeatNo,\r\n    Items.BatchNo,\r\n    Items.Remark,\r\n    Items.Hold,\r\n    d.DesciplineName;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Material_Issue_Voucher' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[Search_Material_Issue_Voucher_NOLOCK]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Material_Issue_Voucher_NOLOCK' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[Search_Material_Issue_Voucher_NOLOCK]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","\r\nCREATE PROCEDURE [dbo].[Search_Material_Issue_Voucher_NOLOCK]\r\nAS\r\nWITH RequestData AS (\r\n    SELECT \r\n        li.LocItemID,\r\n        SUM(req.ReserveMivQty) AS TotalReserveMivQty,\r\n        SUM(req.DelMivQty) AS TotalDelMivQty,\r\n        SUM(li.NISQty) AS NISQty,\r\n        SUM(li.RejectQty) AS RejectQty,\r\n        SUM(req.DelMrvQty * -1) AS TotalReturnAcceptQty\r\n    FROM \r\n        LocItems AS li WITH (NOLOCK)\r\n    LEFT OUTER JOIN Requests AS req WITH (NOLOCK) ON li.LocItemID = req.LocItemID\r\n    GROUP BY \r\n        li.LocItemID\r\n),\r\nFilteredItems AS (\r\n    SELECT \r\n        Items.ItemId,\r\n        Items.ScopeID,\r\n        Items.UnitID,\r\n        Items.PKID,\r\n        Items.Tag,\r\n        Items.Description,\r\n        Items.HeatNo,\r\n        Items.BatchNo,\r\n        Items.Remark,\r\n        Items.Hold,\r\n        ISNULL(SUM(li.Qty), 0) \r\n            - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n            - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n            - ISNULL(SUM(li.NISQty), 0) \r\n            - ISNULL(SUM(li.RejectQty), 0) \r\n            + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Balance,\r\n        ISNULL(SUM(li.Qty), 0) \r\n            - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n            - ISNULL(SUM(li.NISQty), 0) \r\n            - ISNULL(SUM(li.RejectQty), 0) \r\n            + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Inventory\r\n    FROM \r\n        Items WITH (NOLOCK)\r\n    LEFT OUTER JOIN LocItems AS li WITH (NOLOCK) ON Items.ItemId = li.ItemId\r\n    LEFT OUTER JOIN RequestData AS rd ON li.LocItemID = rd.LocItemID\r\n    GROUP BY \r\n        Items.ItemId,\r\n        Items.ScopeID,\r\n        Items.UnitID,\r\n        Items.PKID,\r\n        Items.Tag,\r\n        Items.Description,\r\n        Items.HeatNo,\r\n        Items.BatchNo,\r\n        Items.Remark,\r\n        Items.Hold\r\n)\r\nSELECT \r\n    p.ArrivalDate,\r\n    pl.Project,\r\n    po.PoName AS Po,\r\n    v.VendorName AS Vendor,\r\n    Items.ItemId,\r\n    pl.PLName,\r\n    p.PK,\r\n    Items.ItemOfPk,\r\n    Items.Tag,\r\n    Items.Description,\r\n    Units.UnitName AS Unit,\r\n    ISNULL(SUM(Items.Qty), 0) AS QtyPL,\r\n    MAX(fi.Balance) AS Balance,\r\n    MAX(fi.Inventory) AS Inventory,\r\n    d.DesciplineName AS Discipline,\r\n    Scopes.ScopeName AS Scope,\r\n    Items.HeatNo,\r\n    Items.BatchNo,\r\n    Items.Remark,\r\n    Items.Hold\r\nFROM \r\n    FilteredItems AS fi\r\nINNER JOIN Items WITH (NOLOCK) ON fi.ItemId = Items.ItemId\r\nINNER JOIN Scopes WITH (NOLOCK) ON Items.ScopeID = Scopes.ScopeID\r\nINNER JOIN Units WITH (NOLOCK) ON Items.UnitID = Units.UnitID\r\nLEFT OUTER JOIN Packages AS p WITH (NOLOCK) ON Items.PKID = p.PKID\r\nLEFT OUTER JOIN PackingLists AS pl WITH (NOLOCK) ON p.PLId = pl.PLId\r\nLEFT OUTER JOIN Desciplines AS d WITH (NOLOCK) ON pl.DesciplineId = d.DesciplineId\r\nLEFT OUTER JOIN Pos AS po WITH (NOLOCK) ON pl.PoId = po.PoId\r\nLEFT OUTER JOIN Vendors AS v WITH (NOLOCK) ON pl.VendorId = v.VendorID\r\nGROUP BY \r\n    p.ArrivalDate,\r\n    pl.Project,\r\n    po.PoName,\r\n    v.VendorName,\r\n    Items.ItemId,\r\n    pl.PLName,\r\n    p.PK,\r\n    Items.ItemOfPk,\r\n    Items.Tag,\r\n    Items.Description,\r\n    Units.UnitName,\r\n    Scopes.ScopeName,\r\n    Items.HeatNo,\r\n    Items.BatchNo,\r\n    Items.Remark,\r\n    Items.Hold,\r\n    d.DesciplineName\r\nHAVING \r\n    MAX(fi.Balance) > 0;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Material_Issue_Voucher_NOLOCK' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[Search_Material_Issue_Voucher_NOLOCK2]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Material_Issue_Voucher_NOLOCK2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[Search_Material_Issue_Voucher_NOLOCK2]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","\r\nCREATE PROCEDURE [dbo].[Search_Material_Issue_Voucher_NOLOCK2]\r\nAS\r\nBEGIN\r\n    -- ایجاد temp table برای ذخیره‌سازی داده‌های تجمیع‌شده از LocItems و Requests\r\n    CREATE TABLE #RequestData (\r\n        LocItemID INT,\r\n        TotalReserveMivQty DECIMAL(18, 2),\r\n        TotalDelMivQty DECIMAL(18, 2),\r\n        NISQty DECIMAL(18, 2),\r\n        RejectQty DECIMAL(18, 2),\r\n        TotalReturnAcceptQty DECIMAL(18, 2)\r\n    )\r\n\r\n    -- پر کردن temp table با استفاده از subquery\r\n    INSERT INTO #RequestData (LocItemID, TotalReserveMivQty, TotalDelMivQty, NISQty, RejectQty, TotalReturnAcceptQty)\r\n    SELECT \r\n        li.LocItemID,\r\n        SUM(req.ReserveMivQty) AS TotalReserveMivQty,\r\n        SUM(req.DelMivQty) AS TotalDelMivQty,\r\n        SUM(li.NISQty) AS NISQty,\r\n        SUM(li.RejectQty) AS RejectQty,\r\n        SUM(req.DelMrvQty * -1) AS TotalReturnAcceptQty\r\n    FROM \r\n        LocItems AS li WITH (NOLOCK)\r\n    LEFT OUTER JOIN Requests AS req WITH (NOLOCK) ON li.LocItemID = req.LocItemID\r\n    GROUP BY \r\n        li.LocItemID\r\n\r\n    -- ایجاد temp table برای ذخیره‌سازی داده‌های تجمیع‌شده از Items و #RequestData\r\n    CREATE TABLE #FilteredItems (\r\n        ItemId INT,\r\n        ScopeID INT,\r\n        UnitID INT,\r\n        PKID INT,\r\n        Tag NVARCHAR(50),\r\n        Description NVARCHAR(255),\r\n        HeatNo NVARCHAR(50),\r\n        BatchNo NVARCHAR(50),\r\n        Remark NVARCHAR(255),\r\n        Hold BIT,\r\n        Balance DECIMAL(18, 2),\r\n        Inventory DECIMAL(18, 2)\r\n    )\r\n\r\n    -- پر کردن temp table با استفاده از subquery\r\n    INSERT INTO #FilteredItems (ItemId, ScopeID, UnitID, PKID, Tag, Description, HeatNo, BatchNo, Remark, Hold, Balance, Inventory)\r\n    SELECT \r\n        Items.ItemId,\r\n        Items.ScopeID,\r\n        Items.UnitID,\r\n        Items.PKID,\r\n        Items.Tag,\r\n        Items.Description,\r\n        Items.HeatNo,\r\n        Items.BatchNo,\r\n        Items.Remark,\r\n        Items.Hold,\r\n        ISNULL(SUM(li.Qty), 0) \r\n            - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n            - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n            - ISNULL(SUM(li.NISQty), 0) \r\n            - ISNULL(SUM(li.RejectQty), 0) \r\n            + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Balance,\r\n        ISNULL(SUM(li.Qty), 0) \r\n            - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n            - ISNULL(SUM(li.NISQty), 0) \r\n            - ISNULL(SUM(li.RejectQty), 0) \r\n            + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Inventory\r\n    FROM \r\n        Items WITH (NOLOCK)\r\n    LEFT OUTER JOIN LocItems AS li WITH (NOLOCK) ON Items.ItemId = li.ItemId\r\n    LEFT OUTER JOIN #RequestData AS rd ON li.LocItemID = rd.LocItemID\r\n    GROUP BY \r\n        Items.ItemId,\r\n        Items.ScopeID,\r\n        Items.UnitID,\r\n        Items.PKID,\r\n        Items.Tag,\r\n        Items.Description,\r\n        Items.HeatNo,\r\n        Items.BatchNo,\r\n        Items.Remark,\r\n        Items.Hold\r\n\r\n    -- اجرای query نهایی با استفاده از temp table ها\r\n    SELECT \r\n        p.ArrivalDate,\r\n        pl.Project,\r\n        po.PoName AS Po,\r\n        v.VendorName AS Vendor,\r\n        fi.ItemId,\r\n        pl.PLName,\r\n        p.PK,\r\n        Items.ItemOfPk,\r\n        fi.Tag,\r\n        fi.Description,\r\n        Units.UnitName AS Unit,\r\n        ISNULL(SUM(Items.Qty), 0) AS QtyPL,\r\n        MAX(fi.Balance) AS Balance,\r\n        MAX(fi.Inventory) AS Inventory,\r\n        d.DesciplineName AS Discipline,\r\n        Scopes.ScopeName AS Scope,\r\n        fi.HeatNo,\r\n        fi.BatchNo,\r\n        fi.Remark,\r\n        fi.Hold\r\n    FROM \r\n        #FilteredItems AS fi\r\n    INNER JOIN Items WITH (NOLOCK) ON fi.ItemId = Items.ItemId\r\n    INNER JOIN Scopes WITH (NOLOCK) ON Items.ScopeID = Scopes.ScopeID\r\n    INNER JOIN Units WITH (NOLOCK) ON Items.UnitID = Units.UnitID\r\n    LEFT OUTER JOIN Packages AS p WITH (NOLOCK) ON Items.PKID = p.PKID\r\n    LEFT OUTER JOIN PackingLists AS pl WITH (NOLOCK) ON p.PLId = pl.PLId\r\n    LEFT OUTER JOIN Desciplines AS d WITH (NOLOCK) ON pl.DesciplineId = d.DesciplineId\r\n    LEFT OUTER JOIN Pos AS po WITH (NOLOCK) ON pl.PoId = po.PoId\r\n    LEFT OUTER JOIN Vendors AS v WITH (NOLOCK) ON pl.VendorId = v.VendorID\r\n    GROUP BY \r\n        p.ArrivalDate,\r\n        pl.Project,\r\n        po.PoName,\r\n        v.VendorName,\r\n        fi.ItemId,\r\n        pl.PLName,\r\n        p.PK,\r\n        Items.ItemOfPk,\r\n        fi.Tag,\r\n        fi.Description,\r\n        Units.UnitName,\r\n        Scopes.ScopeName,\r\n        fi.HeatNo,\r\n        fi.BatchNo,\r\n        fi.Remark,\r\n        fi.Hold,\r\n        d.DesciplineName\r\n    HAVING \r\n        MAX(fi.Balance) > 0;\r\n\r\n    -- حذف temp table ها برای آزادسازی حافظه\r\n    DROP TABLE #RequestData;\r\n    DROP TABLE #FilteredItems;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Material_Issue_Voucher_NOLOCK2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[Search_Material_Issue_Voucher2]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Material_Issue_Voucher2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[Search_Material_Issue_Voucher2]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","Create PROCEDURE [dbo].[Search_Material_Issue_Voucher2]\r\nAS\r\nBEGIN\r\n    BEGIN TRY\r\n        SET NOCOUNT ON;\r\n\r\n        -- استفاده از CTE به جای جدول موقتی #RequestData\r\n        ;WITH CTE_RequestData AS\r\n        (\r\n            SELECT \r\n                li.LocItemID,\r\n                SUM(req.ReserveMivQty) AS TotalReserveMivQty,\r\n                SUM(req.DelMivQty) AS TotalDelMivQty,\r\n                SUM(li.NISQty) AS NISQty,\r\n                SUM(li.RejectQty) AS RejectQty,\r\n                SUM(req.DelMrvQty * -1) AS TotalReturnAcceptQty\r\n            FROM \r\n                LocItems AS li\r\n            LEFT OUTER JOIN Requests AS req ON li.LocItemID = req.LocItemID\r\n            GROUP BY \r\n                li.LocItemID\r\n        ),\r\n\r\n        -- استفاده از CTE به جای جدول موقتی #FilteredItems\r\n        CTE_FilteredItems AS\r\n        (\r\n            SELECT \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold,\r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Balance,\r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Inventory\r\n            FROM \r\n                Items\r\n            LEFT OUTER JOIN LocItems AS li ON Items.ItemId = li.ItemId\r\n            LEFT OUTER JOIN CTE_RequestData AS rd ON li.LocItemID = rd.LocItemID\r\n            GROUP BY \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold\r\n        )\r\n\r\n        -- اجرای query نهایی با استفاده از CTE ها\r\n        SELECT \r\n            p.ArrivalDate,\r\n            pl.Project,\r\n            po.PoName AS Po,\r\n            v.VendorName AS Vendor,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n            fi.Tag,\r\n            fi.Description,\r\n            Units.UnitName AS Unit,\r\n            ISNULL(SUM(Items.Qty), 0) AS QtyPL,\r\n            MAX(fi.Balance) AS Balance,\r\n            MAX(fi.Inventory) AS Inventory,\r\n            d.DesciplineName AS Discipline,\r\n            Scopes.ScopeName AS Scope,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold\r\n        FROM \r\n            CTE_FilteredItems AS fi\r\n        INNER JOIN Items ON fi.ItemId = Items.ItemId\r\n        INNER JOIN Scopes ON Items.ScopeID = Scopes.ScopeID\r\n        INNER JOIN Units ON Items.UnitID = Units.UnitID\r\n        LEFT OUTER JOIN Packages AS p ON Items.PKID = p.PKID\r\n        LEFT OUTER JOIN PackingLists AS pl ON p.PLId = pl.PLId\r\n        LEFT OUTER JOIN Desciplines AS d ON pl.DesciplineId = d.DesciplineId\r\n        LEFT OUTER JOIN Pos AS po ON pl.PoId = po.PoId\r\n        LEFT OUTER JOIN Vendors AS v ON pl.VendorId = v.VendorID\r\n        GROUP BY \r\n            p.ArrivalDate,\r\n            pl.Project,\r\n            po.PoName,\r\n            v.VendorName,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n            fi.Tag,\r\n            fi.Description,\r\n            Units.UnitName,\r\n            Scopes.ScopeName,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold,\r\n            d.DesciplineName\r\n        HAVING \r\n            MAX(fi.Balance) > 0;\r\n    END TRY\r\n\r\n    BEGIN CATCH\r\n        -- مدیریت خطا\r\n        DECLARE @ErrorMessage NVARCHAR(4000);\r\n        DECLARE @ErrorSeverity INT;\r\n        DECLARE @ErrorState INT;\r\n\r\n        SELECT \r\n            @ErrorMessage = ERROR_MESSAGE(),\r\n            @ErrorSeverity = ERROR_SEVERITY(),\r\n            @ErrorState = ERROR_STATE();\r\n\r\n        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);\r\n    END CATCH\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Material_Issue_Voucher2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[Search_Material_Issue_Voucher2025]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Material_Issue_Voucher2025' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[Search_Material_Issue_Voucher2025]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[Search_Material_Issue_Voucher2025]\r\nAS\r\nBEGIN\r\n    BEGIN TRY\r\n        SET NOCOUNT ON;\r\n\r\n        -- ایجاد RequestData با SELECT INTO و فیلتر مناسب\r\n        SELECT \r\n            li.LocItemID,\r\n            SUM(req.ReserveMivQty) AS TotalReserveMivQty,\r\n            SUM(req.DelMivQty) AS TotalDelMivQty,\r\n            SUM(req.DelMivRejQty) AS TotalDelMivRejQty,\r\n            SUM(li.NISQty) AS NISQty,\r\n            SUM(li.OverQty) AS OverQty,\r\n            SUM(li.ShortageQty) AS ShortageQty,\r\n            SUM(li.DamageQty) AS DamageQty,\r\n            SUM(li.RejectQty) AS RejectQty,\r\n            SUM(req.DelMrvQty * -1) AS TotalReturnAcceptQty,\r\n            SUM(req.DelMrvRejQty * -1) AS TotalDelMrvRejQty\r\n        INTO #RequestData\r\n        FROM \r\n            LocItems AS li WITH (NOLOCK)\r\n        LEFT OUTER JOIN Requests AS req WITH (NOLOCK) ON li.LocItemID = req.LocItemID\r\n        GROUP BY li.LocItemID;\r\n\r\n        -- ایجاد ایندکس برای RequestData\r\n        CREATE NONCLUSTERED INDEX IX_LocItemID ON #RequestData (LocItemID);\r\n\r\n        -- ایجاد FilteredItems با SELECT INTO\r\n        SELECT \r\n            Items.ItemId,\r\n            Items.ScopeID,\r\n            Items.UnitID,\r\n            Items.PKID,\r\n            Items.Tag,\r\n            Items.Description,\r\n            Items.HeatNo,\r\n            Items.BatchNo,\r\n            Items.Remark,\r\n            Items.Hold,\r\n            ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS mrrv,\r\n            ISNULL(SUM(rd.TotalDelMivQty), 0) AS dell,\r\n            ISNULL(SUM(rd.TotalReserveMivQty), 0) AS ress,\r\n            ISNULL(SUM(li.Qty), 0) AS Qty,\r\n            ISNULL(SUM(li.Qty), 0) \r\n                - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n                - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                - ISNULL(SUM(li.NISQty), 0) \r\n                - ISNULL(SUM(li.RejectQty), 0) \r\n                - ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Balance,\r\n            ISNULL(SUM(li.Qty), 0) \r\n                - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                - ISNULL(SUM(li.NISQty), 0) \r\n                - ISNULL(SUM(li.RejectQty), 0) \r\n                - ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Inventory\r\n        INTO #FilteredItems\r\n        FROM \r\n            Items WITH (NOLOCK)\r\n        INNER JOIN LocItems AS li WITH (NOLOCK) ON Items.ItemId = li.ItemId\r\n        LEFT OUTER JOIN #RequestData AS rd ON li.LocItemID = rd.LocItemID\r\n        GROUP BY \r\n            Items.ItemId,\r\n            Items.ScopeID,\r\n            Items.UnitID,\r\n            Items.PKID,\r\n            Items.Tag,\r\n            Items.Description,\r\n            Items.HeatNo,\r\n            Items.BatchNo,\r\n            Items.Remark,\r\n            Items.Hold;\r\n\r\n        -- ایجاد ایندکس برای FilteredItems\r\n        CREATE NONCLUSTERED INDEX IX_ItemId ON #FilteredItems (ItemId);\r\n\r\n        -- اجرای SELECT نهایی\r\n        SELECT \r\n            p.ArrivalDate,\r\n            pl.Project,\r\n            pos.PoName AS Po,\r\n            pl.VendorId AS Vendor,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n            fi.Tag,\r\n            fi.Description,\r\n            units.UnitName AS Unit,\r\n            ISNULL(SUM(Items.Qty), 0) AS QtyPL,\r\n            ISNULL(SUM(fi.Qty), 0) AS QtyInLoc, \r\n            ISNULL(SUM(fi.Balance), 0) AS Balance,\r\n            ISNULL(SUM(fi.Inventory), 0) AS Inventory,\r\n            ISNULL(SUM(fi.mrrv), 0) AS TotalMrv,\r\n            ISNULL(SUM(fi.dell), 0) AS TotalMiv,\r\n            ISNULL(SUM(fi.ress), 0) AS TotalReserve,\r\n            desciplines.DesciplineName AS Discipline,\r\n            scopes.ScopeName AS Scope,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold\r\n        FROM \r\n            #FilteredItems AS fi\r\n        INNER JOIN Items ON fi.ItemId = Items.ItemId\r\n        LEFT OUTER JOIN Packages AS p ON Items.PKID = p.PKID\r\n        LEFT OUTER JOIN PackingLists AS pl ON p.PLId = pl.PLId\r\n        LEFT OUTER JOIN Pos AS pos ON pos.PoId = pl.PoId\r\n        LEFT OUTER JOIN Units AS units ON units.UnitID = Items.UnitID\r\n        LEFT OUTER JOIN Scopes AS scopes ON scopes.ScopeID = Items.ScopeID\r\n        LEFT OUTER JOIN Desciplines AS desciplines ON desciplines.DesciplineId = pl.DesciplineId\r\n        WHERE\r\n            fi.Balance > 0\r\n        GROUP BY \r\n            p.ArrivalDate,\r\n            pl.Project,\r\n            pos.PoName,\r\n            pl.VendorId,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n            fi.Tag,\r\n            fi.Description,\r\n            units.UnitName,\r\n            scopes.ScopeName,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold,\r\n            desciplines.DesciplineName\r\n        ORDER BY fi.ItemId;\r\n\r\n        -- حذف جدول‌های موقت\r\n        DROP TABLE #RequestData;\r\n        DROP TABLE #FilteredItems;\r\n\r\n    END TRY\r\n    BEGIN CATCH\r\n        -- مدیریت خطا\r\n        DECLARE @ErrorMessage NVARCHAR(4000);\r\n        DECLARE @ErrorSeverity INT;\r\n        DECLARE @ErrorState INT;\r\n\r\n        SELECT \r\n            @ErrorMessage = ERROR_MESSAGE(),\r\n            @ErrorSeverity = ERROR_SEVERITY(),\r\n            @ErrorState = ERROR_STATE();\r\n\r\n        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);\r\n    END CATCH\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Material_Issue_Voucher2025' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[Search_Material_Issue_Voucher3]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Material_Issue_Voucher3' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[Search_Material_Issue_Voucher3]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[Search_Material_Issue_Voucher3]\r\nAS\r\nBEGIN\r\n    BEGIN TRY\r\n        SET NOCOUNT ON;\r\n\r\n        -- استفاده از CTE به جای جدول موقتی #RequestData\r\n        ;WITH CTE_RequestData AS\r\n        (\r\n            SELECT \r\n                li.LocItemID,\r\n                SUM(req.ReserveMivQty) AS TotalReserveMivQty,\r\n                SUM(req.DelMivQty) AS TotalDelMivQty,\r\n                SUM(li.NISQty) AS NISQty,\r\n                SUM(li.RejectQty) AS RejectQty,\r\n                SUM(req.DelMrvQty * -1) AS TotalReturnAcceptQty\r\n            FROM \r\n                LocItems AS li\r\n            LEFT OUTER JOIN Requests AS req ON li.LocItemID = req.LocItemID\r\n            GROUP BY \r\n                li.LocItemID\r\n        ),\r\n\r\n        -- استفاده از CTE به جای جدول موقتی #FilteredItems\r\n        CTE_FilteredItems AS\r\n        (\r\n            SELECT \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold,\r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Balance,\r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Inventory\r\n            FROM \r\n                Items\r\n            LEFT OUTER JOIN LocItems AS li ON Items.ItemId = li.ItemId\r\n            LEFT OUTER JOIN CTE_RequestData AS rd ON li.LocItemID = rd.LocItemID\r\n            GROUP BY \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold\r\n        )\r\n\r\n        -- اجرای query نهایی با استفاده از CTE ها\r\n        SELECT \r\n            p.ArrivalDate,\r\n            pl.Project,\r\n            pl.PoId AS Po,\r\n            pl.VendorId AS Vendor,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n            fi.Tag,\r\n            fi.Description,\r\n            Items.UnitID AS Unit,\r\n            ISNULL(SUM(Items.Qty), 0) AS QtyinLoc,\r\n            MAX(fi.Balance) AS Balance,\r\n            MAX(fi.Inventory) AS Inventory,\r\n            pl.DesciplineId AS Discipline,\r\n            Items.ScopeID AS Scope,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold\r\n        FROM \r\n            CTE_FilteredItems AS fi\r\n        INNER JOIN Items ON fi.ItemId = Items.ItemId\r\n        --INNER JOIN Scopes ON Items.ScopeID = Scopes.ScopeID\r\n        --INNER JOIN Units ON Items.UnitID = Units.UnitID\r\n        LEFT OUTER JOIN Packages AS p ON Items.PKID = p.PKID\r\n        LEFT OUTER JOIN PackingLists AS pl ON p.PLId = pl.PLId\r\n        --LEFT OUTER JOIN Desciplines AS d ON pl.DesciplineId = d.DesciplineId\r\n        --LEFT OUTER JOIN Pos AS po ON pl.PoId = po.PoId\r\n        --LEFT OUTER JOIN Vendors AS v ON pl.VendorId = v.VendorID\r\n        GROUP BY \r\n            p.ArrivalDate,\r\n            pl.Project,\r\n            pl.PoId,\r\n            pl.VendorId,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n            fi.Tag,\r\n            fi.Description,\r\n            Items.UnitID,\r\n            Items.ScopeID,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold,\r\n            pl.DesciplineId\r\n        HAVING \r\n            MAX(fi.Balance) > 0;\r\n    END TRY\r\n\r\n    BEGIN CATCH\r\n        -- مدیریت خطا\r\n        DECLARE @ErrorMessage NVARCHAR(4000);\r\n        DECLARE @ErrorSeverity INT;\r\n        DECLARE @ErrorState INT;\r\n\r\n        SELECT \r\n            @ErrorMessage = ERROR_MESSAGE(),\r\n            @ErrorSeverity = ERROR_SEVERITY(),\r\n            @ErrorState = ERROR_STATE();\r\n\r\n        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);\r\n    END CATCH\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Material_Issue_Voucher3' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[Search_Material_Issue_Voucher4]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Material_Issue_Voucher4' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[Search_Material_Issue_Voucher4]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[Search_Material_Issue_Voucher4]\r\nAS\r\nBEGIN\r\n    BEGIN TRY\r\n        SET NOCOUNT ON;\r\n\r\n        -- استفاده از CTE به جای جدول موقتی #RequestData\r\n        ;WITH CTE_RequestData AS\r\n        (\r\n            SELECT \r\n                li.LocItemID,\r\n                SUM(req.ReserveMivQty) AS TotalReserveMivQty,\r\n                SUM(req.DelMivQty) AS TotalDelMivQty,\r\n                SUM(li.NISQty) AS NISQty,\r\n                SUM(li.RejectQty) AS RejectQty,\r\n                SUM(req.DelMrvQty * -1) AS TotalReturnAcceptQty\r\n            FROM \r\n                LocItems AS li\r\n            LEFT OUTER JOIN Requests AS req ON li.LocItemID = req.LocItemID\r\n            GROUP BY \r\n                li.LocItemID\r\n        ),\r\n\r\n        -- استفاده از CTE به جای جدول موقتی #FilteredItems\r\n        CTE_FilteredItems AS\r\n        (\r\n            SELECT \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold,\r\n                ISNULL(SUM(li.Qty), 0) AS Qty, -- برگرداندن ستون Qty\r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Balance,\r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Inventory\r\n            FROM \r\n                Items\r\n            LEFT OUTER JOIN LocItems AS li ON Items.ItemId = li.ItemId\r\n            LEFT OUTER JOIN CTE_RequestData AS rd ON li.LocItemID = rd.LocItemID\r\n            GROUP BY \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold\r\n        )\r\n\r\n        -- اجرای query نهایی با استفاده از CTE ها\r\n        SELECT \r\n            p.ArrivalDate,\r\n            pl.Project,\r\n            pl.PoId AS Po,\r\n            pl.VendorId AS Vendor,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n            fi.Tag,\r\n            fi.Description,\r\n            Items.UnitID AS Unit,\r\n            ISNULL(SUM(Items.Qty), 0) AS QtyPL,\r\n            MAX(fi.Qty) AS QtyInLoc, -- اضافه کردن ستون Qty\r\n            MAX(fi.Balance) AS Balance,\r\n            MAX(fi.Inventory) AS Inventory,\r\n            pl.DesciplineId AS Discipline,\r\n            Items.ScopeID AS Scope,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold\r\n        FROM \r\n            CTE_FilteredItems AS fi\r\n        INNER JOIN Items ON fi.ItemId = Items.ItemId\r\n        LEFT OUTER JOIN Packages AS p ON Items.PKID = p.PKID\r\n        LEFT OUTER JOIN PackingLists AS pl ON p.PLId = pl.PLId\r\n        GROUP BY \r\n            p.ArrivalDate,\r\n            pl.Project,\r\n            pl.PoId,\r\n            pl.VendorId,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n            fi.Tag,\r\n            fi.Description,\r\n            Items.UnitID,\r\n            Items.ScopeID,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold,\r\n            pl.DesciplineId\r\n        HAVING \r\n            MAX(fi.Balance) > 0;\r\n    END TRY\r\n\r\n    BEGIN CATCH\r\n        -- مدیریت خطا\r\n        DECLARE @ErrorMessage NVARCHAR(4000);\r\n        DECLARE @ErrorSeverity INT;\r\n        DECLARE @ErrorState INT;\r\n\r\n        SELECT \r\n            @ErrorMessage = ERROR_MESSAGE(),\r\n            @ErrorSeverity = ERROR_SEVERITY(),\r\n            @ErrorState = ERROR_STATE();\r\n\r\n        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);\r\n    END CATCH\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Material_Issue_Voucher4' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[Search_Material_Issue_Voucher5]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Material_Issue_Voucher5' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[Search_Material_Issue_Voucher5]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[Search_Material_Issue_Voucher5]\r\n    @PageNumber INT = 1,\r\n    @PageSize INT = 100\r\nAS\r\nBEGIN\r\n    BEGIN TRY\r\n        SET NOCOUNT ON;\r\n\r\n        ;WITH CTE_RequestData AS\r\n        (\r\n            SELECT \r\n                li.LocItemID,\r\n                SUM(req.ReserveMivQty) AS TotalReserveMivQty,\r\n                SUM(req.DelMivQty) AS TotalDelMivQty,\r\n                SUM(li.NISQty) AS NISQty,\r\n                SUM(li.RejectQty) AS RejectQty,\r\n                SUM(req.DelMrvQty * -1) AS TotalReturnAcceptQty\r\n            FROM \r\n                LocItems AS li\r\n            LEFT OUTER JOIN Requests AS req ON li.LocItemID = req.LocItemID\r\n            GROUP BY \r\n                li.LocItemID\r\n        ),\r\n        CTE_FilteredItems AS\r\n        (\r\n            SELECT \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold,\r\n                ISNULL(SUM(li.Qty), 0) AS Qty, \r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Balance,\r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    + ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Inventory\r\n            FROM \r\n                Items\r\n            LEFT OUTER JOIN LocItems AS li ON Items.ItemId = li.ItemId\r\n            LEFT OUTER JOIN CTE_RequestData AS rd ON li.LocItemID = rd.LocItemID\r\n            GROUP BY \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold\r\n        )\r\n        SELECT \r\n            p.ArrivalDate,\r\n            pl.Project,\r\n            pos.PoName AS Po,\r\n            pl.VendorId AS Vendor,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n            fi.Tag,\r\n            fi.Description,\r\n            units.UnitName AS Unit,\r\n            ISNULL(SUM(Items.Qty), 0) AS QtyPL,\r\n            MAX(fi.Qty) AS QtyInLoc, \r\n            MAX(fi.Balance) AS Balance,\r\n            MAX(fi.Inventory) AS Inventory,\r\n            desciplines.DesciplineName AS Discipline,\r\n            scopes.ScopeName AS Scope,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold\r\n        FROM \r\n            CTE_FilteredItems AS fi\r\n        INNER JOIN Items ON fi.ItemId = Items.ItemId\r\n        LEFT OUTER JOIN Packages AS p ON Items.PKID = p.PKID\r\n        LEFT OUTER JOIN PackingLists AS pl ON p.PLId = pl.PLId\r\n\t\tLEFT OUTER JOIN Pos AS pos ON pos.PoId = pl.PoId\r\n\t    LEFT OUTER JOIN Units AS units ON units.UnitID = Items.UnitID\r\n\t\tLEFT OUTER JOIN Scopes AS scopes ON scopes.ScopeID = Items.ScopeID\r\n\t\tLEFT OUTER JOIN Desciplines AS desciplines ON desciplines.DesciplineId = pl.DesciplineId\r\n        GROUP BY \r\n            p.ArrivalDate,\r\n            pl.Project,\r\n            pos.PoName ,\r\n\t\t\tpl.VendorId,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n            fi.Tag,\r\n            fi.Description,\r\n            units.UnitName,\r\n            scopes.ScopeName,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold,\r\n            desciplines.DesciplineName\r\n        HAVING \r\n            MAX(fi.Balance) > 0\r\n        ORDER BY fi.ItemId\r\n        OFFSET @PageSize * (@PageNumber - 1) ROWS\r\n        FETCH NEXT @PageSize ROWS ONLY;\r\n    END TRY\r\n    BEGIN CATCH\r\n        -- مدیریت خطا\r\n        DECLARE @ErrorMessage NVARCHAR(4000);\r\n        DECLARE @ErrorSeverity INT;\r\n        DECLARE @ErrorState INT;\r\n\r\n        SELECT \r\n            @ErrorMessage = ERROR_MESSAGE(),\r\n            @ErrorSeverity = ERROR_SEVERITY(),\r\n            @ErrorState = ERROR_STATE();\r\n\r\n        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);\r\n    END CATCH\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Material_Issue_Voucher5' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[Search_Material_Issue_Voucher6]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Material_Issue_Voucher6' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[Search_Material_Issue_Voucher6]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[Search_Material_Issue_Voucher6]\r\n--    @PageNumber INT = 1,\r\n--    @PageSize INT = 100\r\nAS\r\nBEGIN\r\n    BEGIN TRY\r\n        SET NOCOUNT ON;\r\n\r\n\r\n        ;WITH CTE_RequestData AS\r\n        ( SELECT \r\n                li.LocItemID,\r\n                SUM(req.ReserveMivQty) AS TotalReserveMivQty,\r\n                SUM(req.DelMivQty) AS TotalDelMivQty,\r\n\t\t\t\tSUM(req.DelMivRejQty) AS TotalDelMivRejQty,\r\n                SUM(li.NISQty) AS NISQty,\r\n\t\t\t\tSUM(li.OverQty) AS OverQty,\r\n\t\t\t\tSUM(li.ShortageQty) AS ShortageQty,\r\n\t\t\t\tSUM(li.DamageQty) AS DamageQty,\r\n                SUM(li.RejectQty) AS RejectQty,\r\n                SUM(req.DelMrvQty * -1) AS TotalReturnAcceptQty,\r\n\t\t\t\tSUM(req.DelMrvRejQty * -1) AS TotalDelMrvRejQty\r\n            FROM \r\n                LocItems AS li\r\n            LEFT OUTER JOIN Requests AS req ON li.LocItemID = req.LocItemID\r\n            GROUP BY \r\n                li.LocItemID\r\n        ),\r\n        CTE_FilteredItems AS\r\n        (\r\n            SELECT \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold,\r\n\t\t\t\tISNULL(SUM(rd.TotalReturnAcceptQty),0) as mrrv,\r\n\t\t\t\tISNULL(SUM(rd.TotalDelMivQty), 0) as dell,\r\n\t\t\t\tISNULL(SUM(rd.TotalReserveMivQty),0) as ress,\r\n                ISNULL(SUM(li.Qty), 0) AS Qty, \r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    - ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Balance,\r\n                ISNULL(SUM(li.Qty), 0) \r\n                    - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                    - ISNULL(SUM(li.NISQty), 0) \r\n                    - ISNULL(SUM(li.RejectQty), 0) \r\n                    - ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Inventory\r\n            FROM \r\n                Items\r\n            LEFT OUTER JOIN LocItems AS li ON Items.ItemId = li.ItemId\r\n            LEFT OUTER JOIN CTE_RequestData AS rd ON li.LocItemID = rd.LocItemID\r\n            GROUP BY \r\n                Items.ItemId,\r\n                Items.ScopeID,\r\n                Items.UnitID,\r\n                Items.PKID,\r\n                Items.Tag,\r\n                Items.Description,\r\n                Items.HeatNo,\r\n                Items.BatchNo,\r\n                Items.Remark,\r\n                Items.Hold\r\n        )\r\n        SELECT \r\n            p.ArrivalDate,\r\n            pl.Project,\r\n            pos.PoName AS Po,\r\n            pl.VendorId AS Vendor,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n            fi.Tag,\r\n            fi.Description,\r\n            units.UnitName AS Unit,\r\n            ISNULL(SUM(Items.Qty), 0) AS QtyPL,\r\n            ISNULL(SUM(fi.Qty),0) AS QtyInLoc, \r\n            ISNULL(SUM(fi.Balance),0) AS Balance,\r\n            ISNULL(SUM(fi.Inventory),0) AS Inventory,\r\n\t\t\tISNULL(SUM(fi.mrrv),0) AS TotalMrv,\r\n\t\t\tISNULL(SUM(fi.dell),0) AS TotalMiv,\r\n\t\t\tISNULL(SUM(fi.ress),0) AS TotalReserve,\r\n            desciplines.DesciplineName AS Discipline,\r\n            scopes.ScopeName AS Scope,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold\r\n        FROM \r\n            CTE_FilteredItems AS fi\r\n        INNER JOIN Items ON fi.ItemId = Items.ItemId\r\n        LEFT OUTER JOIN Packages AS p ON Items.PKID = p.PKID\r\n        LEFT OUTER JOIN PackingLists AS pl ON p.PLId = pl.PLId\r\n\t\tLEFT OUTER JOIN Pos AS pos ON pos.PoId = pl.PoId\r\n\t    LEFT OUTER JOIN Units AS units ON units.UnitID = Items.UnitID\r\n\t\tLEFT OUTER JOIN Scopes AS scopes ON scopes.ScopeID = Items.ScopeID\r\n\t\tLEFT OUTER JOIN Desciplines AS desciplines ON desciplines.DesciplineId = pl.DesciplineId\r\n        GROUP BY \r\n            p.ArrivalDate,\r\n            pl.Project,\r\n            pos.PoName ,\r\n\t\t\tpl.VendorId,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n            fi.Tag,\r\n            fi.Description,\r\n            units.UnitName,\r\n            scopes.ScopeName,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold,\r\n            desciplines.DesciplineName\r\n        HAVING \r\n            MAX(fi.Balance) > 0 --and \r\n\t\t\t--fi.ItemId = 526024\r\n        ORDER BY fi.ItemId\r\n        --OFFSET @PageSize * (@PageNumber - 1) ROWS\r\n        --FETCH NEXT @PageSize ROWS ONLY;\r\n    END TRY\r\n    BEGIN CATCH\r\n        -- مدیریت خطا\r\n        DECLARE @ErrorMessage NVARCHAR(4000);\r\n        DECLARE @ErrorSeverity INT;\r\n        DECLARE @ErrorState INT;\r\n\r\n        SELECT \r\n            @ErrorMessage = ERROR_MESSAGE(),\r\n            @ErrorSeverity = ERROR_SEVERITY(),\r\n            @ErrorState = ERROR_STATE();\r\n\r\n        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);\r\n    END CATCH\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Material_Issue_Voucher6' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[Search_Material_Issue_Voucher7]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Material_Issue_Voucher7' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[Search_Material_Issue_Voucher7]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[Search_Material_Issue_Voucher7]\r\nAS\r\nBEGIN\r\n    BEGIN TRY\r\n        SET NOCOUNT ON;\r\n\r\n        -- ایجاد جدول موقت برای CTE_RequestData\r\n        CREATE TABLE #RequestData\r\n        (\r\n            LocItemID INT,\r\n            TotalReserveMivQty DECIMAL(18, 2),\r\n            TotalDelMivQty DECIMAL(18, 2),\r\n            TotalDelMivRejQty DECIMAL(18, 2),\r\n            NISQty DECIMAL(18, 2),\r\n            OverQty DECIMAL(18, 2),\r\n            ShortageQty DECIMAL(18, 2),\r\n            DamageQty DECIMAL(18, 2),\r\n            RejectQty DECIMAL(18, 2),\r\n            TotalReturnAcceptQty DECIMAL(18, 2),\r\n            TotalDelMrvRejQty DECIMAL(18, 2)\r\n        )\r\n\r\n        INSERT INTO #RequestData\r\n        SELECT \r\n            li.LocItemID,\r\n            SUM(req.ReserveMivQty) AS TotalReserveMivQty,\r\n            SUM(req.DelMivQty) AS TotalDelMivQty,\r\n            SUM(req.DelMivRejQty) AS TotalDelMivRejQty,\r\n            SUM(li.NISQty) AS NISQty,\r\n            SUM(li.OverQty) AS OverQty,\r\n            SUM(li.ShortageQty) AS ShortageQty,\r\n            SUM(li.DamageQty) AS DamageQty,\r\n            SUM(li.RejectQty) AS RejectQty,\r\n            SUM(req.DelMrvQty * -1) AS TotalReturnAcceptQty,\r\n            SUM(req.DelMrvRejQty * -1) AS TotalDelMrvRejQty\r\n        FROM \r\n            LocItems AS li\r\n        LEFT OUTER JOIN Requests AS req ON li.LocItemID = req.LocItemID\r\n        GROUP BY \r\n            li.LocItemID;\r\n\r\n        -- ایجاد جدول موقت برای CTE_FilteredItems\r\n        CREATE TABLE #FilteredItems\r\n        (\r\n            ItemId INT,\r\n            ScopeID INT,\r\n            UnitID INT,\r\n            PKID INT,\r\n            Tag NVARCHAR(50),\r\n            Description NVARCHAR(255),\r\n            HeatNo NVARCHAR(50),\r\n            BatchNo NVARCHAR(50),\r\n            Remark NVARCHAR(255),\r\n            Hold BIT,\r\n            mrrv DECIMAL(18, 2),\r\n            dell DECIMAL(18, 2),\r\n            ress DECIMAL(18, 2),\r\n            Qty DECIMAL(18, 2),\r\n            Balance DECIMAL(18, 2),\r\n            Inventory DECIMAL(18, 2)\r\n        )\r\n\r\n        INSERT INTO #FilteredItems\r\n        SELECT \r\n            Items.ItemId,\r\n            Items.ScopeID,\r\n            Items.UnitID,\r\n            Items.PKID,\r\n            Items.Tag,\r\n            Items.Description,\r\n            Items.HeatNo,\r\n            Items.BatchNo,\r\n            Items.Remark,\r\n            Items.Hold,\r\n            ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS mrrv,\r\n            ISNULL(SUM(rd.TotalDelMivQty), 0) AS dell,\r\n            ISNULL(SUM(rd.TotalReserveMivQty), 0) AS ress,\r\n            ISNULL(SUM(li.Qty), 0) AS Qty,\r\n            ISNULL(SUM(li.Qty), 0) \r\n                - ISNULL(SUM(rd.TotalReserveMivQty), 0) \r\n                - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                - ISNULL(SUM(li.NISQty), 0) \r\n                - ISNULL(SUM(li.RejectQty), 0) \r\n                - ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Balance,\r\n            ISNULL(SUM(li.Qty), 0) \r\n                - ISNULL(SUM(rd.TotalDelMivQty), 0) \r\n                - ISNULL(SUM(li.NISQty), 0) \r\n                - ISNULL(SUM(li.RejectQty), 0) \r\n                - ISNULL(SUM(rd.TotalReturnAcceptQty), 0) AS Inventory\r\n        FROM \r\n            Items\r\n        LEFT OUTER JOIN LocItems AS li ON Items.ItemId = li.ItemId\r\n        LEFT OUTER JOIN #RequestData AS rd ON li.LocItemID = rd.LocItemID\r\n        GROUP BY \r\n            Items.ItemId,\r\n            Items.ScopeID,\r\n            Items.UnitID,\r\n            Items.PKID,\r\n            Items.Tag,\r\n            Items.Description,\r\n            Items.HeatNo,\r\n            Items.BatchNo,\r\n            Items.Remark,\r\n            Items.Hold;\r\n\r\n        -- اجرای SELECT نهایی بدون HAVING و استفاده از شرط WHERE\r\n        SELECT \r\n            p.ArrivalDate,\r\n            pl.Project,\r\n            pos.PoName AS Po,\r\n            pl.VendorId AS Vendor,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n            fi.Tag,\r\n            fi.Description,\r\n            units.UnitName AS Unit,\r\n            ISNULL(SUM(Items.Qty), 0) AS QtyPL,\r\n            ISNULL(SUM(fi.Qty), 0) AS QtyInLoc, \r\n            ISNULL(SUM(fi.Balance), 0) AS Balance,\r\n            ISNULL(SUM(fi.Inventory), 0) AS Inventory,\r\n            ISNULL(SUM(fi.mrrv), 0) AS TotalMrv,\r\n            ISNULL(SUM(fi.dell), 0) AS TotalMiv,\r\n            ISNULL(SUM(fi.ress), 0) AS TotalReserve,\r\n            desciplines.DesciplineName AS Discipline,\r\n            scopes.ScopeName AS Scope,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold\r\n        FROM \r\n            #FilteredItems AS fi\r\n        INNER JOIN Items ON fi.ItemId = Items.ItemId\r\n        LEFT OUTER JOIN Packages AS p ON Items.PKID = p.PKID\r\n        LEFT OUTER JOIN PackingLists AS pl ON p.PLId = pl.PLId\r\n        LEFT OUTER JOIN Pos AS pos ON pos.PoId = pl.PoId\r\n        LEFT OUTER JOIN Units AS units ON units.UnitID = Items.UnitID\r\n        LEFT OUTER JOIN Scopes AS scopes ON scopes.ScopeID = Items.ScopeID\r\n        LEFT OUTER JOIN Desciplines AS desciplines ON desciplines.DesciplineId = pl.DesciplineId\r\n        WHERE\r\n            fi.Balance > 0 -- شرط جدید\r\n        GROUP BY \r\n            p.ArrivalDate,\r\n            pl.Project,\r\n            pos.PoName,\r\n            pl.VendorId,\r\n            fi.ItemId,\r\n            pl.PLName,\r\n            p.PK,\r\n            Items.ItemOfPk,\r\n            fi.Tag,\r\n            fi.Description,\r\n            units.UnitName,\r\n            scopes.ScopeName,\r\n            fi.HeatNo,\r\n            fi.BatchNo,\r\n            fi.Remark,\r\n            fi.Hold,\r\n            desciplines.DesciplineName\r\n        ORDER BY fi.ItemId;\r\n\r\n        -- حذف جدول‌های موقت\r\n        DROP TABLE #RequestData;\r\n        DROP TABLE #FilteredItems;\r\n\r\n    END TRY\r\n    BEGIN CATCH\r\n        -- مدیریت خطا\r\n        DECLARE @ErrorMessage NVARCHAR(4000);\r\n        DECLARE @ErrorSeverity INT;\r\n        DECLARE @ErrorState INT;\r\n\r\n        SELECT \r\n            @ErrorMessage = ERROR_MESSAGE(),\r\n            @ErrorSeverity = ERROR_SEVERITY(),\r\n            @ErrorState = ERROR_STATE();\r\n\r\n        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);\r\n    END CATCH\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Material_Issue_Voucher7' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[Search_Miv]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Miv' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[Search_Miv]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[Search_Miv]\r\nAS\r\nBEGIN\r\n    BEGIN TRY\r\n        SET NOCOUNT ON;\r\nWITH CTE_LocItems AS (\r\n    SELECT LocItems.LocItemID, LocItems.ItemId, LocItems.LocationID, \r\n           ISNULL(SUM(LocItems.Qty), 0) AS Qty, \r\n           ISNULL(SUM(LocItems.Qty), 0) \r\n               - ISNULL(SUM(req.ReserveMivQty), 0) \r\n               - ISNULL(SUM(req.DelMivQty), 0) \r\n               - ISNULL(SUM(LocItems.NISQty), 0) \r\n               - ISNULL(SUM(LocItems.RejectQty), 0) \r\n               + ISNULL(SUM(req.DelMrvQty * -1), 0) AS Balance,\r\n           ISNULL(SUM(LocItems.Qty), 0) \r\n               - ISNULL(SUM(req.DelMivQty), 0) \r\n               - ISNULL(SUM(LocItems.NISQty), 0) \r\n               - ISNULL(SUM(LocItems.RejectQty), 0) \r\n               + ISNULL(SUM(req.DelMrvQty * -1), 0) AS Inventory\r\n    FROM LocItems\r\n    LEFT JOIN Requests req ON LocItems.LocItemID = req.LocItemID\r\n    GROUP BY LocItems.LocItemID, LocItems.ItemId, LocItems.LocationID, LocItems.Qty\r\n),\r\nCTE_Items AS (\r\n    SELECT Items.ItemId, Items.Tag, Items.Description, Items.UnitID, Items.ScopeID, Items.PKID , Items.Qty\r\n    FROM Items\r\n),\r\nCTE_Packages AS (\r\n    SELECT Packages.PKID,Packages.PK, Packages.ArrivalDate, Packages.MSRNO\r\n    FROM Packages\r\n),\r\nCTE_PackingLists AS (\r\n    SELECT PackingLists.PLId, PackingLists.PLName,PackingLists.PoId, PackingLists.Project, PackingLists.SupplierId, PackingLists.VendorId, PackingLists.IrnId, PackingLists.DesciplineId\r\n    FROM PackingLists\r\n),\r\nCTE_Summary AS (\r\n    SELECT \r\n\t    Pos.PoName,\r\n        Requests.RequestNO,\r\n        RequestTypes.TypeName, \r\n        Requests.ReqDate, \r\n        Requests.ReqLocItemID, \r\n        CTE_LocItems.LocItemID, \r\n        CTE_Items.ItemId, \r\n        Requests.MRCNO, \r\n        Requests.Item, \r\n        CTE_Items.Tag, \r\n        CTE_Items.Description, \r\n        Units.UnitName, \r\n\t\tCTE_Items.Qty as QtyPl,\r\n        CTE_LocItems.Qty as QtyInLoc, \r\n        Requests.ReqMivQty, \r\n        Requests.ReserveMivQty, \r\n        ISNULL(Requests.DelMivQty, 0) AS DelMivQty, \r\n\t\t--ISNULL(Requests.ReqHmvQty, 0) AS ReqHmvQty, \r\n\t\t--ISNULL(Requests.DelHmvQty, 0) AS DelHmvQty, \r\n  --      ISNULL(Requests.DelHmvRejQty, 0) AS DelHmvRejQty, \r\n  --      Requests.HMVNO, \r\n  --      ISNULL(Requests.ReqMrvQty, 0) AS ReqMrvQty, \r\n  --      ISNULL(Requests.DelMrvQty, 0) AS DelMrvQty, \r\n  --      ISNULL(Requests.DelMrvRejQty, 0) AS DelMrvRejQty, \r\n\t\t--Requests.MRVNO, \r\n        Locations.LocationName, \r\n        ApplicationUser.Username as IssuedBy, \r\n        Companies.CompanyName, \r\n        CompanyContracts.ContractNumber, \r\n        Scopes.ScopeName as Scope, \r\n        CTE_Packages.PK, \r\n        CTE_Packages.ArrivalDate, \r\n        CTE_Packages.MSRNO, \r\n        CTE_PackingLists.PLName as PLName, \r\n        CTE_PackingLists.Project, \r\n        Suppliers.SupplierName as Supplier, \r\n        Vendors.VendorName as Vendor, \r\n        Irns.IrnName as IRN, \r\n        Desciplines.DesciplineName as Discipline,\r\n        CTE_LocItems.Balance, -- Adding Balance\r\n        CTE_LocItems.Inventory -- Adding Inventory\r\n    FROM Requests \r\n    LEFT JOIN RequestTypes ON Requests.TypeID = RequestTypes.TypeID\r\n    LEFT JOIN CTE_LocItems ON Requests.LocItemID = CTE_LocItems.LocItemID\r\n    LEFT JOIN CTE_Items ON CTE_LocItems.ItemId = CTE_Items.ItemId\r\n\tLEFT JOIN Scopes ON Scopes.ScopeID = CTE_Items.ScopeID\r\n    LEFT JOIN Locations ON CTE_LocItems.LocationID = Locations.LocationID\r\n    LEFT JOIN Units ON CTE_Items.UnitID = Units.UnitID\r\n    LEFT JOIN Companies ON Requests.CompanyID = Companies.CompanyID\r\n    LEFT JOIN CompanyContracts ON Requests.ContractId = CompanyContracts.ContractId\r\n    LEFT JOIN CTE_Packages ON CTE_Items.PKID = CTE_Packages.PKID\r\n    LEFT JOIN CTE_PackingLists ON CTE_Packages.PKID = CTE_PackingLists.PLId\r\n\tLEFT JOIN Desciplines ON Desciplines.DesciplineId = CTE_PackingLists.DesciplineId\r\n    LEFT JOIN Pos ON Pos.PoId = CTE_PackingLists.PoId\r\n\tLEFT JOIN Suppliers ON CTE_PackingLists.SupplierId = Suppliers.SupplierId\r\n    LEFT JOIN Vendors ON CTE_PackingLists.VendorId = Vendors.VendorID\r\n    LEFT JOIN Irns ON CTE_PackingLists.IrnId = Irns.IrnId\r\n\tLEFT JOIN ApplicationUser ON Requests.IssuedBy=ApplicationUser.UserID\r\n)\r\nSELECT *\r\nFROM CTE_Summary\r\n--ORDER BY RequestNO;\r\n    END TRY\r\n    BEGIN CATCH\r\n        DECLARE @ErrorMessage NVARCHAR(4000);\r\n        DECLARE @ErrorSeverity INT;\r\n        DECLARE @ErrorState INT;\r\n\r\n        SELECT \r\n            @ErrorMessage = ERROR_MESSAGE(),\r\n            @ErrorSeverity = ERROR_SEVERITY(),\r\n            @ErrorState = ERROR_STATE();\r\n\r\n        RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);\r\n    END CATCH\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='Search_Miv' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[sp_AddItem]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_AddItem' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[sp_AddItem]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[sp_AddItem]\r\n    @PKID INT,\r\n    @ItemOfPk INT,\r\n    @Tag NVARCHAR(255),\r\n    @Description NVARCHAR(max),\r\n    @UnitID INT,\r\n    @Qty DECIMAL(18, 2),\r\n    @OverQty DECIMAL(18, 2),\r\n    @ShortageQty DECIMAL(18, 2),\r\n    @DamageQty DECIMAL(18, 2),\r\n    @IncorectQty DECIMAL(18, 2),\r\n    @ScopeID INT,\r\n    @HeatNo NVARCHAR(255),\r\n    @BatchNo NVARCHAR(255),\r\n    @Remark NVARCHAR(255),\r\n    @MTRNo NVARCHAR(255),\r\n    @ColorCode NVARCHAR(255),\r\n    @LabelNo NVARCHAR(255),\r\n    @EnteredBy INT,\r\n    @EnteredDate DATETIME,\r\n    @EditedBy INT,\r\n    @EditedDate DATETIME,\r\n    @Price DECIMAL(18, 2),\r\n    @UnitPriceID INT,\r\n    @NetW DECIMAL(18, 2),\r\n    @GrossW DECIMAL(18, 2),\r\n    @ItemCodeId INT,\r\n    @BaseMaterial NVARCHAR(50),\r\n    @Hold BIT,\r\n    @NIS DECIMAL(18, 2)\r\nAS\r\nBEGIN\r\n    INSERT INTO Items (PKID, ItemOfPk, Tag, Description, UnitID, Qty, OverQty, ShortageQty, DamageQty, IncorectQty, ScopeID, HeatNo, BatchNo, Remark, MTRNo, ColorCode, LabelNo, EnteredBy, EnteredDate, EditedBy, EditedDate, Price, UnitPriceID, NetW, GrossW, ItemCodeId, BaseMaterial, Hold, NIS)\r\n    VALUES (@PKID, @ItemOfPk, @Tag, @Description, @UnitID, @Qty, @OverQty, @ShortageQty, @DamageQty, @IncorectQty, @ScopeID, @HeatNo, @BatchNo, @Remark, @MTRNo, @ColorCode, @LabelNo, @EnteredBy, @EnteredDate, @EditedBy, @EditedDate, @Price, @UnitPriceID, @NetW, @GrossW, @ItemCodeId, @BaseMaterial, @Hold, @NIS)\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_AddItem' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[sp_AddItemWithAddLocitemWithTrigger]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_AddItemWithAddLocitemWithTrigger' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[sp_AddItemWithAddLocitemWithTrigger]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[sp_AddItemWithAddLocitemWithTrigger]\r\n    @PKID INT,\r\n    @ItemOfPk INT,\r\n    @Tag NVARCHAR(50),\r\n    @Description NVARCHAR(250),\r\n    @UnitID INT,\r\n    @Qty DECIMAL(18, 2),\r\n    @OverQty DECIMAL(18, 2),\r\n    @ShortageQty DECIMAL(18, 2),\r\n    @DamageQty DECIMAL(18, 2),\r\n    @IncorectQty DECIMAL(18, 2),\r\n    @ScopeID INT,\r\n    @HeatNo NVARCHAR(50),\r\n    @BatchNo NVARCHAR(50),\r\n    @Remark NVARCHAR(250),\r\n    @MTRNo NVARCHAR(50),\r\n    @ColorCode NVARCHAR(50),\r\n    @LabelNo NVARCHAR(50),\r\n    @EnteredBy INT,\r\n    @EnteredDate DATETIME,\r\n    @EditedBy INT,\r\n    @EditedDate DATETIME,\r\n    @Price DECIMAL(18, 2),\r\n    @UnitPriceID INT,\r\n    @NetW DECIMAL(18, 2),\r\n    @GrossW DECIMAL(18, 2),\r\n    @ItemCodeId NVARCHAR(50),\r\n    @BaseMaterial NVARCHAR(50),\r\n    @Hold BIT,\r\n    @NIS BIT,\r\n    @LocationID INT, -- New parameter\r\n    @NewItemId INT OUTPUT -- Output parameter for new ItemId\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\t\r\n    -- Pass LocationID to the trigger context\r\n    -- Set session context\n    EXEC sp_set_session_context @key = 'LocationID', @value = @LocationID;\r\n\r\n    -- Insert into Item table\r\n    INSERT INTO Items (PKID, ItemOfPk, Tag, Description, UnitID, Qty, OverQty, ShortageQty, DamageQty, IncorectQty, ScopeID, HeatNo, BatchNo, Remark, MTRNo, ColorCode, LabelNo, EnteredBy, EnteredDate, EditedBy, EditedDate, Price, UnitPriceID, NetW, GrossW, ItemCodeId, BaseMaterial, Hold, NIS)\r\n    VALUES (@PKID, @ItemOfPk, @Tag, @Description, @UnitID, @Qty, @OverQty, @ShortageQty, @DamageQty, @IncorectQty, @ScopeID, @HeatNo, @BatchNo, @Remark, @MTRNo, @ColorCode, @LabelNo, @EnteredBy, @EnteredDate, @EditedBy, @EditedDate, @Price, @UnitPriceID, @NetW, @GrossW, @ItemCodeId, @BaseMaterial, @Hold, @NIS);\r\n\r\n    -- Get the new ItemId\r\n    SET @NewItemId = SCOPE_IDENTITY();\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_AddItemWithAddLocitemWithTrigger' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[sp_AddUser]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_AddUser' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[sp_AddUser]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[sp_AddUser]\r\n    @Username NVARCHAR(50),\r\n    @PasswordHash NVARCHAR(255),\r\n    @RoleID INT,\r\n    @UserID INT OUTPUT\r\nAS\r\nBEGIN\r\n    INSERT INTO ApplicationUser (Username, PasswordHash, RoleID)\r\n    VALUES (@Username, @PasswordHash, @RoleID);\r\n    \r\n    SET @UserID = SCOPE_IDENTITY();\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_AddUser' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[sp_AllItemSelectedPl]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_AllItemSelectedPl' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[sp_AllItemSelectedPl]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[sp_AllItemSelectedPl]\r\nAS\r\nBEGIN\r\n    SELECT \r\n        Packages.PKID, \r\n        Packages.PLId, \r\n        Packages.PK, \r\n        LocItems.LocItemID, \r\n        LocItems.LocationID, \r\n        LocItems.Qty, \r\n        LocItems.OverQty, \r\n        LocItems.ShortageQty, \r\n        LocItems.DamageQty, \r\n        LocItems.RejectQty, \r\n        LocItems.NISQty, \r\n        Items.ItemId, \r\n        Items.ItemOfPk, \r\n        Items.Tag, \r\n        Items.Description, \r\n        Items.UnitID, \r\n        Items.Qty AS Expr1, \r\n        Items.OverQty AS Expr2, \r\n        Items.ShortageQty AS Expr3, \r\n        Items.DamageQty AS Expr4, \r\n        Items.IncorectQty, \r\n        Items.ScopeID, \r\n        Items.Remark, \r\n        Items.Hold, \r\n        Items.NIS, \r\n        Items.HeatNo, \r\n        Items.BatchNo, \r\n        Items.StorageCode, \r\n        Packages.ArrivalDate, \r\n        Packages.MSRNO, \r\n        Packages.MSRPDF\r\n    FROM \r\n        Items \r\n    INNER JOIN\r\n        LocItems ON Items.ItemId = LocItems.ItemId \r\n    INNER JOIN\r\n        Packages ON Items.PKID = Packages.PKID\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_AllItemSelectedPl' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[sp_DeleteItem]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_DeleteItem' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[sp_DeleteItem]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[sp_DeleteItem]\r\n    @ItemId INT\r\nAS\r\nBEGIN\r\n    DELETE FROM Items WHERE ItemId = @ItemId\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_DeleteItem' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[sp_DeleteUser]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_DeleteUser' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[sp_DeleteUser]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[sp_DeleteUser]\r\n    @UserID INT\r\nAS\r\nBEGIN\r\n    DELETE FROM ApplicationUser WHERE UserID = @UserID;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_DeleteUser' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[sp_GetAllCompanyNames]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetAllCompanyNames' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[sp_GetAllCompanyNames]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[sp_GetAllCompanyNames]\r\nAS\r\nBEGIN\r\n   SELECT * FROM Companies;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetAllCompanyNames' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[sp_GetAllItems]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetAllItems' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[sp_GetAllItems]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[sp_GetAllItems]\r\nAS\r\nBEGIN\r\n    SELECT * FROM Items\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetAllItems' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[sp_GetAllUsers]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetAllUsers' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[sp_GetAllUsers]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[sp_GetAllUsers]\r\nAS\r\nBEGIN\r\n    SELECT UserID, Username, PasswordHash, RoleID\r\n    FROM ApplicationUser;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetAllUsers' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[sp_GetItemById]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetItemById' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[sp_GetItemById]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[sp_GetItemById]\r\n    @ItemId INT\r\nAS\r\nBEGIN\r\n    SELECT * FROM Items WHERE ItemId = @ItemId\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetItemById' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[sp_GetItemsByPlIdOptimized]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetItemsByPlIdOptimized' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[sp_GetItemsByPlIdOptimized]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[sp_GetItemsByPlIdOptimized]\r\n    @PlId INT\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- مرحله 1: استخراج PKIDها\r\n    CREATE TABLE #TempPKIDs (\r\n        PKID INT PRIMARY KEY\r\n    );\r\n    INSERT INTO #TempPKIDs (PKID)\r\n    SELECT DISTINCT PKID\r\n    FROM Packages\r\n    WHERE PLId = @PlId;\r\n    CREATE NONCLUSTERED INDEX IX_TempPKIDs_PKID ON #TempPKIDs (PKID);\r\n\r\n    -- مرحله 2: استخراج ItemIDها\r\n    CREATE TABLE #TempItemIDs (\r\n        ItemId INT PRIMARY KEY\r\n    );\r\n    INSERT INTO #TempItemIDs (ItemId)\r\n    SELECT DISTINCT i.ItemId\r\n    FROM Items i\r\n    INNER JOIN #TempPKIDs t ON i.PKID = t.PKID;\r\n    CREATE NONCLUSTERED INDEX IX_TempItemIDs_ItemId ON #TempItemIDs (ItemId);\r\n\r\n    -- مرحله 3: برگرداندن اطلاعات کامل\r\n    SELECT  i.ItemId,\r\n\t\t\t   i.PKID,\r\n\t\t\t   i.ItemOfPk,\r\n\t\t\t   i.Tag,\r\n\t\t\t   i.Description,\r\n\t\t\t   i.UnitID,\r\n\t\t\t   i.Qty,\r\n\t\t\t   i.OverQty,\r\n\t\t\t   i.ShortageQty,\r\n\t\t\t   i.DamageQty,\r\n\t\t\t   i.IncorectQty,\r\n\t\t\t   i.ScopeID,\r\n\t\t\t   i.HeatNo,\r\n\t\t\t   i.BatchNo,\r\n\t\t\t   i.Remark,\r\n\t\t\t   i.MTRNo,\r\n\t\t\t   i.ColorCode,\r\n\t\t\t   i.LabelNo,\r\n\t\t\t   i.EnteredBy,\r\n\t\t\t   i.EnteredDate,\r\n\t\t\t   i.EditedBy,\r\n\t\t\t   i.EditedDate,\r\n\t\t\t   i.Price,\r\n\t\t\t   i.UnitPriceID,\r\n\t\t\t   i.NetW,\r\n\t\t\t   i.GrossW,\r\n\t\t\t   i.ItemCodeId,\r\n\t\t\t   i.BaseMaterial,\r\n\t\t\t   i.Hold,\r\n\t\t\t   i.NIS,\r\n\t\t\t   i.StorageCode\r\n    FROM Items i\r\n    INNER JOIN #TempItemIDs t ON i.ItemId = t.ItemId;\r\n\r\n    -- مرحله 4: پاک‌سازي جداول موقتي\r\n    DROP TABLE #TempPKIDs;\r\n    DROP TABLE #TempItemIDs;\r\n\r\n    SET NOCOUNT OFF;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetItemsByPlIdOptimized' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[sp_GetItemsByPlIdOptimized2]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetItemsByPlIdOptimized2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[sp_GetItemsByPlIdOptimized2]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[sp_GetItemsByPlIdOptimized2]\r\n    @PlId INT\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- مرحله 1: استخراج PKIDها\r\n    CREATE TABLE #TempPKIDs (\r\n        PKID INT PRIMARY KEY\r\n    );\r\n    INSERT INTO #TempPKIDs (PKID)\r\n    SELECT DISTINCT PKID\r\n    FROM Packages\r\n    WHERE PLId = @PlId;\r\n\r\n    -- مرحله 2: ایجاد ایندکس روی جدول موقتی (اختیاری)\r\n    CREATE NONCLUSTERED INDEX IX_TempPKIDs_PKID ON #TempPKIDs (PKID);\r\n\r\n    -- مرحله 3: استخراج ItemIDها\r\n    CREATE TABLE #TempItemIDs (\r\n        ItemId INT PRIMARY KEY\r\n    );\r\n    INSERT INTO #TempItemIDs (ItemId)\r\n    SELECT DISTINCT ItemId\r\n    FROM Items\r\n    WHERE PKID IN (SELECT PKID FROM #TempPKIDs);\r\n\r\n    -- مرحله 4: ایجاد ایندکس روی جدول موقتی (اختیاری)\r\n    CREATE NONCLUSTERED INDEX IX_TempItemIDs_ItemId ON #TempItemIDs (ItemId);\r\n\r\n    -- مرحله 5: برگرداندن اطلاعات کامل\r\n    SELECT *\r\n    FROM Items\r\n    WHERE ItemId IN (SELECT ItemId FROM #TempItemIDs);\r\n\r\n    -- مرحله 6: پاک‌سازی جداول موقتی\r\n    DROP TABLE #TempPKIDs;\r\n    DROP TABLE #TempItemIDs;\r\n\r\n    SET NOCOUNT OFF;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetItemsByPlIdOptimized2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[sp_GetItemsByPlIdOptimized3]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetItemsByPlIdOptimized3' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[sp_GetItemsByPlIdOptimized3]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[sp_GetItemsByPlIdOptimized3]\r\n    @PlId INT\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- مرحله 1: استخراج PKIDها\r\n    CREATE TABLE #TempPKIDs (\r\n        PKID INT PRIMARY KEY\r\n    );\r\n    INSERT INTO #TempPKIDs (PKID)\r\n    SELECT DISTINCT PKID\r\n    FROM Packages\r\n    WHERE PLId = @PlId;\r\n\r\n    -- مرحله 2: استخراج ItemIdها\r\n    CREATE TABLE #TempItemIDs (\r\n        ItemId INT PRIMARY KEY\r\n    );\r\n    INSERT INTO #TempItemIDs (ItemId)\r\n    SELECT ItemId\r\n    FROM Items\r\n    WHERE PKID IN (SELECT PKID FROM #TempPKIDs);\r\n\r\n    -- مرحله 3: برگرداندن اطلاعات کامل\r\n    SELECT *\r\n    FROM Items\r\n    WHERE ItemId IN (SELECT ItemId FROM #TempItemIDs);\r\n\r\n    -- مرحله 4: پاک‌سازی جداول موقتی\r\n    DROP TABLE #TempPKIDs;\r\n    DROP TABLE #TempItemIDs;\r\n\r\n    SET NOCOUNT OFF;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetItemsByPlIdOptimized3' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[sp_GetItemsByPlIdWITH_IndexedView]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetItemsByPlIdWITH_IndexedView' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[sp_GetItemsByPlIdWITH_IndexedView]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[sp_GetItemsByPlIdWITH_IndexedView]\r\n    @PlId INT\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    SELECT \r\n        ItemId,\r\n        PKID,\r\n        ItemOfPk,\r\n        Tag,\r\n        Description,\r\n        UnitID,\r\n        Qty,\r\n        OverQty,\r\n        ShortageQty,\r\n        DamageQty,\r\n        IncorectQty,\r\n        ScopeID,\r\n        HeatNo,\r\n        BatchNo,\r\n        Remark,\r\n        MTRNo,\r\n        ColorCode,\r\n        LabelNo,\r\n        EnteredBy,\r\n        EnteredDate,\r\n        EditedBy,\r\n        EditedDate,\r\n        Price,\r\n        UnitPriceID,\r\n        NetW,\r\n        GrossW,\r\n        ItemCodeId,\r\n        BaseMaterial,\r\n        Hold,\r\n        NIS,\r\n        StorageCode\r\n    FROM dbo.vw_ItemsWithPackages\r\n    WHERE PLId = @PlId\r\n    OPTION (RECOMPILE);\r\n\r\n    SET NOCOUNT OFF;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetItemsByPlIdWITH_IndexedView' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[sp_GetItemsByPlIdWithCTE]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetItemsByPlIdWithCTE' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[sp_GetItemsByPlIdWithCTE]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[sp_GetItemsByPlIdWithCTE]\r\n        @PlId INT\nAS\nBEGIN\n    -- تنظیم NOCOUNT برای جلوگیری از پیام‌های غیرضروری\t\n\tSET NOCOUNT ON;\n    ;WITH TempPKs AS (\n        SELECT PKID\n        FROM Packages\n        WHERE PLId = @PlId\n    )\n    SELECT i.*\n    FROM Items i\n    INNER JOIN TempPKs t ON i.PKID = t.PKID\r\n\t-- بازگرداندن NOCOUNT به حالت قبلی\r\n    SET NOCOUNT OFF;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetItemsByPlIdWithCTE' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[sp_GetItemsByPlIdWithLoopAndMergeJoin]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetItemsByPlIdWithLoopAndMergeJoin' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[sp_GetItemsByPlIdWithLoopAndMergeJoin]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[sp_GetItemsByPlIdWithLoopAndMergeJoin]\r\n    @PlId INT\r\nAS\r\nBEGIN\r\n -- تنظیم NOCOUNT برای جلوگیری از پیام‌های غیرضروری\t\n\tSET NOCOUNT ON;\r\n\t--\tSELECT *\r\n\t\t--FROM Items i\r\n\t\t--INNER JOIN Packages p ON i.PKID = p.PKID\r\n\t\t--WHERE p.PLId = @PlId\r\n\t\t--OPTION (MERGE JOIN);\r\n\t\tSELECT i.ItemId,\r\n\t\t\t   i.PKID,\r\n\t\t\t   i.ItemOfPk,\r\n\t\t\t   i.Tag,\r\n\t\t\t   i.Description,\r\n\t\t\t   i.UnitID,\r\n\t\t\t   i.Qty,\r\n\t\t\t   i.OverQty,\r\n\t\t\t   i.ShortageQty,\r\n\t\t\t   i.DamageQty,\r\n\t\t\t   i.IncorectQty,\r\n\t\t\t   i.ScopeID,\r\n\t\t\t   i.HeatNo,\r\n\t\t\t   i.BatchNo,\r\n\t\t\t   i.Remark,\r\n\t\t\t   i.MTRNo,\r\n\t\t\t   i.ColorCode,\r\n\t\t\t   i.LabelNo,\r\n\t\t\t   i.EnteredBy,\r\n\t\t\t   i.EnteredDate,\r\n\t\t\t   i.EditedBy,\r\n\t\t\t   i.EditedDate,\r\n\t\t\t   i.Price,\r\n\t\t\t   i.UnitPriceID,\r\n\t\t\t   i.NetW,\r\n\t\t\t   i.GrossW,\r\n\t\t\t   i.ItemCodeId,\r\n\t\t\t   i.BaseMaterial,\r\n\t\t\t   i.Hold,\r\n\t\t\t   i.NIS,\r\n\t\t\t   i.StorageCode\r\n\t\tFROM Items i\r\n\t\tINNER JOIN Packages p ON i.PKID = p.PKID\r\n\t\tWHERE p.PLId = @PlId\r\n\t\tOPTION (LOOP JOIN);\r\n\t-- بازگرداندن NOCOUNT به حالت قبلی\r\n    SET NOCOUNT OFF;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetItemsByPlIdWithLoopAndMergeJoin' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[sp_GetItemsByPlIdWithLoopAndMergeJoin_WITH_IndexedView]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetItemsByPlIdWithLoopAndMergeJoin_WITH_IndexedView' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[sp_GetItemsByPlIdWithLoopAndMergeJoin_WITH_IndexedView]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[sp_GetItemsByPlIdWithLoopAndMergeJoin_WITH_IndexedView]\r\n    @PlId INT\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    SELECT \r\n        ItemId,\r\n        PKID,\r\n        ItemOfPk,\r\n        Tag,\r\n        Description,\r\n        UnitID,\r\n        Qty,\r\n        OverQty,\r\n        ShortageQty,\r\n        DamageQty,\r\n        IncorectQty,\r\n        ScopeID,\r\n        HeatNo,\r\n        BatchNo,\r\n        Remark,\r\n        MTRNo,\r\n        ColorCode,\r\n        LabelNo,\r\n        EnteredBy,\r\n        EnteredDate,\r\n        EditedBy,\r\n        EditedDate,\r\n        Price,\r\n        UnitPriceID,\r\n        NetW,\r\n        GrossW,\r\n        ItemCodeId,\r\n        BaseMaterial,\r\n        Hold,\r\n        NIS,\r\n        StorageCode\r\n    FROM dbo.vw_ItemsWithPackages\r\n    WHERE PLId = @PlId;\r\n    \r\n    SET NOCOUNT OFF;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetItemsByPlIdWithLoopAndMergeJoin_WITH_IndexedView' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[sp_GetItemsByPlIdWithTempTable]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetItemsByPlIdWithTempTable' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[sp_GetItemsByPlIdWithTempTable]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[sp_GetItemsByPlIdWithTempTable]\r\n    @PlId INT\r\nAS\r\nBEGIN\r\n    ---- ایجاد جدول موقت برای نگهداری PKID ها\r\n    CREATE TABLE #TempPKs (PKID INT PRIMARY KEY)\r\n\r\n    -- قرار دادن PKID ها در جدول موقت و ایجاد ایندکس\r\n    INSERT INTO #TempPKs (PKID)\r\n    SELECT PKID FROM Packages WHERE PLId = @PlId\r\n\r\n    -- استخراج Item ها بر اساس PKID ها از جدول موقت\r\n    SELECT     i.ItemId,\r\n\t\t\t   i.PKID,\r\n\t\t\t   i.ItemOfPk,\r\n\t\t\t   i.Tag,\r\n\t\t\t   i.Description,\r\n\t\t\t   i.UnitID,\r\n\t\t\t   i.Qty,\r\n\t\t\t   i.OverQty,\r\n\t\t\t   i.ShortageQty,\r\n\t\t\t   i.DamageQty,\r\n\t\t\t   i.IncorectQty,\r\n\t\t\t   i.ScopeID,\r\n\t\t\t   i.HeatNo,\r\n\t\t\t   i.BatchNo,\r\n\t\t\t   i.Remark,\r\n\t\t\t   i.MTRNo,\r\n\t\t\t   i.ColorCode,\r\n\t\t\t   i.LabelNo,\r\n\t\t\t   i.EnteredBy,\r\n\t\t\t   i.EnteredDate,\r\n\t\t\t   i.EditedBy,\r\n\t\t\t   i.EditedDate,\r\n\t\t\t   i.Price,\r\n\t\t\t   i.UnitPriceID,\r\n\t\t\t   i.NetW,\r\n\t\t\t   i.GrossW,\r\n\t\t\t   i.ItemCodeId,\r\n\t\t\t   i.BaseMaterial,\r\n\t\t\t   i.Hold,\r\n\t\t\t   i.NIS,\r\n\t\t\t   i.StorageCode\r\n    FROM Items i\r\n    INNER JOIN #TempPKs t ON i.PKID = t.PKID\r\n\r\n    -- حذف جدول موقت\r\n    DROP TABLE #TempPKs\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetItemsByPlIdWithTempTable' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[sp_GetItemsByPlIdWithTempTableAndSubQuery]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetItemsByPlIdWithTempTableAndSubQuery' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[sp_GetItemsByPlIdWithTempTableAndSubQuery]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[sp_GetItemsByPlIdWithTempTableAndSubQuery]\r\n    @PlId INT\r\nAS\r\nBEGIN\r\n    -- تنظیم NOCOUNT برای جلوگیری از پیام‌های غیرضروری\r\n    SET NOCOUNT ON;\r\n\r\n    -- ایجاد جدول موقت برای نگهداری PKID ها\r\n    CREATE TABLE #TempPKs (PKID INT PRIMARY KEY);\r\n\r\n    -- قرار دادن PKID ها در جدول موقت\r\n    INSERT INTO #TempPKs (PKID)\r\n    SELECT PKID FROM Packages WHERE PLId = @PlId;\r\n\r\n    -- ایجاد ایندکس بر روی جدول موقت برای بهبود عملکرد\r\n    CREATE INDEX IX_TempPKs_PKID ON #TempPKs(PKID);\r\n\r\n    -- استخراج Item ها بر اساس PKID ها از جدول موقت\r\n    SELECT i.*\r\n    FROM Items i\r\n    WHERE i.PKID IN (SELECT PKID FROM #TempPKs);\r\n\r\n    -- حذف جدول موقت\r\n    DROP TABLE #TempPKs;\r\n\r\n    -- بازگرداندن NOCOUNT به حالت قبلی\r\n    SET NOCOUNT OFF;\r\nEND\r\n\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetItemsByPlIdWithTempTableAndSubQuery' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[sp_GetUserById]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetUserById' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[sp_GetUserById]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[sp_GetUserById]\r\n    @UserID INT\r\nAS\r\nBEGIN\r\n    SELECT UserID, Username, PasswordHash, RoleID\r\n    FROM ApplicationUser\r\n    WHERE UserID = @UserID;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetUserById' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[sp_GetUserByUsername]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetUserByUsername' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[sp_GetUserByUsername]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[sp_GetUserByUsername]\r\n    @Username NVARCHAR(50)\r\nAS\r\nBEGIN\r\n    SELECT UserID, Username, PasswordHash, RoleID\r\n    FROM ApplicationUser\r\n    WHERE Username = @Username;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_GetUserByUsername' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[sp_UpdateItem]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_UpdateItem' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[sp_UpdateItem]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[sp_UpdateItem]\r\n    @ItemId INT,\r\n    @PKID INT,\r\n    @ItemOfPk INT,\r\n    @Tag NVARCHAR(500),\r\n    @Description NVARCHAR(500),\r\n    @UnitID INT,\r\n    @Qty DECIMAL(18, 2),\r\n    @OverQty DECIMAL(18, 2),\r\n    @ShortageQty DECIMAL(18, 2),\r\n    @DamageQty DECIMAL(18, 2),\r\n    @IncorectQty DECIMAL(18, 2),\r\n    @ScopeID INT,\r\n    @HeatNo NVARCHAR(500),\r\n    @BatchNo NVARCHAR(500),\r\n    @Remark NVARCHAR(500),\r\n    @MTRNo NVARCHAR(200),\r\n    @ColorCode NVARCHAR(50),\r\n    @LabelNo NVARCHAR(50),\r\n    @EnteredBy INT,\r\n    @EnteredDate DATETIME,\r\n    @EditedBy INT,\r\n    @EditedDate DATETIME,\r\n    @Price DECIMAL(18, 2),\r\n    @UnitPriceID INT,\r\n    @NetW DECIMAL(18, 2),\r\n    @GrossW DECIMAL(18, 2),\r\n    @ItemCodeId INT,\r\n    @BaseMaterial NVARCHAR(MAX),\r\n    @Hold BIT,\r\n    @NIS DECIMAL(18, 2)\r\nAS\r\nBEGIN\r\n    UPDATE Items\r\n    SET\r\n        PKID = @PKID,\r\n        ItemOfPk = @ItemOfPk,\r\n        Tag = @Tag,\r\n        Description = @Description,\r\n        UnitID = @UnitID,\r\n        Qty = @Qty,\r\n        OverQty = @OverQty,\r\n        ShortageQty = @ShortageQty,\r\n        DamageQty = @DamageQty,\r\n        IncorectQty = @IncorectQty,\r\n        ScopeID = @ScopeID,\r\n        HeatNo = @HeatNo,\r\n        BatchNo = @BatchNo,\r\n        Remark = @Remark,\r\n        EditedBy = @EditedBy,\r\n        EditedDate = @EditedDate,\r\n        Price = @Price,\r\n        UnitPriceID = @UnitPriceID,\r\n        NetW = @NetW,\r\n        GrossW = @GrossW,\r\n        Hold = @Hold,\r\n        NIS = @NIS\r\n    WHERE ItemId = @ItemId\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_UpdateItem' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[sp_UpdateUser]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_UpdateUser' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[sp_UpdateUser]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[sp_UpdateUser]\r\n    @UserID INT,\r\n    @Username NVARCHAR(50),\r\n    @PasswordHash NVARCHAR(255),\r\n    @RoleID INT\r\nAS\r\nBEGIN\r\n    UPDATE ApplicationUser\r\n    SET Username = @Username,\r\n        PasswordHash = @PasswordHash,\r\n        RoleID = @RoleID\r\n    WHERE UserID = @UserID;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='sp_UpdateUser' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spDeleteLocation]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spDeleteLocation' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spDeleteLocation]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spDeleteLocation]\r\n    @LocationID INT\r\nAS\r\nBEGIN\r\n    DELETE FROM Locations\r\n    WHERE LocationID = @LocationID;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spDeleteLocation' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spDeleteScope]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spDeleteScope' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spDeleteScope]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spDeleteScope]\r\n    @ScopeID INT\r\nAS\r\nBEGIN\r\n    DELETE FROM Scopes\r\n    WHERE ScopeID = @ScopeID\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spDeleteScope' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spDeleteUnit]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spDeleteUnit' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spDeleteUnit]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spDeleteUnit]\r\n    @UnitID INT\r\nAS\r\nBEGIN\r\n    DELETE FROM Units\r\n    WHERE UnitID = @UnitID\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spDeleteUnit' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spGetAllLocationChanges]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spGetAllLocationChanges' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spGetAllLocationChanges]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","create PROCEDURE [dbo].[spGetAllLocationChanges]\r\nAS\nBEGIN\n    -- Select locations where LocationId is not 1 and order by LocationName\n    SELECT LocationId, LocationName \n    FROM Locations\n    WHERE LocationId <> 1\n    ORDER BY LocationName;\nEND\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spGetAllLocationChanges' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spGetAllLocations]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spGetAllLocations' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spGetAllLocations]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spGetAllLocations]\r\nAS\r\nBEGIN\r\n    SELECT LocationId,LocationName FROM Locations;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spGetAllLocations' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spGetAllLocationsJustLocationName]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spGetAllLocationsJustLocationName' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spGetAllLocationsJustLocationName]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","create PROCEDURE [dbo].[spGetAllLocationsJustLocationName]\r\nAS\r\nBEGIN\r\n    SELECT LocationName FROM Locations;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spGetAllLocationsJustLocationName' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spGetAllScopes]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spGetAllScopes' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spGetAllScopes]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spGetAllScopes]\r\nAS\r\nBEGIN\r\n    SELECT ScopeID, ScopeName FROM Scopes\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spGetAllScopes' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spGetAllUnits]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spGetAllUnits' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spGetAllUnits]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spGetAllUnits]\r\nAS\r\nBEGIN\r\n    SELECT UnitID, UnitName FROM Units\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spGetAllUnits' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spGetLocationById]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spGetLocationById' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spGetLocationById]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spGetLocationById]\r\n    @LocationID INT\r\nAS\r\nBEGIN\r\n    SELECT * FROM Locations\r\n    WHERE LocationID = @LocationID;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spGetLocationById' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spGetRequestsByLocItemId]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spGetRequestsByLocItemId' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spGetRequestsByLocItemId]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spGetRequestsByLocItemId]\r\n    @LocItemId INT\r\nAS\r\nBEGIN\r\nSELECT ROW_NUMBER() OVER (ORDER BY Requests.ReqLocItemID) AS RowNumber,Requests.ReqLocItemID, Requests.LocItemID, Requests.CompanyID, Requests.CompanyID2, Requests.ContractId, Requests.ContractId2, Requests.AreaUnitID, Requests.VendorID, Requests.TypeID, Requests.RequestNO, \r\n                  Requests.ReqDate, Requests.Item, Requests.ReqMivQty, Requests.ReserveMivQty, Requests.DelMivQty, Requests.ReqMivRejQty, Requests.ReserveMivRejQty, Requests.DelMivRejQty, Requests.ReqMrvQty, Requests.DelMrvQty, \r\n                  Requests.DelMrvRejQty, Requests.ReqHmvQty, Requests.DelHmvQty, Requests.DelHmvRejQty, ApplicationUser.Username as IssuedBy, Requests.IssuedDate, Requests.ApprovedBy, Requests.ApprovedDate, Requests.DelDate, Requests.Remark, \r\n                  Requests.MRCNO, Requests.MRVNO, Requests.HMVNO, Requests.RequestPDF, Requests.RequestTypeTypeID, Units.UnitName, Items.ItemId, Companies.CompanyName, CompanyContracts.ContractNumber\r\nFROM     Requests left JOIN\r\n                  Companies ON Requests.CompanyID = Companies.CompanyID left JOIN\r\n                  CompanyContracts ON Requests.ContractId = CompanyContracts.ContractId left JOIN\r\n                  LocItems ON Requests.LocItemID = LocItems.LocItemID left JOIN\r\n                  Items ON LocItems.ItemId = Items.ItemId left JOIN\r\n                  Units ON Items.UnitID = Units.UnitID left JOIN\r\n                  ApplicationUser ON Requests.IssuedBy = ApplicationUser.UserID\r\n    WHERE Requests.LocItemID = @LocItemId;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spGetRequestsByLocItemId' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spGetRequestsByLocItemIds]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spGetRequestsByLocItemIds' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spGetRequestsByLocItemIds]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","create PROCEDURE [dbo].[spGetRequestsByLocItemIds]\r\n    @LocItemId INT\r\nAS\r\nBEGIN\r\n    -- Step 1: Retrieve the ItemId associated with the given LocItemID\r\n    DECLARE @ItemId INT;\r\n    SELECT @ItemId = ItemId\r\n    FROM LocItems\r\n    WHERE LocItemID = @LocItemId;\r\n\r\n    -- Step 2: Retrieve all LocItemIDs associated with the retrieved ItemId\r\n    SELECT \r\n        ROW_NUMBER() OVER (ORDER BY Requests.ReqLocItemID) AS RowNumber,\r\n        Requests.ReqLocItemID, \r\n        Requests.LocItemID, \r\n        Requests.CompanyID, \r\n        Requests.CompanyID2, \r\n        Requests.ContractId, \r\n        Requests.ContractId2, \r\n        Requests.AreaUnitID, \r\n        Requests.VendorID, \r\n        Requests.TypeID, \r\n        Requests.RequestNO, \r\n        Requests.ReqDate, \r\n        Requests.Item, \r\n        Requests.ReqMivQty, \r\n        Requests.ReserveMivQty, \r\n        Requests.DelMivQty, \r\n        Requests.ReqMivRejQty, \r\n        Requests.ReserveMivRejQty, \r\n        Requests.DelMivRejQty, \r\n        Requests.ReqMrvQty, \r\n        Requests.DelMrvQty, \r\n        Requests.DelMrvRejQty, \r\n        Requests.ReqHmvQty, \r\n        Requests.DelHmvQty, \r\n        Requests.DelHmvRejQty, \r\n        ApplicationUser.Username as IssuedBy, \r\n        Requests.IssuedDate, \r\n        Requests.ApprovedBy, \r\n        Requests.ApprovedDate, \r\n        Requests.DelDate, \r\n        Requests.Remark, \r\n        Requests.MRCNO, \r\n        Requests.MRVNO, \r\n        Requests.HMVNO, \r\n        Requests.RequestPDF, \r\n        Requests.RequestTypeTypeID, \r\n        Units.UnitName, \r\n        Items.ItemId, \r\n        Companies.CompanyName, \r\n        CompanyContracts.ContractNumber\r\n    FROM Requests \r\n    LEFT JOIN Companies ON Requests.CompanyID = Companies.CompanyID \r\n    LEFT JOIN CompanyContracts ON Requests.ContractId = CompanyContracts.ContractId \r\n    LEFT JOIN LocItems ON Requests.LocItemID = LocItems.LocItemID \r\n    LEFT JOIN Items ON LocItems.ItemId = Items.ItemId \r\n    LEFT JOIN Units ON Items.UnitID = Units.UnitID \r\n    LEFT JOIN ApplicationUser ON Requests.IssuedBy = ApplicationUser.UserID\r\n    WHERE Requests.LocItemID IN (SELECT LocItemID FROM LocItems WHERE ItemId = @ItemId);\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spGetRequestsByLocItemIds' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spGetScopeById]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spGetScopeById' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spGetScopeById]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spGetScopeById]\r\n    @ScopeID INT\r\nAS\r\nBEGIN\r\n    SELECT ScopeID, ScopeName FROM Scopes\r\n    WHERE ScopeID = @ScopeID\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spGetScopeById' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spGetUnitById]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spGetUnitById' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spGetUnitById]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spGetUnitById]\r\n    @UnitID INT\r\nAS\r\nBEGIN\r\n    SELECT UnitID, UnitName FROM Units\r\n    WHERE UnitID = @UnitID\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spGetUnitById' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spInsertHmv2024]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spInsertHmv2024' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spInsertHmv2024]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spInsertHmv2024]\r\n    @CompanyID INT,\r\n\t@CompanyID2 INT,\r\n    @ContractId INT,\r\n\t@ContractId2 INT,\r\n    @HMVNO NVARCHAR(MAX),\r\n    @AreaUnitID INT,\r\n    @IssuedBy INT,\r\n    @DelDate DATE,\r\n    @RequestHmvs dbo.NewHMVDtoType READONLY\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    BEGIN TRANSACTION;  -- شروع تراکنش\r\n    BEGIN TRY\r\n        DECLARE @NextHMVNumber INT,\r\n                @Status NVARCHAR(50),\r\n                @ItemId INT,\r\n                @TotalQty DECIMAL(18, 2),\r\n                @EnteredBy INT;\r\n\r\n        DECLARE @LocItemID INT,\r\n                @ReqHmvQty DECIMAL(18, 2),\r\n                @DelHmvQty DECIMAL(18, 2),\r\n                @DelHmvRejQty DECIMAL(18, 2),\r\n                @Remark NVARCHAR(255),\r\n                @MRCNO NVARCHAR(50),\r\n\t\t\t\t@CurrentBalance DECIMAL(18, 2),\r\n                @RequestNo NVARCHAR(50);\r\n\r\n        -- دریافت شماره HMV بعدی\r\n        SELECT TOP 1 @NextHMVNumber = TRY_CAST(RequestNo AS INT) + 1\r\n        FROM Requests\r\n        WHERE TypeId = 3 AND TRY_CAST(RequestNo AS INT) IS NOT NULL\r\n        ORDER BY TRY_CAST(RequestNo AS INT) DESC;\r\n\r\n        IF @NextHMVNumber IS NULL\r\n            SET @NextHMVNumber = 1;\r\n\r\n        DECLARE cursor_Hmv CURSOR FOR\r\n        SELECT LocItemID, HmvQty, HmvDelQty, HmvRejQty, Remark, MRCNO\r\n        FROM @RequestHmvs;\r\n\r\n        OPEN cursor_Hmv;\r\n        FETCH NEXT FROM cursor_Hmv INTO @LocItemID, @ReqHmvQty, @DelHmvQty, @DelHmvRejQty, @Remark, @MRCNO;\r\n\r\n        WHILE @@FETCH_STATUS = 0\r\n        BEGIN\r\n            SET @RequestNo = @MRCNO;\r\n            SET @TotalQty = @DelHmvQty + @DelHmvRejQty;\r\n\r\n            IF EXISTS (SELECT 1 FROM Requests WHERE LocItemID = @LocItemID AND RequestNO = @RequestNo AND CompanyID = @CompanyID AND TypeID = 1) \r\n            BEGIN\r\n                           \r\n            SELECT @CurrentBalance = DelMivQty, @ItemId = ItemId \r\n            FROM Requests R\r\n            JOIN LocItems L ON L.LocItemID = R.LocItemID\r\n            WHERE R.LocItemID = @LocItemID AND R.RequestNo = @RequestNo AND R.CompanyID = @CompanyID AND R.TypeID = 1;\r\n\r\n                IF @CurrentBalance >= @TotalQty\r\n                BEGIN\r\n\r\n                    -- ثبت MRV با LocitemID جدید در سیستم\r\n                    INSERT INTO Requests (CompanyID,CompanyID2, ContractId,ContractId2, HMVNO, AreaUnitID, ReqHmvQty, DelHmvQty, \r\n                    LocItemID, DelHmvRejQty, Remark, RequestNO, MRCNO, TypeId, IssuedBy, DelDate)\r\n                    VALUES \r\n                    ( \r\n                        @CompanyID,\r\n\t\t\t\t\t\t@CompanyID2,\r\n                        @ContractId,\r\n                        @ContractId2,\r\n\t\t\t\t\t\t@HMVNO,\r\n                        @AreaUnitID,\r\n                        @ReqHmvQty,\r\n                        @DelHmvQty,\r\n                        @LocItemID,\r\n                        @DelHmvRejQty,\r\n                        @Remark,\r\n                        FORMAT(@NextHMVNumber, 'D6'),\r\n                        @RequestNo,\r\n                        3,\r\n                        @IssuedBy,\r\n                        @DelDate\r\n                    );\r\n                END\r\n                ELSE\r\n                BEGIN\r\n                    SET @Status = 'Error: Total quantity exceeds current balance';\r\n                    RAISERROR (@Status, 16, 1);\r\n                    ROLLBACK TRANSACTION;\r\n                    RETURN;\r\n                END\r\n            END\r\n            ELSE\r\n            BEGIN\r\n                SET @Status = 'Error: Record not found';\r\n                RAISERROR (@Status, 16, 1);\r\n                ROLLBACK TRANSACTION;\r\n                RETURN;\r\n            END\r\n\r\n            FETCH NEXT FROM cursor_Hmv INTO @LocItemID, @ReqHmvQty, @DelHmvQty, @DelHmvRejQty, @Remark, @MRCNO;\r\n        END\r\n\r\n        CLOSE cursor_Hmv;\r\n        DEALLOCATE cursor_Hmv;\r\n\r\n        COMMIT TRANSACTION;\r\n\r\n        -- بازگرداندن شماره HMV\r\n        --SELECT FORMAT(@NextHMVNumber - 1, 'D6') AS NewHMVNumber;\r\n\t\tSELECT \r\n\t\t\tCASE \r\n\t\t\t\tWHEN @NextHMVNumber = 1 THEN '000001'  -- اگر مقدار 1 باشد، آن را به 000001 تبدیل کن\r\n\t\t\t\tELSE FORMAT(@NextHMVNumber, 'D6') -- در غیر این صورت فرمت‌دهی استاندارد را اعمال کن\r\n\t\t\tEND AS NewHMVNumber;\r\n\r\n    END TRY\r\n    BEGIN CATCH\r\n        ROLLBACK TRANSACTION;\r\n        DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();\r\n        RAISERROR (@ErrorMessage, 16, 1);\r\n    END CATCH\r\nEND;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spInsertHmv2024' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spInsertHmv2025]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spInsertHmv2025' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spInsertHmv2025]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","\r\nCREATE PROCEDURE [dbo].[spInsertHmv2025]\r\n    @CompanyID INT,\r\n    @CompanyID2 INT,\r\n    @ContractId INT,\r\n    @ContractId2 INT,\r\n    @HMVNO NVARCHAR(MAX),\r\n    @AreaUnitID INT,\r\n    @IssuedBy INT,\r\n    @DelDate DATE,\r\n    @RequestHmvs dbo.NewHMVDtoType READONLY\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n    BEGIN TRANSACTION;  -- شروع تراکنش\r\n    BEGIN TRY\r\n        DECLARE @NextHMVNumber INT,\r\n                @Status NVARCHAR(50),\r\n                @ItemId INT,\r\n                @TotalQty DECIMAL(18, 2),\r\n                @EnteredBy INT;\r\n\r\n        DECLARE @LocItemID INT,\r\n                @ReqHmvQty DECIMAL(18, 2),\r\n                @DelHmvQty DECIMAL(18, 2),\r\n                @DelHmvRejQty DECIMAL(18, 2),\r\n                @Remark NVARCHAR(255),\r\n                @MRCNO NVARCHAR(50),\r\n                @CurrentBalance DECIMAL(18, 2),\r\n                @RequestNo NVARCHAR(50),\r\n                @TypeName NVARCHAR(50);\r\n\r\n        -- دریافت شماره HMV بعدی\r\n        SELECT TOP 1 @NextHMVNumber = TRY_CAST(RequestNo AS INT) + 1\r\n        FROM Requests\r\n        WHERE TypeId = 3 AND TRY_CAST(RequestNo AS INT) IS NOT NULL\r\n        ORDER BY TRY_CAST(RequestNo AS INT) DESC;\r\n\r\n        IF @NextHMVNumber IS NULL\r\n            SET @NextHMVNumber = 1;\r\n\r\n        DECLARE cursor_Hmv CURSOR FOR\r\n        SELECT LocItemID, HmvQty, HmvDelQty, HmvRejQty, Remark, MRCNO, TypeName\r\n        FROM @RequestHmvs;\r\n\r\n        OPEN cursor_Hmv;\r\n        FETCH NEXT FROM cursor_Hmv INTO @LocItemID, @ReqHmvQty, @DelHmvQty, @DelHmvRejQty, @Remark, @MRCNO, @TypeName;\r\n\r\n        WHILE @@FETCH_STATUS = 0\r\n        BEGIN\r\n            IF @TypeName = 'MIV'\r\n            BEGIN\r\n                SET @RequestNo = @MRCNO;\r\n                SET @TotalQty = @DelHmvQty + @DelHmvRejQty;\r\n\r\n                IF EXISTS (SELECT 1 FROM Requests WHERE LocItemID = @LocItemID AND RequestNO = @RequestNo AND CompanyID = @CompanyID AND TypeID = 1) \r\n                BEGIN\r\n                    SELECT @CurrentBalance = DelMivQty, @ItemId = ItemId \r\n                    FROM Requests R\r\n                    JOIN LocItems L ON L.LocItemID = R.LocItemID\r\n                    WHERE R.LocItemID = @LocItemID AND R.RequestNo = @RequestNo AND R.CompanyID = @CompanyID AND R.TypeID = 1;\r\n\r\n                    IF @CurrentBalance >= @TotalQty\r\n                    BEGIN\r\n                        -- ثبت MRV با LocitemID جدید در سیستم\r\n                        INSERT INTO Requests (CompanyID, CompanyID2, ContractId, ContractId2, HMVNO, AreaUnitID, ReqHmvQty, DelHmvQty, \r\n                                              LocItemID, DelHmvRejQty, Remark, RequestNO, MRCNO, TypeId, IssuedBy, DelDate)\r\n                        VALUES \r\n                        ( \r\n                            @CompanyID,\r\n                            @CompanyID2,\r\n                            @ContractId,\r\n                            @ContractId2,\r\n                            @HMVNO,\r\n                            @AreaUnitID,\r\n                            @ReqHmvQty,\r\n                            @DelHmvQty,\r\n                            @LocItemID,\r\n                            @DelHmvRejQty,\r\n                            @Remark,\r\n                            --CONCAT('MIV-',FORMAT(@NextHMVNumber, 'D6')),\r\n\t\t\t\t\t\t\tFORMAT(@NextHMVNumber, 'D6'),\r\n                            --CONCAT('MIV-',@RequestNo),\r\n\t\t\t\t\t\t\t@RequestNo,\r\n                            3,\r\n                            @IssuedBy,\r\n                            @DelDate\r\n                        );\r\n                    END\r\n                    ELSE\r\n                    BEGIN\r\n                        SET @Status = 'Error: Total quantity exceeds current balance';\r\n                        RAISERROR (@Status, 16, 1);\r\n                        ROLLBACK TRANSACTION;\r\n                        RETURN;\r\n                    END\r\n                END\r\n                ELSE\r\n                BEGIN\r\n                    SET @Status = 'Error: Record not found In Miv';\r\n                    RAISERROR (@Status, 16, 1);\r\n                    ROLLBACK TRANSACTION;\r\n                    RETURN;\r\n                END\r\n            END\r\n            ELSE IF @TypeName = 'HMV'\r\n            BEGIN\r\n                -- در این قسمت عملیات مرتبط با 'HMV' را اضافه کنید\r\n                -- مثال: اینجا می‌توانید عملیات مختلف یا درج‌های دیگری را انجام دهید\r\n\t\t\t\tSET @RequestNo = @MRCNO;\r\n                SET @TotalQty = @DelHmvQty + @DelHmvRejQty;\r\n\t\t\t\t    IF EXISTS (SELECT 1 FROM Requests WHERE LocItemID = @LocItemID AND RequestNO = @RequestNo AND CompanyID2 = @CompanyID AND TypeID = 3) \r\n                BEGIN\r\n                    SELECT @CurrentBalance =  DelHmvQty, @ItemId = ItemId \r\n                    FROM Requests R\r\n                    JOIN LocItems L ON L.LocItemID = R.LocItemID\r\n                    WHERE R.LocItemID = @LocItemID AND R.RequestNo = @RequestNo AND R.CompanyID2 = @CompanyID AND R.TypeID = 3;\r\n\r\n                    IF @CurrentBalance >= @TotalQty\r\n                    BEGIN\r\n                        -- ثبت MRV با LocitemID جدید در سیستم\r\n                        INSERT INTO Requests (CompanyID, CompanyID2, ContractId, ContractId2, HMVNO, AreaUnitID, ReqHmvQty, DelHmvQty, \r\n                                              LocItemID, DelHmvRejQty, Remark, RequestNO, MRCNO, TypeId, IssuedBy, DelDate)\r\n                        VALUES \r\n                        ( \r\n                            @CompanyID,\r\n                            @CompanyID2,\r\n                            @ContractId,\r\n                            @ContractId2,\r\n                            @HMVNO,\r\n                            @AreaUnitID,\r\n                            @ReqHmvQty,\r\n                            @DelHmvQty,\r\n                            @LocItemID,\r\n                            @DelHmvRejQty,\r\n                            @Remark,\r\n                            --CONCAT('HMV-',FORMAT(@NextHMVNumber, 'D6')),\r\n\t\t\t\t\t\t\tFORMAT(@NextHMVNumber, 'D6'),\r\n                            --CONCAT('HMV-',@RequestNo),\r\n                            @RequestNo,\r\n\t\t\t\t\t\t\t3,\r\n                            @IssuedBy,\r\n                            @DelDate\r\n                        );\r\n                    END\r\n                    ELSE\r\n                    BEGIN\r\n                        SET @Status = 'Error: Total quantity exceeds current balance';\r\n                        RAISERROR (@Status, 16, 1);\r\n                        ROLLBACK TRANSACTION;\r\n                        RETURN;\r\n                    END\r\n                END\r\n                ELSE\r\n                BEGIN\r\n                    SET @Status = 'Error: Record not found In Hmv';\r\n                    RAISERROR (@Status, 16, 1);\r\n                    ROLLBACK TRANSACTION;\r\n                    RETURN;\r\n                END\r\n            END\r\n\r\n            FETCH NEXT FROM cursor_Hmv INTO @LocItemID, @ReqHmvQty, @DelHmvQty, @DelHmvRejQty, @Remark, @MRCNO, @TypeName;\r\n        END\r\n\r\n        CLOSE cursor_Hmv;\r\n        DEALLOCATE cursor_Hmv;\r\n\r\n        COMMIT TRANSACTION;\r\n\r\n        -- بازگرداندن شماره HMV\r\n        SELECT \r\n            CASE \r\n                WHEN @NextHMVNumber = 1 THEN '000001'  -- اگر مقدار 1 باشد، آن را به 000001 تبدیل کن\r\n                ELSE FORMAT(@NextHMVNumber, 'D6') -- در غیر این صورت فرمت‌دهی استاندارد را اعمال کن\r\n            END AS NewHMVNumber;\r\n\r\n    END TRY\r\n    BEGIN CATCH\r\n        ROLLBACK TRANSACTION;\r\n        DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();\r\n        RAISERROR (@ErrorMessage, 16, 1);\r\n    END CATCH\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spInsertHmv2025' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spInsertLocation]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spInsertLocation' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spInsertLocation]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spInsertLocation]\r\n    @LocationName NVARCHAR(100),\r\n    @LocationWarehouse NVARCHAR(200),\r\n    @EnteredBy int,\r\n    @EnteredDate Datetime\r\nAS\r\nBEGIN\r\n    -- Check if the LocationName already exists\r\n    IF EXISTS (SELECT 1 FROM Locations WHERE LocationName = @LocationName)\r\n    BEGIN\r\n        -- Return an error message if LocationName is duplicated\r\n        RAISERROR('The LocationName already exists. Please choose a different LocationName.', 16, 1);\r\n        RETURN;\r\n    END\r\n\r\n    -- Insert new location if no duplicates are found\r\n    INSERT INTO Locations (LocationName, EnteredBy, EnteredDate, LocationWarehouse)\r\n    VALUES (@LocationName, @EnteredBy, @EnteredDate, @LocationWarehouse);\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spInsertLocation' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spInsertMrv2024]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spInsertMrv2024' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spInsertMrv2024]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spInsertMrv2024]\r\n    @CompanyID INT,\r\n    @ContractId INT,\r\n    @MRVNO NVARCHAR(MAX),\r\n    @AreaUnitID INT,\r\n    @IssuedBy INT,\r\n    @DelDate DATE,\r\n    @RequestMrvs dbo.NewMRVDtoType4 READONLY\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    BEGIN TRANSACTION;  -- شروع تراکنش\r\n    BEGIN TRY\r\n        DECLARE @NextMRVNumber INT,\r\n                @Status NVARCHAR(50),\r\n                @ItemId INT,\r\n                @TotalQty DECIMAL(18, 2),\r\n                @NewLocItemID INT,  -- متغیر برای ذخیره LocItemID جدید\r\n                @EnteredBy INT;\r\n\r\n        DECLARE @LocItemID INT,\r\n                @ReqMrvQty DECIMAL(18, 2),\r\n                @DelMrvQty DECIMAL(18, 2),\r\n                @DelMrvRejQty DECIMAL(18, 2),\r\n                @Remark NVARCHAR(255),\r\n                @MRCNO NVARCHAR(50),\r\n                @SelectedLocation INT,\r\n                @CurrentBalance DECIMAL(18, 2),\r\n                @RequestNo NVARCHAR(50);\r\n\r\n        -- دریافت شماره MRV بعدی\r\n        SELECT TOP 1 @NextMRVNumber = TRY_CAST(RequestNo AS INT) + 1\r\n        FROM Requests\r\n        WHERE TypeId = 2 AND TRY_CAST(RequestNo AS INT) IS NOT NULL\r\n        ORDER BY TRY_CAST(RequestNo AS INT) DESC;\r\n\r\n        IF @NextMRVNumber IS NULL\r\n            SET @NextMRVNumber = 1;\r\n\r\n        DECLARE cursor_Mrv CURSOR FOR\r\n        SELECT LocItemID, ReqMrvQty, DelMrvQty, DelMrvRejQty, Remark, MRCNO, SelectedLocation\r\n        FROM @RequestMrvs;\r\n\r\n        OPEN cursor_Mrv;\r\n        FETCH NEXT FROM cursor_Mrv INTO @LocItemID, @ReqMrvQty, @DelMrvQty, @DelMrvRejQty, @Remark, @MRCNO, @SelectedLocation;\r\n\r\n        WHILE @@FETCH_STATUS = 0\r\n        BEGIN\r\n            SET @RequestNo = @MRCNO;\r\n            SET @TotalQty = @DelMrvQty + @DelMrvRejQty;\r\n\r\n            IF EXISTS (SELECT 1 FROM Requests WHERE LocItemID = @LocItemID AND RequestNO = @RequestNo AND CompanyID = @CompanyID AND TypeID = 1)\r\n            BEGIN\r\n                           \n            SELECT @CurrentBalance = DelMivQty, @ItemId = ItemId \n            FROM Requests R\n            JOIN LocItems L ON L.LocItemID = R.LocItemID\n            WHERE R.LocItemID = @LocItemID AND R.RequestNo = @RequestNo AND R.CompanyID = @CompanyID AND R.TypeID = 1;\n\r\n                IF @CurrentBalance >= @TotalQty\r\n                BEGIN\r\n                    UPDATE LocItems\r\n                    SET Qty = Qty - @TotalQty\r\n                    WHERE LocItemID = @LocItemID;\r\n\r\n                    SET @EnteredBy = @IssuedBy;\r\n\r\n                    -- درج رکورد جدید در LocItems برای مکان جدید\r\n                    INSERT INTO LocItems \r\n                    (ItemId, Qty, OverQty, ShortageQty, DamageQty, NISQty, RejectQty, LocationID, EnteredBy, EnteredDate, ParentLocItemID, RemarkLocitemID)\r\n                    VALUES \r\n                    (@ItemId, @TotalQty, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, @SelectedLocation, @EnteredBy, GETDATE(), @LocItemID, @Remark);\r\n\r\n                    SET @NewLocItemID = SCOPE_IDENTITY();\r\n\r\n                    -- ثبت MIV با NewLocItemID\r\n                    INSERT INTO Requests (CompanyID, ContractId, MRCNO, AreaUnitID, ReqMivQty, ReserveMivQty, \r\n                    DelMivQty, LocItemID, RequestNO, IssuedBy, IssuedDate, TypeId, ApprovedBy, ApprovedDate, ReqDate, RequestPDF, VendorID)\r\n                    SELECT \r\n                        CompanyID, \r\n                        ContractId, \r\n                        MRCNO, \r\n                        AreaUnitID, \r\n                        ReqMivQty, \r\n                        ReserveMivQty, \r\n                        @TotalQty, \r\n                        @NewLocItemID, \r\n                        RequestNO, \r\n                        IssuedBy, \r\n                        IssuedDate, \r\n                        1, \r\n                        ApprovedBy, \r\n                        ApprovedDate, \r\n                        ReqDate, \r\n                        RequestPDF, \r\n                        VendorID\r\n                    FROM Requests \r\n                    WHERE LocItemID = @LocItemID AND RequestNO = @RequestNo AND CompanyID=@CompanyID AND TypeId=1;\r\n\r\n                    -- کسر مقادیر از LocItemID اولیه در جدول Requests\r\n                    WITH CTE_Requests AS (\r\n                        SELECT TOP 1 *\r\n                        FROM Requests\r\n                        WHERE LocItemID = @LocItemID AND RequestNO = @RequestNo AND CompanyID=@CompanyID AND TypeID=1\r\n                        ORDER BY ReqLocItemID \r\n                    )\r\n                    UPDATE CTE_Requests\r\n                    SET DelMivQty = ISNULL(DelMivQty, 0) - @TotalQty;\r\n\r\n                    -- ثبت MRV با LocitemID جدید در سیستم\r\n                    INSERT INTO Requests (CompanyID, ContractId, MRVNO, AreaUnitID, ReqMrvQty, DelMrvQty, \r\n                    LocItemID, DelMrvRejQty, Remark, RequestNO, MRCNO, TypeId, IssuedBy, DelDate)\r\n                    VALUES \r\n                    ( \r\n                        @CompanyID,\r\n                        @ContractId,\r\n                        @MRVNO,\r\n                        @AreaUnitID,\r\n                        @ReqMrvQty,\r\n                        @DelMrvQty,\r\n                        @NewLocItemID,\r\n                        @DelMrvRejQty,\r\n                        @Remark,\r\n                        FORMAT(@NextMRVNumber, 'D6'),\r\n                        @RequestNo,\r\n                        2,\r\n                        @IssuedBy,\r\n                        @DelDate\r\n                    );\r\n                END\r\n                ELSE\r\n                BEGIN\r\n                    SET @Status = 'Error: Total quantity exceeds current balance';\r\n                    RAISERROR (@Status, 16, 1);\r\n                    ROLLBACK TRANSACTION;\r\n                    RETURN;\r\n                END\r\n            END\r\n            ELSE\r\n            BEGIN\r\n                SET @Status = 'Error: Record not found';\r\n                RAISERROR (@Status, 16, 1);\r\n                ROLLBACK TRANSACTION;\r\n                RETURN;\r\n            END\r\n\r\n            FETCH NEXT FROM cursor_Mrv INTO @LocItemID, @ReqMrvQty, @DelMrvQty, @DelMrvRejQty, @Remark, @MRCNO, @SelectedLocation;\r\n        END\r\n\r\n        CLOSE cursor_Mrv;\r\n        DEALLOCATE cursor_Mrv;\r\n\r\n        COMMIT TRANSACTION;\r\n\r\n        -- بازگرداندن شماره MRV\r\n      SELECT FORMAT(@NextMRVNumber - 1, 'D6') AS NewMRVNumber;\r\n    END TRY\r\n    BEGIN CATCH\r\n        ROLLBACK TRANSACTION;\r\n        DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();\r\n        RAISERROR (@ErrorMessage, 16, 1);\r\n    END CATCH\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spInsertMrv2024' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spInsertMrv2025]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spInsertMrv2025' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spInsertMrv2025]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spInsertMrv2025]\r\n    @CompanyID INT,\r\n    @ContractId INT,\r\n    @MRVNO NVARCHAR(MAX),\r\n    @AreaUnitID INT,\r\n    @IssuedBy INT,\r\n    @DelDate DATE,\r\n    @RequestMrvs dbo.NewMRVDtoType5 READONLY\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    BEGIN TRANSACTION;\r\n    BEGIN TRY\r\n        DECLARE @NextMRVNumber INT,\r\n                @Status NVARCHAR(50),\r\n                @ItemId INT,\r\n                @TotalQty DECIMAL(18, 2),\r\n                @NewLocItemID INT,\r\n                @EnteredBy INT;\r\n\r\n        DECLARE @LocItemID INT,\r\n                @ReqMrvQty DECIMAL(18, 2),\r\n                @DelMrvQty DECIMAL(18, 2),\r\n                @DelMrvRejQty DECIMAL(18, 2),\r\n                @Remark NVARCHAR(255),\r\n                @MRCNO NVARCHAR(50),\r\n                @SelectedLocation INT,\r\n                @CurrentBalance DECIMAL(18, 2),\r\n                @RequestNo NVARCHAR(50),\r\n                @TypeName NVARCHAR(50);\r\n\r\n        SELECT TOP 1 @NextMRVNumber = TRY_CAST(RequestNo AS INT) + 1\r\n        FROM Requests\r\n        WHERE TypeId = 2 AND TRY_CAST(RequestNo AS INT) IS NOT NULL\r\n        ORDER BY TRY_CAST(RequestNo AS INT) DESC;\r\n\r\n        IF @NextMRVNumber IS NULL\r\n            SET @NextMRVNumber = 1;\r\n\r\n        DECLARE cursor_Mrv CURSOR FOR\r\n        SELECT LocItemID, ReqMrvQty, DelMrvQty, DelMrvRejQty, Remark, MRCNO, SelectedLocation, TypeName\r\n        FROM @RequestMrvs;\r\n\r\n        OPEN cursor_Mrv;\r\n        FETCH NEXT FROM cursor_Mrv INTO @LocItemID, @ReqMrvQty, @DelMrvQty, @DelMrvRejQty, @Remark, @MRCNO, @SelectedLocation, @TypeName;\r\n\r\n        WHILE @@FETCH_STATUS = 0\r\n        BEGIN\r\n            SET @RequestNo = @MRCNO; \r\n\t\t\tSET @TotalQty = @DelMrvQty + @DelMrvRejQty;\r\n           \r\n\r\n            IF @TypeName = 'MIV'\r\n            BEGIN\r\n                IF EXISTS (SELECT 1 FROM Requests WHERE LocItemID = @LocItemID AND RequestNO = @RequestNo AND CompanyID = @CompanyID AND TypeID = 1)\r\n                BEGIN\r\n                    SELECT @CurrentBalance = DelMivQty, @ItemId = ItemId \r\n                    FROM Requests R\r\n                    JOIN LocItems L ON L.LocItemID = R.LocItemID\r\n                    WHERE R.LocItemID = @LocItemID AND R.RequestNo = @RequestNo AND R.CompanyID = @CompanyID AND R.TypeID = 1;\r\n\r\n                    IF @CurrentBalance >= @TotalQty\r\n                    BEGIN\r\n                        --UPDATE LocItems\r\n                        --SET Qty = Qty - @TotalQty\r\n                        --WHERE LocItemID = @LocItemID;\r\n\r\n                        SET @EnteredBy = @IssuedBy;\r\n\r\n                        INSERT INTO LocItems \r\n                        (ItemId, Qty, OverQty, ShortageQty, DamageQty, NISQty, RejectQty, LocationID, EnteredBy, EnteredDate, ParentLocItemID, RemarkLocitemID,FlagMIVorHMV)\r\n                        VALUES \r\n                        (@ItemId, 0, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, @SelectedLocation, @EnteredBy, GETDATE(), @LocItemID, @Remark,1);\r\n\r\n                        SET @NewLocItemID = SCOPE_IDENTITY();\r\n\r\n                        --INSERT INTO Requests (CompanyID, ContractId, MRCNO, AreaUnitID, ReqMivQty, ReserveMivQty, \r\n                        --DelMivQty, LocItemID, RequestNO, IssuedBy, IssuedDate, TypeId, ApprovedBy, ApprovedDate, ReqDate, RequestPDF, VendorID)\r\n                        --SELECT \r\n                        --    CompanyID, \r\n                        --    ContractId, \r\n                        --    MRCNO, \r\n                        --    AreaUnitID, \r\n                        --    ReqMivQty, \r\n                        --    ReserveMivQty, \r\n                        --    @TotalQty, \r\n                        --    @NewLocItemID, \r\n                        --    RequestNO, \r\n                        --    IssuedBy, \r\n                        --    IssuedDate, \r\n                        --    1, \r\n                        --    ApprovedBy, \r\n                        --    ApprovedDate, \r\n                        --    ReqDate, \r\n                        --    RequestPDF, \r\n                        --    VendorID\r\n                        --FROM Requests \r\n                        --WHERE LocItemID = @LocItemID AND RequestNO = @RequestNo AND CompanyID=@CompanyID AND TypeId=1;\r\n\r\n                        --WITH CTE_Requests AS (\r\n                        --    SELECT TOP 1 *\r\n                        --    FROM Requests\r\n                        --    WHERE LocItemID = @LocItemID AND RequestNO = @RequestNo AND CompanyID=@CompanyID AND TypeID=1\r\n                        --    ORDER BY ReqLocItemID \r\n                        --)\r\n                        --UPDATE CTE_Requests\r\n                        --SET DelMivQty = ISNULL(DelMivQty, 0) - @TotalQty;\r\n\r\n                        INSERT INTO Requests (CompanyID, ContractId, MRVNO, AreaUnitID, ReqMrvQty, DelMrvQty, \r\n                        LocItemID, DelMrvRejQty, Remark, RequestNO, MRCNO, TypeId, IssuedBy, DelDate,PLocItemIDforMRV)\r\n                        VALUES \r\n                        ( \r\n                            @CompanyID,\r\n                            @ContractId,\r\n                            @MRVNO,\r\n                            @AreaUnitID,\r\n                            @ReqMrvQty,\r\n                            @DelMrvQty,\r\n                            @NewLocItemID,\r\n                            @DelMrvRejQty,\r\n                            @Remark,\r\n                            FORMAT(@NextMRVNumber, 'D6'),\r\n                            @RequestNo,\r\n                            2,\r\n                            @IssuedBy,\r\n                            @DelDate,\r\n\t\t\t\t\t\t\t@LocItemID\r\n                        );\r\n                    END\r\n                    ELSE\r\n                    BEGIN\r\n                        SET @Status = 'Error: Total quantity exceeds current balance-MIV';\r\n                        RAISERROR (@Status, 16, 1);\r\n                        ROLLBACK TRANSACTION;\r\n                        RETURN;\r\n                    END\r\n                END\r\n                ELSE\r\n                BEGIN\r\n                    SET @Status = 'Error: Record not found';\r\n                    RAISERROR (@Status, 16, 1);\r\n                    ROLLBACK TRANSACTION;\r\n                    RETURN;\r\n                END\r\n            END\r\n            ELSE IF @TypeName = 'HMV'\r\n            BEGIN\r\n\t\t\t    IF EXISTS (SELECT 1 FROM Requests WHERE LocItemID = @LocItemID AND RequestNO = @RequestNo AND CompanyID2 = @CompanyID AND TypeID = 3)\r\n                BEGIN\r\n                    SELECT @CurrentBalance = DelHmvQty, @ItemId = ItemId \r\n                    FROM Requests R\r\n                    JOIN LocItems L ON L.LocItemID = R.LocItemID\r\n                    WHERE R.LocItemID = @LocItemID AND R.RequestNo = @RequestNo AND R.CompanyID2 = @CompanyID AND R.TypeID = 3;\r\n\r\n                    IF @CurrentBalance >= @TotalQty\r\n                    BEGIN\r\n                        --UPDATE LocItems\r\n                        --SET Qty = Qty - @TotalQty\r\n                        --WHERE LocItemID = @LocItemID;\r\n\r\n                        SET @EnteredBy = @IssuedBy;\r\n\r\n                        INSERT INTO LocItems \r\n                        (ItemId, Qty, OverQty, ShortageQty, DamageQty, NISQty, RejectQty, LocationID, EnteredBy, EnteredDate, ParentLocItemID, RemarkLocitemID,FlagMIVorHMV)\r\n                        VALUES \r\n                        (@ItemId, 0, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, @SelectedLocation, @EnteredBy, GETDATE(), @LocItemID, @Remark,2);\r\n\r\n                        SET @NewLocItemID = SCOPE_IDENTITY();\r\n\r\n                        --INSERT INTO Requests (CompanyID, ContractId, MRCNO, AreaUnitID, ReqMivQty, ReserveMivQty, \r\n                        --DelMivQty, LocItemID, RequestNO, IssuedBy, IssuedDate, TypeId, ApprovedBy, ApprovedDate, ReqDate, RequestPDF, VendorID)\r\n                        --SELECT \r\n                        --    CompanyID, \r\n                        --    ContractId, \r\n                        --    MRCNO, \r\n                        --    AreaUnitID, \r\n                        --    ReqMivQty, \r\n                        --    ReserveMivQty, \r\n                        --    @TotalQty, \r\n                        --    @NewLocItemID, \r\n                        --    RequestNO, \r\n                        --    IssuedBy, \r\n                        --    IssuedDate, \r\n                        --    1, \r\n                        --    ApprovedBy, \r\n                        --    ApprovedDate, \r\n                        --    ReqDate, \r\n                        --    RequestPDF, \r\n                        --    VendorID\r\n                        --FROM Requests \r\n                        --WHERE LocItemID = @LocItemID AND RequestNO = @RequestNo AND CompanyID=@CompanyID AND TypeId=1;\r\n\r\n                        --WITH CTE_Requests AS (\r\n                        --    SELECT TOP 1 *\r\n                        --    FROM Requests\r\n                        --    WHERE LocItemID = @LocItemID AND RequestNO = @RequestNo AND CompanyID=@CompanyID AND TypeID=1\r\n                        --    ORDER BY ReqLocItemID \r\n                        --)\r\n                        --UPDATE CTE_Requests\r\n                        --SET DelMivQty = ISNULL(DelMivQty, 0) - @TotalQty;\r\n\r\n                        INSERT INTO Requests (CompanyID, ContractId, MRVNO, AreaUnitID, ReqMrvQty, DelMrvQty, \r\n                        LocItemID, DelMrvRejQty, Remark, RequestNO, MRCNO, TypeId, IssuedBy, DelDate,PLocItemIDforMRV)\r\n                        VALUES \r\n                        ( \r\n                            @CompanyID,\r\n                            @ContractId,\r\n                            @MRVNO,\r\n                            @AreaUnitID,\r\n                            @ReqMrvQty,\r\n                            @DelMrvQty,\r\n                            @NewLocItemID,\r\n                            @DelMrvRejQty,\r\n                            @Remark,\r\n                            FORMAT(@NextMRVNumber, 'D6'),\r\n                            @RequestNo,\r\n                            2,\r\n                            @IssuedBy,\r\n                            @DelDate,\r\n\t\t\t\t\t\t\t@LocItemID\r\n                        );\r\n                    END\r\n                    ELSE\r\n                    BEGIN\r\n                        SET @Status = 'Error: Total quantity exceeds current balance-HMV';\r\n                        RAISERROR (@Status, 16, 1);\r\n                        ROLLBACK TRANSACTION;\r\n                        RETURN;\r\n                    END\r\n                END\r\n                ELSE\r\n                BEGIN\r\n                    SET @Status = 'Error: Record not found';\r\n                    RAISERROR (@Status, 16, 1);\r\n                    ROLLBACK TRANSACTION;\r\n                    RETURN;\r\n                END\r\n  \r\n            END\r\n\r\n            FETCH NEXT FROM cursor_Mrv INTO @LocItemID, @ReqMrvQty, @DelMrvQty, @DelMrvRejQty, @Remark, @MRCNO, @SelectedLocation, @TypeName;\r\n        END\r\n\r\n        CLOSE cursor_Mrv;\r\n        DEALLOCATE cursor_Mrv;\r\n\r\n        COMMIT TRANSACTION;\r\n\r\n        SELECT FORMAT(@NextMRVNumber - 1, 'D6') AS NewMRVNumber;\r\n    END TRY\r\n    BEGIN CATCH\r\n        ROLLBACK TRANSACTION;\r\n        DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();\r\n        RAISERROR (@ErrorMessage, 16, 1);\r\n    END CATCH\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spInsertMrv2025' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spInsertScope]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spInsertScope' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spInsertScope]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spInsertScope]\r\n    @ScopeName NVARCHAR(100)\r\nAS\r\nBEGIN\r\n    INSERT INTO Scopes (ScopeName)\r\n    VALUES (@ScopeName)\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spInsertScope' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spInsertUnit]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spInsertUnit' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spInsertUnit]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spInsertUnit]\r\n    @UnitName NVARCHAR(100)\r\nAS\r\nBEGIN\r\n    INSERT INTO Units (UnitName)\r\n    VALUES (@UnitName)\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spInsertUnit' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spUpdateBalanceAndInsertLocItem]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateBalanceAndInsertLocItem' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spUpdateBalanceAndInsertLocItem]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spUpdateBalanceAndInsertLocItem]\r\n    @ItemId INT,\r\n    @LocItemID INT,\r\n    @Qty DECIMAL(18, 2),\r\n    @LocationID INT,\r\n    @CurrentBalance DECIMAL(18, 2),  \r\n    @EnteredBy INT\r\nAS\r\nBEGIN\r\n    -- Check if the balance is greater than 0 and if Qty is valid\r\n    IF @CurrentBalance > 0 AND @Qty <= @CurrentBalance\r\n    BEGIN\r\n        -- Update the existing LocItem balance by reducing the Qty\r\n        UPDATE LocItems\r\n        SET Qty = Qty - @Qty\r\n        WHERE LocItemID = @LocItemID;\r\n\r\n        -- Check if the Qty of the updated row has reached zero, if so, delete the row\r\n        DELETE FROM LocItems\r\n        WHERE LocItemID = @LocItemID AND Qty = 0;\r\n\r\n        -- Check if the LocationID already exists for the same ItemId\r\n        IF EXISTS (SELECT 1 FROM LocItems WHERE ItemId = @ItemId AND LocationID = @LocationID)\r\n        BEGIN\r\n            -- Update only one row's Qty for the matching LocationID and ItemId\r\n            WITH CTE_LimitedUpdate AS (\r\n                SELECT TOP 1 *\r\n                FROM LocItems\r\n                WHERE ItemId = @ItemId AND LocationID = @LocationID\r\n                ORDER BY LocItemID -- Assuming LocItemID is unique or identifies a specific row\r\n            )\r\n            UPDATE CTE_LimitedUpdate\r\n            SET Qty = Qty + @Qty;\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            -- Insert new record for the new LocationID\r\n            INSERT INTO LocItems (ItemId, Qty, OverQty, ShortageQty, DamageQty, NISQty, RejectQty, LocationID, EnteredBy, EnteredDate)\r\n            VALUES (@ItemId, @Qty, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, @LocationID, @EnteredBy, GETDATE());\r\n        END\r\n\r\n        -- Return success\r\n        SELECT 'Success' AS Status;\r\n    END\r\n    ELSE\r\n    BEGIN\r\n        -- Return an error if the balance is insufficient or the Qty is invalid\r\n        SELECT 'Error: Insufficient balance or invalid quantity' AS Status;\r\n    END\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateBalanceAndInsertLocItem' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spUpdateBalanceAndInsertLocItem2]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateBalanceAndInsertLocItem2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spUpdateBalanceAndInsertLocItem2]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spUpdateBalanceAndInsertLocItem2]\r\n    @ItemId INT,\r\n    @LocItemID INT,\r\n    @Qty DECIMAL(18, 2),\r\n    @LocationID INT,\r\n    @CurrentBalance DECIMAL(18, 2),  -- تغییر نوع داده به decimal\r\n    @EnteredBy INT\r\nAS\r\nBEGIN\r\n    -- Check if the balance is greater than 0 and if Qty is valid\r\n    IF @CurrentBalance > 0 AND @Qty <= @CurrentBalance\r\n    BEGIN\r\n        -- Update the existing LocItem balance by reducing the Qty\r\n        UPDATE LocItems\r\n        SET Qty = Qty - @Qty\r\n        WHERE LocItemID = @LocItemID;\r\n\t\t\r\n        -- Check if the Qty of the updated row has reached zero, if so, delete the row\r\n        DELETE FROM LocItems\r\n        WHERE LocItemID = @LocItemID AND Qty = 0;\r\n\r\n        -- Check if the LocationID already exists for the same ItemId\r\n        IF EXISTS (SELECT 1 FROM LocItems WHERE ItemId = @ItemId AND LocationID = @LocationID)\r\n        BEGIN\r\n            -- If it exists, update the existing record's Qty\r\n\t\t-- Use a CTE to limit the update to only one row\r\n\t\tWITH CTE_LimitedUpdate AS (\r\n\t\t\tSELECT TOP 1 *\r\n\t\t\tFROM LocItems\r\n\t\t\tWHERE ItemId = @ItemId AND LocationID = @LocationID\r\n\t\t\tORDER BY LocItemID -- Assuming LocItemID is the primary key or an identifier for uniqueness\r\n\t\t)\r\n\t\tUPDATE CTE_LimitedUpdate\r\n\t\tSET Qty = Qty + @Qty;\r\n\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            -- If it doesn't exist, insert a new record for the new LocationID\r\n            INSERT INTO LocItems (ItemId, Qty, OverQty, ShortageQty, DamageQty, NISQty, RejectQty, LocationID, EnteredBy, EnteredDate)\r\n            VALUES (@ItemId, @Qty, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, @LocationID, @EnteredBy, GETDATE());\r\n        END\r\n\r\n        -- Return success\r\n        SELECT 'Success' AS Status;\r\n    END\r\n    ELSE\r\n    BEGIN\r\n        -- Return an error if the balance is insufficient or the Qty is invalid\r\n        SELECT 'Error: Insufficient balance or invalid quantity' AS Status;\r\n    END\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateBalanceAndInsertLocItem2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spUpdateBalanceAndInsertLocItem2025]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateBalanceAndInsertLocItem2025' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spUpdateBalanceAndInsertLocItem2025]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spUpdateBalanceAndInsertLocItem2025]\r\n    @ItemId INT,\r\n    @LocItemID INT,\r\n    @Qty DECIMAL(18, 2),\r\n    @LocationID INT,\r\n    @EnteredBy INT,\r\n    @MrvOrNot DECIMAL(18, 2)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\tDECLARE @CurrentBalance DECIMAL(18, 2);\r\n\tDECLARE @NewLocItemID INT;\r\n\t--DECLARE @PPPLocItemID INT;\r\n\r\n    -- بررسی مقدار MrvOrNot\r\n    IF @MrvOrNot = 0\r\n    BEGIN\r\n        -- روال متفاوت در صورت برابر بودن MrvOrNot با 0\r\n\t\t-- محاسبه CurrentBalance برای LocItemID مشخص\r\n\t\tSELECT \r\n\t\t\t@CurrentBalance = \r\n\t\t\t\t(ISNULL(SUM(Requests.ReserveMivQty), 0) - \r\n\t\t\t\t ISNULL(SUM(Requests.DelMivQty), 0) - \r\n\t\t\t\t ISNULL(SUM(Requests.ReserveMivRejQty), 0) -\r\n\t\t\t\t ISNULL(SUM(Requests.DelMivRejQty), 0) +\r\n\t\t\t\t ISNULL(SUM(Requests.DelMrvQty), 0)+ \r\n\t\t\t\t ISNULL(SUM(Requests.DelMrvRejQty), 0))\r\n\t\tFROM \r\n\t\tRequests\r\n\t\tWHERE \r\n\t\t\tRequests.LocItemID = @LocItemID\r\n\t\t\t\r\n        -- بررسی توازن و اعتبار Qty\r\n        IF @CurrentBalance > 0 AND @Qty <= @CurrentBalance\r\n        BEGIN\r\n            BEGIN TRY\r\n                -- بروزرسانی موجودی LocItem با کاهش Qty\r\n                UPDATE Requests\r\n                SET DelMrvQty = DelMrvQty - @Qty\r\n                WHERE LocItemID = @LocItemID AND TypeID=2;\r\n\t\t\t\t--SELECT @PPPLocItemID=PLocItemIDforMRV FROM Requests WHERE  LocItemID=@LocItemID AND TypeID=2\r\n                -- در صورت عدم وجود، اضافه کردن رکورد جدید برای LocationID\r\n                INSERT INTO LocItems (ItemId, Qty, OverQty, ShortageQty, DamageQty, NISQty, RejectQty, LocationID, EnteredBy, EnteredDate, EditedBy, EditedDate, ParentLocItemID,RemarkLocitemID)\r\n                SELECT ItemId, 0, 0, 0, 0, 0, 0, @LocationID, @EnteredBy, GETDATE(), @EnteredBy, GETDATE(), ParentLocItemID,RemarkLocitemID FROM LocItems WHERE LocItemID = @LocItemID;\r\n\t\t\t\tSET @NewLocItemID = SCOPE_IDENTITY();     \r\n\t\t\t\t\r\n\t\t\t\tINSERT INTO Requests (CompanyID, ContractId, MRCNO,MRVNO, AreaUnitID, \r\n                ReqMrvQty,DelMrvQty,DelMrvRejQty, LocItemID, RequestNO, IssuedBy, IssuedDate, TypeId, ApprovedBy, ApprovedDate, ReqDate, RequestPDF, VendorID,PLocItemIDforMRV,Remark,DelDate)\r\n                SELECT \r\n                    CompanyID, \r\n                    ContractId, \r\n                    MRCNO, \r\n\t\t\t\t\tMRVNO,\r\n                    AreaUnitID, \r\n\t\t\t\t\tReqMrvQty,\r\n                    @Qty, \r\n\t\t\t\t\tDelMrvRejQty,\r\n                    @NewLocItemID, \r\n                    RequestNO, \r\n                    IssuedBy, \r\n                    IssuedDate, \r\n                    2, \r\n                    ApprovedBy, \r\n                    ApprovedDate, \r\n                    ReqDate, \r\n                    RequestPDF, \r\n                    VendorID,\r\n\t\t\t\t\tPLocItemIDforMRV,\r\n\t\t\t\t\tRemark,\r\n\t\t\t\t\tDelDate\r\n                FROM Requests \r\n                WHERE LocItemID = @LocItemID and TypeId=2;\r\n\r\n  \r\n\t\t\t  -- حذف رکورد در صورت رسیدن Qty به صفر و نبودن در Requests\r\n                DELETE FROM LocItems\r\n                WHERE LocItemID = @LocItemID \r\n                  AND Qty = 0\r\n                  AND NOT EXISTS (SELECT 1 FROM Requests WHERE LocItemID = @LocItemID);\r\n\r\n               \r\n\r\n                -- بازگشت موفقیت\r\n                SELECT 'Success' AS Status;\r\n            END TRY\r\n            BEGIN CATCH\r\n                -- مدیریت خطا در صورت بروز\r\n                SELECT ERROR_MESSAGE() AS ErrorMessage, 'Error' AS Status;\r\n            END CATCH\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            -- بازگشت خطا در صورت عدم توازن کافی یا اعتبار Qty\r\n            SELECT 'Error: Insufficient balance or invalid quantity' AS Status;\r\n        END\r\n        -- در اینجا فقط یک پیام موفقیت برای نمونه برمی‌گردانیم. شما می‌توانید کد روال مورد نظر را اضافه کنید.\r\n        SELECT CONCAT( 'Alternative routine for MrvOrNot = 0 executed successfully',@CurrentBalance) AS Status;\r\n    END\r\n    ELSE\r\n    BEGIN\r\n        -- اجرای روال اصلی اگر MrvOrNot بزرگتر از 0 باشد\r\n\r\n        -- محاسبه CurrentBalance برای LocItemID مشخص\r\n-- محاسبه CurrentBalance برای LocItemID مشخص\r\n\t\tSELECT \r\n\t\t\t@CurrentBalance = LocItems.Qty - \r\n\t\t\t\t(ISNULL(LocItems.RejectQty, 0) + ISNULL(LocItems.NISQty, 0) + \r\n\t\t\t\t ISNULL(SUM(Requests.ReserveMivQty), 0) + \r\n\t\t\t\t ISNULL(SUM(Requests.DelMivQty), 0) + \r\n\t\t\t\t ISNULL(SUM(Requests.ReserveMivRejQty), 0) + \r\n\t\t\t\t ISNULL(SUM(Requests.DelMivRejQty), 0) -\r\n\t\t\t\t ISNULL(SUM(Requests.DelMrvQty), 0) - \r\n\t\t\t\t ISNULL(SUM(Requests.DelMrvRejQty), 0))\r\n\t\tFROM \r\n\t\t\tLocItems\r\n\t\tLEFT JOIN \r\n\t\t\tRequests ON LocItems.LocItemID = Requests.LocItemID\r\n\t\tWHERE \r\n\t\t\tLocItems.LocItemID = @LocItemID\r\n\t\tGROUP BY \r\n\t\t\tLocItems.Qty, LocItems.RejectQty, LocItems.NISQty;\r\n\r\n\r\n        -- بررسی توازن و اعتبار Qty\r\n        IF @CurrentBalance > 0 AND @Qty <= @CurrentBalance\r\n        BEGIN\r\n            BEGIN TRY\r\n                -- بروزرسانی موجودی LocItem با کاهش Qty\r\n                UPDATE LocItems\r\n                SET Qty = Qty - @Qty\r\n                WHERE LocItemID = @LocItemID;\r\n\r\n                -- حذف رکورد در صورت رسیدن Qty به صفر و نبودن در Requests\r\n                DELETE FROM LocItems\r\n                WHERE LocItemID = @LocItemID \r\n                  AND Qty = 0\r\n                  AND NOT EXISTS (SELECT 1 FROM Requests WHERE LocItemID = @LocItemID);\r\n\r\n\t\t\t\t-- بررسی اگر رکوردی با LocItemID در Requests با TypeID = 2 موجود است\n\t\t\t\tDECLARE @ExistingLocItemID INT;\n    \n\t\t\t\tSELECT TOP 1 @ExistingLocItemID = LocItemID\n\t\t\t\tFROM LocItems\n\t\t\t\tWHERE ItemId = @ItemId AND LocationID = @LocationID\n\t\t\t\tORDER BY LocItemID;\n\t\t\t\t\t\t\n\t\t\t\t-- اگر رکوردی با این LocItemID در Requests با TypeID = 2 موجود نبود، سپس بروزرسانی را انجام دهد\n\t\t\t\tIF NOT EXISTS (SELECT 1 FROM Requests WHERE LocItemID = ISNULL(@ExistingLocItemID,0) AND TypeID = 2) \n\t\t\t\tBEGIN\n\t\t\t\t\t-- استفاده از CTE برای بروزرسانی فقط یک رکورد\n\t\t\t\t\tWITH CTE_LimitedUpdate AS (\n\t\t\t\t\t\tSELECT TOP 1 *\n\t\t\t\t\t\tFROM LocItems\n\t\t\t\t\t\tWHERE ItemId = @ItemId AND LocationID = @LocationID \n\t\t\t\t\t\tORDER BY LocItemID\n\t\t\t\t\t)\n\t\t\t\t\tUPDATE CTE_LimitedUpdate\n\t\t\t\t\tSET Qty = Qty + @Qty;\n\t\t\t\tEND  \r\n                ELSE\r\n                BEGIN\r\n                    -- در صورت عدم وجود، اضافه کردن رکورد جدید برای LocationID\r\n                    INSERT INTO LocItems (ItemId, Qty, OverQty, ShortageQty, DamageQty, NISQty, RejectQty, LocationID, EnteredBy, EnteredDate, EditedBy, EditedDate, ParentLocItemID)\r\n                    VALUES (@ItemId, @Qty, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, @LocationID, @EnteredBy, GETDATE(), @EnteredBy, GETDATE(), @LocItemID);\r\n                END\r\n\r\n                -- بازگشت موفقیت\r\n                SELECT 'Success' AS Status;\r\n            END TRY\r\n            BEGIN CATCH\r\n                -- مدیریت خطا در صورت بروز\r\n                SELECT ERROR_MESSAGE() AS ErrorMessage, 'Error' AS Status;\r\n            END CATCH\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            -- بازگشت خطا در صورت عدم توازن کافی یا اعتبار Qty\r\n            SELECT 'Error: Insufficient balance or invalid quantity' AS Status;\r\n        END\r\n    END\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateBalanceAndInsertLocItem2025' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spUpdateBalanceAndInsertLocItem3]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateBalanceAndInsertLocItem3' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spUpdateBalanceAndInsertLocItem3]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spUpdateBalanceAndInsertLocItem3]\r\n    @ItemId INT,\r\n    @LocItemID INT,\r\n    @Qty DECIMAL(18, 2),\r\n    @LocationID INT,\r\n    @CurrentBalance DECIMAL(18, 2),  -- تغییر نوع داده به decimal\r\n    @EnteredBy INT\r\nAS\r\nBEGIN\r\n    -- Check if the balance is greater than 0 and if Qty is valid\r\n    IF @CurrentBalance > 0 AND @Qty <= @CurrentBalance\r\n    BEGIN\r\n        -- Update the existing LocItem balance by reducing the Qty\r\n        UPDATE LocItems\r\n        SET Qty = Qty - @Qty\r\n        WHERE LocItemID = @LocItemID;\r\n\t\t\r\n\t\t -- Check if the Qty of the updated row has reached zero, if so, delete the row unless it is used in the Requests table\r\n\t\tDELETE FROM LocItems\r\n\t\tWHERE LocItemID = @LocItemID \r\n\t\tAND Qty = 0\r\n\t\tAND NOT EXISTS (SELECT 1 FROM Requests WHERE LocItemID = @LocItemID);\r\n\r\n\r\n        -- Check if the LocationID already exists for the same ItemId\r\n        IF EXISTS (SELECT 1 FROM LocItems WHERE ItemId = @ItemId AND LocationID = @LocationID)\r\n        BEGIN\r\n            -- If it exists, update the existing record's Qty\r\n\t\t-- Use a CTE to limit the update to only one row\r\n\t\tWITH CTE_LimitedUpdate AS (\r\n\t\t\tSELECT TOP 1 *\r\n\t\t\tFROM LocItems\r\n\t\t\tWHERE ItemId = @ItemId AND LocationID = @LocationID\r\n\t\t\tORDER BY LocItemID -- Assuming LocItemID is the primary key or an identifier for uniqueness\r\n\t\t)\r\n\t\tUPDATE CTE_LimitedUpdate\r\n\t\tSET Qty = Qty + @Qty;\r\n\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            -- If it doesn't exist, insert a new record for the new LocationID\r\n            INSERT INTO LocItems (ItemId, Qty, OverQty, ShortageQty, DamageQty, NISQty, RejectQty, LocationID, EnteredBy, EnteredDate,ParentLocItemID)\r\n            VALUES (@ItemId, @Qty, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, @LocationID, @EnteredBy, GETDATE(),@LocItemID);\r\n        END\r\n\r\n        -- Return success\r\n        SELECT 'Success' AS Status;\r\n    END\r\n    ELSE\r\n    BEGIN\r\n        -- Return an error if the balance is insufficient or the Qty is invalid\r\n        SELECT 'Error: Insufficient balance or invalid quantity' AS Status;\r\n    END\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateBalanceAndInsertLocItem3' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spUpdateBalanceAndInsertLocItem4]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateBalanceAndInsertLocItem4' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spUpdateBalanceAndInsertLocItem4]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","create PROCEDURE [dbo].[spUpdateBalanceAndInsertLocItem4]\r\n    @ItemId INT,\r\n    @LocItemID INT,\r\n    @DelMrvQty DECIMAL(18, 2),\r\n    @DelMrvRejQty DECIMAL(18, 2), -- اضافه شد\r\n    @LocationID INT,\r\n    @CurrentBalance DECIMAL(18, 2),\r\n    @EnteredBy INT\r\nAS\r\nBEGIN\r\n    DECLARE @TotalQty DECIMAL(18, 2);\r\n    \r\n    -- محاسبه کل مقدار بر اساس DelMrvQty و DelMrvRejQty\r\n    SET @TotalQty = @DelMrvQty + @DelMrvRejQty;\r\n    \r\n    -- Check if the total Qty is valid and CurrentBalance is sufficient\r\n    IF @CurrentBalance > 0 AND @TotalQty <= @CurrentBalance\r\n    BEGIN\r\n        -- Update the existing LocItem balance by reducing the total Qty\r\n        UPDATE LocItems\r\n        SET Qty = Qty - @TotalQty\r\n        WHERE LocItemID = @LocItemID;\r\n\t\t\r\n        -- Check if the Qty of the updated row has reached zero, if so, delete the row unless it is used in the Requests table\r\n        DELETE FROM LocItems\r\n        WHERE LocItemID = @LocItemID \r\n        AND Qty = 0\r\n        AND NOT EXISTS (SELECT 1 FROM Requests WHERE LocItemID = @LocItemID);\r\n\r\n        -- Check if the LocationID already exists for the same ItemId\r\n        IF EXISTS (SELECT 1 FROM LocItems WHERE ItemId = @ItemId AND LocationID = @LocationID)\r\n        BEGIN\r\n            -- If it exists, update the existing record's Qty\r\n            WITH CTE_LimitedUpdate AS (\r\n                SELECT TOP 1 *\r\n                FROM LocItems\r\n                WHERE ItemId = @ItemId AND LocationID = @LocationID\r\n                ORDER BY LocItemID\r\n            )\r\n            UPDATE CTE_LimitedUpdate\r\n            SET Qty = Qty + @TotalQty;\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            -- If it doesn't exist, insert a new record for the new LocationID\r\n            INSERT INTO LocItems (ItemId, Qty, OverQty, ShortageQty, DamageQty, NISQty, RejectQty, LocationID, EnteredBy, EnteredDate, ParentLocItemID)\r\n            VALUES (@ItemId, @TotalQty, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, @LocationID, @EnteredBy, GETDATE(), @LocItemID);\r\n        END\r\n\r\n        -- Return success\r\n        SELECT 'Success' AS Status;\r\n    END\r\n    ELSE\r\n    BEGIN\r\n        -- Return an error if the balance is insufficient or the Qty is invalid\r\n        SELECT 'Error: Insufficient balance or invalid quantity' AS Status;\r\n    END\r\nEND;\r\n\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateBalanceAndInsertLocItem4' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spUpdateBalanceAndInsertLocItem5]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateBalanceAndInsertLocItem5' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spUpdateBalanceAndInsertLocItem5]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spUpdateBalanceAndInsertLocItem5]\r\n    @ItemId INT,\r\n    @LocItemID INT,\r\n    @DelMrvQty DECIMAL(18, 2),\r\n    @DelMrvRejQty DECIMAL(18, 2),\r\n    @LocationID INT,\r\n    @CurrentBalance DECIMAL(18, 2),\r\n    @EnteredBy INT,\r\n    @Remark NVARCHAR(300),\r\n    @Status NVARCHAR(50) OUTPUT  -- پارامتر خروجی برای وضعیت\r\nAS\r\nBEGIN\r\n    DECLARE @TotalQty DECIMAL(18, 2);\r\n    \r\n    SET @TotalQty = @DelMrvQty + @DelMrvRejQty;\r\n    \r\n    IF @CurrentBalance > 0 AND @TotalQty <= @CurrentBalance\r\n    BEGIN\r\n        UPDATE LocItems\r\n        SET Qty = Qty - @TotalQty\r\n        WHERE LocItemID = @LocItemID;\r\n\r\n        IF EXISTS (SELECT 1 FROM LocItems WHERE ItemId = @ItemId AND LocationID = @LocationID)\r\n        BEGIN\r\n            WITH CTE_LimitedUpdate AS (\r\n                SELECT TOP 1 *\r\n                FROM LocItems\r\n                WHERE ItemId = @ItemId AND LocationID = @LocationID\r\n                ORDER BY LocItemID\r\n            )\r\n            UPDATE CTE_LimitedUpdate\r\n            SET Qty = Qty + @TotalQty;\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            INSERT INTO LocItems \r\n            (ItemId, Qty, OverQty, ShortageQty, DamageQty, NISQty, RejectQty, LocationID, EnteredBy, EnteredDate, ParentLocItemID, RemarkLocitemID)\r\n            VALUES \r\n            (@ItemId, @TotalQty, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, @LocationID, @EnteredBy, GETDATE(), @LocItemID, @Remark);\r\n        END\r\n\r\n        SET @Status = 'Success';  -- تنظیم وضعیت به موفقیت\r\n    END\r\n    ELSE\r\n    BEGIN\r\n        SET @Status = 'Error: Insufficient balance or invalid quantity';  -- تنظیم وضعیت به خطا\r\n    END\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateBalanceAndInsertLocItem5' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spUpdateBalanceAndInsertLocItem55]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateBalanceAndInsertLocItem55' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spUpdateBalanceAndInsertLocItem55]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spUpdateBalanceAndInsertLocItem55]\r\n    @COMPANYID INT,\r\n    @ItemId INT,\r\n    @LocItemID INT,\r\n    @DelMrvQty DECIMAL(18, 2),\r\n    @DelMrvRejQty DECIMAL(18, 2),\r\n    @LocationID INT,\r\n    @CurrentBalance DECIMAL(18, 2),\r\n    @EnteredBy INT,\r\n    @Remark NVARCHAR(300),\r\n\t@REQUESTNOO NVARCHAR(50),\r\n\t@MRVNumber NVARCHAR(50),\r\n    @Status NVARCHAR(50) OUTPUT  -- پارامتر خروجی برای وضعیت\r\nAS\r\nBEGIN\r\n    DECLARE @TotalQty DECIMAL(18, 2);\r\n    DECLARE @NewLocItemID INT;  -- متغیر برای ذخیره LocItemID جدید\r\n    DECLARE @Message NVARCHAR(100);\r\n\r\n\t--SET @MRVNumber = FORMAT(@MRVNumber, 'D6');\r\n\t--SET @REQUESTNOO = FORMAT(@REQUESTNOO, 'D6');    \r\n\tSET @TotalQty = @DelMrvQty + @DelMrvRejQty;\r\n    \r\n    -- بررسی اینکه آیا موجودی کافی برای کسر وجود دارد یا نه\r\n    IF @CurrentBalance > 0 AND @TotalQty <= @CurrentBalance\r\n    BEGIN\r\n        -- به‌روزرسانی LocItemID اولیه: کسر مقدار DelMrvQty و DelMrvRejQty از موجودی فعلی\r\n        UPDATE LocItems\r\n        SET Qty = Qty - @TotalQty\r\n        WHERE LocItemID = @LocItemID;\r\n\r\n        -- بررسی اینکه آیا LocItemID برای مکان جدید وجود دارد یا خیر\r\n        IF EXISTS (SELECT 1 FROM LocItems WHERE ItemId = @ItemId AND LocationID = @LocationID AND LocItemID = @LocItemID)\r\n        BEGIN\r\n            -- به‌روزرسانی موجودی برای مکان جدید\r\n            WITH CTE_LimitedUpdate AS (\r\n                SELECT TOP 1 *\r\n                FROM LocItems\r\n                WHERE ItemId = @ItemId AND LocationID = @LocationID --AND LocItemID = @LocItemID\r\n                ORDER BY LocItemID DESC\r\n            )\r\n            UPDATE CTE_LimitedUpdate\r\n            SET Qty = Qty + @TotalQty;\r\n        END\r\n        ELSE\r\n\t    --IF EXISTS (SELECT 1 FROM LocItems WHERE ItemId = @ItemId AND LocationID = @LocationID)\r\n     --   BEGIN\r\n     --       -- به‌روزرسانی موجودی برای مکان جدید\r\n     --       WITH CTE_LimitedUpdate AS (\r\n     --           SELECT TOP 1 *\r\n     --           FROM LocItems\r\n     --           WHERE ItemId = @ItemId AND LocationID = @LocationID AND LocItemID = @LocItemID\r\n     --           ORDER BY LocItemID DESC\r\n     --       )\r\n     --       UPDATE CTE_LimitedUpdate\r\n     --       SET Qty = Qty + @TotalQty;\r\n     --   END\r\n     --   ELSE\r\n        BEGIN\r\n            -- درج یک رکورد جدید در LocItems برای مکان جدید\r\n            INSERT INTO LocItems \r\n            (ItemId, Qty, OverQty, ShortageQty, DamageQty, NISQty, RejectQty, LocationID, EnteredBy, EnteredDate, ParentLocItemID, RemarkLocitemID)\r\n            VALUES \r\n            (@ItemId, @TotalQty, DEFAULT, DEFAULT, DEFAULT, DEFAULT, DEFAULT, @LocationID, @EnteredBy, GETDATE(), @LocItemID, @Remark);\r\n            \r\n            -- دریافت LocItemID جدید\r\n            SET @NewLocItemID = SCOPE_IDENTITY();\r\n        END\r\n        \r\n        -- اگر LocItemID جدید ساخته شد\r\n        IF @NewLocItemID IS NOT NULL\r\n        BEGIN\r\n       --SET @NewLocItemID = SCOPE_IDENTITY();\r\n\r\n\t\t---- نمایش پیغام اول که می‌گوید LocItemID جدید ساخته شده است\r\n\t\t--RAISERROR('LocItemID جدید ساخته شد', 16, 1) WITH NOWAIT;\r\n\r\n\t\t---- ساخت پیغام که LocItemID جدید را نمایش می‌دهد\r\n\t\t--SET @Message = 'LocItemID جدید: ' + CAST(@NewLocItemID AS NVARCHAR(10));\r\n\r\n\t\t---- نمایش LocItemID جدید\r\n\t\t--RAISERROR(@Message, 16, 1) WITH NOWAIT;\r\n\r\n\t\t-- کسر مقادیر از LocItemID اولیه در جدول Requests\r\n\t\t\t   WITH CTE_Requests AS (\r\n\t\t\t\tSELECT TOP 1 *\r\n\t\t\t\tFROM Requests\r\n\t\t\t\tWHERE LocItemID = @LocItemID AND RequestNO = @RequestNOO AND CompanyID=@COMPANYID and TypeID=1\r\n\t\t\t\tORDER BY ReqLocItemID  -- ترتیب بر اساس شناسه‌ای که ترتیب را مشخص کند (می‌توانید بر اساس نیاز تغییر دهید)\r\n\t\t\t)\r\n\t\t\tUPDATE CTE_Requests\r\n\t\t\tSET DelMivQty = ISNULL(DelMivQty, 0) - (@DelMrvQty+@DelMrvRejQty);\r\n\r\n\t\t\t\r\n\t\t   WITH CTE_Requests2forMRV AS (\r\n\t\t\tSELECT TOP 1 *\r\n\t\t\tFROM Requests\r\n\t\t\tWHERE LocItemID = @LocItemID AND RequestNO = @MRVNumber AND CompanyID=@COMPANYID and TypeID=2\r\n\t\t\tORDER BY ReqLocItemID-- ترتیب بر اساس شناسه‌ای که ترتیب را مشخص کند (می‌توانید بر اساس نیاز تغییر دهید)\r\n\t\t)\r\n\t\tUPDATE CTE_Requests2forMRV\r\n\t\tSET DelMrvQty = ISNULL(DelMrvQty, 0) - @DelMrvQty,\r\n\t\t\tDelMrvRejQty = ISNULL(DelMrvRejQty, 0) - @DelMrvRejQty;\r\n\r\n\r\n\t\t\t\t\t    -- درج رکورد جدید در Requests برای LocItemID جدید\r\n\t\t\t\t\t   -- اولین INSERT\r\n\t\t\tINSERT INTO Requests (CompanyID, ContractId, MRVNO, AreaUnitID, ReqMrvQty, DelMrvQty, LocItemID, \r\n\t\t\tDelMrvRejQty, Remark, RequestNO, TypeId, IssuedBy, DelDate,MRCNO)\r\n\t\t\tSELECT \r\n\t\t\t\tCompanyID,\r\n\t\t\t\tContractId,\r\n\t\t\t\tMRVNO,\r\n\t\t\t\tAreaUnitID,\r\n\t\t\t\tReqMrvQty,\r\n\t\t\t\t@DelMrvQty,\r\n\t\t\t\t@NewLocItemID,\r\n\t\t\t\t@DelMrvRejQty,\r\n\t\t\t\tRemark,\r\n\t\t\t\t@MRVNumber,\r\n\t\t\t\t2,\r\n\t\t\t\tIssuedBy,\r\n\t\t\t\tDelDate,\r\n\t\t\t\t@REQUESTNOO\r\n\t\t\tFROM Requests\r\n\t\t\tWHERE LocItemID = @LocItemID AND RequestNO = @MRVNumber AND CompanyID=@COMPANYID AND TypeId=2;\r\n\r\n\t\t\t---- بررسی تعداد ردیف‌های درج شده\r\n\t\t\t--IF @@ROWCOUNT > 0\r\n\t\t\t--BEGIN\r\n\t\t\t--\tRAISERROR('اولین INSERT با موفقیت انجام شد.', 16, 1) WITH NOWAIT;\r\n\t\t\t--END\r\n\t\t\t--ELSE\r\n\t\t\t--BEGIN\r\n\t\t\t--\tRAISERROR('خطا در اولین INSERT: هیچ ردیفی درج نشد.', 16, 1);\r\n\t\t\t--END\r\n\r\n\t\t\t-- دومین INSERT\r\n\t\t\tINSERT INTO Requests (CompanyID, ContractId, MRCNO, AreaUnitID, ReqMivQty, ReserveMivQty, \r\n\t\t\tDelMivQty, LocItemID, RequestNO, IssuedBy, IssuedDate, TypeId, ApprovedBy, ApprovedDate, ReqDate, RequestPDF, VendorID)\r\n\t\t\tSELECT \r\n\t\t\t\tCompanyID, \r\n\t\t\t\tContractId, \r\n\t\t\t\tMRCNO, \r\n\t\t\t\tAreaUnitID, \r\n\t\t\t\tReqMivQty, \r\n\t\t\t\tReserveMivQty, \r\n\t\t\t\t@TotalQty, \r\n\t\t\t\t@NewLocItemID, \r\n\t\t\t\tRequestNO, \r\n\t\t\t\tIssuedBy, \r\n\t\t\t\tIssuedDate, \r\n\t\t\t\t1, \r\n\t\t\t\tApprovedBy, \r\n\t\t\t\tApprovedDate, \r\n\t\t\t\tReqDate, \r\n\t\t\t\tRequestPDF, \r\n\t\t\t\tVendorID\r\n\t\t\tFROM Requests \r\n\t\t\tWHERE LocItemID = @LocItemID AND RequestNO = @RequestNOO AND CompanyID=@COMPANYID AND TypeId=1;\r\n\r\n\t\t\t---- بررسی تعداد ردیف‌های درج شده\r\n\t\t\t--IF @@ROWCOUNT > 0\r\n\t\t\t--BEGIN\r\n\t\t\t--\tRAISERROR('دومین INSERT با موفقیت انجام شد.', 16, 1) WITH NOWAIT;\r\n\t\t\t--END\r\n\t\t\t--ELSE\r\n\t\t\t--BEGIN\r\n\t\t\t--\tRAISERROR('خطا در دومین INSERT: هیچ ردیفی درج نشد.', 16, 1);\r\n\t\t\t--END\r\n\r\n        \r\n\t\t   END\r\n\r\n\r\n        SET @Status = 'Success';  -- تنظیم وضعیت به موفقیت\r\n    END\r\n    ELSE\r\n    BEGIN\r\n        SET @Status = 'Error: Insufficient balance or invalid quantity';  -- تنظیم وضعیت به خطا\r\n    END\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateBalanceAndInsertLocItem55' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spUpdateBalanceAndInsertLocItem6]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateBalanceAndInsertLocItem6' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spUpdateBalanceAndInsertLocItem6]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spUpdateBalanceAndInsertLocItem6]\r\n    @ItemId INT,\r\n    @LocItemID INT,\r\n    @DelMrvQty DECIMAL(18, 2),\r\n    @DelMrvRejQty DECIMAL(18, 2),\r\n    @LocationID INT,\r\n    @CurrentBalance DECIMAL(18, 2),\r\n    @EnteredBy INT,\r\n    @Remark NVARCHAR(300),\r\n    @Status NVARCHAR(50) OUTPUT\r\nAS\r\nBEGIN\r\n    DECLARE @TotalQty DECIMAL(18, 2);\r\n\r\n    -- محاسبه مقدار کل\r\n    SET @TotalQty = @DelMrvQty + @DelMrvRejQty;\r\n\r\n    -- بررسی بالانس و مقدار\r\n    IF @CurrentBalance > 0 AND @TotalQty <= @CurrentBalance\r\n    BEGIN\r\n        -- کسر مقدار از LocItemID اولیه\r\n        UPDATE LocItems\r\n        SET Qty = Qty - @TotalQty\r\n        WHERE LocItemID = @LocItemID;\r\n\r\n        -- اگر LocItemID جدیدی در آن LocationID وجود داشته باشد، مقدار را به آن اضافه کنید\r\n        IF EXISTS (SELECT 1 FROM LocItems WHERE ItemId = @ItemId AND LocationID = @LocationID)\r\n        BEGIN\r\n            UPDATE LocItems\r\n            SET Qty = Qty + @TotalQty\r\n            WHERE ItemId = @ItemId AND LocationID = @LocationID;\r\n        END\r\n        ELSE\r\n        BEGIN\r\n            -- ایجاد رکورد جدید برای LocItemID جدید\r\n            INSERT INTO LocItems \r\n            (ItemId, Qty, OverQty, ShortageQty, DamageQty, NISQty, RejectQty, LocationID, EnteredBy, EnteredDate, ParentLocItemID, RemarkLocitemID)\r\n            VALUES \r\n            (@ItemId, @TotalQty, DEFAULT, DEFAULT, DEFAULT, DEFAULT, @DelMrvRejQty, @LocationID, @EnteredBy, GETDATE(), @LocItemID, @Remark);\r\n        END\r\n\r\n        SET @Status = 'Success';\r\n    END\r\n    ELSE\r\n    BEGIN\r\n        SET @Status = 'Error: Insufficient balance or invalid quantity';\r\n    END\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateBalanceAndInsertLocItem6' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spUpdateExpireDate]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateExpireDate' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spUpdateExpireDate]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spUpdateExpireDate]\r\n    @ItemIds dbo.IntItemIdList READONLY, -- لیستی از آیتم‌ها به‌صورت TVP\r\n    @ExpireDate DATE\r\nAS\r\nBEGIN\r\n    UPDATE Items\r\n    SET ExpiredDate = @ExpireDate\r\n    WHERE ItemId IN (SELECT Value FROM @ItemIds)\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateExpireDate' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spUpdateLocation]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateLocation' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spUpdateLocation]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spUpdateLocation]\r\n    @LocationID INT,\r\n    @LocationName NVARCHAR(100)\r\nAS\r\nBEGIN\r\n    UPDATE Locations\r\n    SET LocationName = @LocationName\r\n    WHERE LocationID = @LocationID;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateLocation' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spUpdateLocItemsLocation]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateLocItemsLocation' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spUpdateLocItemsLocation]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spUpdateLocItemsLocation]\r\n    @LocItemIds dbo.IntLocItemsList READONLY,  -- TVP برای ارسال لیست LocItemID ها\r\n    @NewLocationId INT\r\nAS\r\nBEGIN\r\n    -- متغیر برای نگهداری تعداد مواردی که یک ItemId بیش از یک LocItemID دارد\r\n    DECLARE @InvalidItemCount INT;\r\n\r\n    -- بررسی اینکه هر ItemId مرتبط با LocItemID انتخاب شده فقط یک LocItemID داشته باشد\r\n    SELECT @InvalidItemCount = COUNT(*)\r\n    FROM LocItems LI\r\n    WHERE EXISTS (\r\n        SELECT 1 \r\n        FROM LocItems LI2\r\n        WHERE LI.ItemId = LI2.ItemId\r\n        GROUP BY LI2.ItemId\r\n        HAVING COUNT(LI2.LocItemID) > 1\r\n    )\r\n    AND LI.LocItemID IN (SELECT Value FROM @LocItemIds);\r\n\r\n    -- اگر تعداد آیتم‌هایی که بیش از یک LocItemID دارند بیشتر از صفر بود، پیام خطا برگردان\r\n    IF @InvalidItemCount > 0\r\n    BEGIN\r\n        SELECT 'Error: Some LocItems are part of an ItemID that has more than one LocItem. Each ItemID must have only one LocItem.' AS Status;\r\n        RETURN;\r\n    END\r\n\r\n    -- ادامه به‌روزرسانی مکان (Location) در صورتی که شرط معتبر باشد\r\n    UPDATE LocItems\r\n    SET LocationId = @NewLocationId\r\n    WHERE LocItemID IN (SELECT Value FROM @LocItemIds);\r\n\r\n    -- بازگشت پیام موفقیت\r\n    SELECT 'Success: Location updated successfully.' AS Status;\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateLocItemsLocation' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spUpdateLocItemsLocation2025]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateLocItemsLocation2025' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spUpdateLocItemsLocation2025]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spUpdateLocItemsLocation2025]\r\n    @LocItemIds dbo.IntLocItemsList READONLY,  -- TVP برای ارسال لیست LocItemID ها\r\n    @NewLocationId INT,\r\n\t@userID INT\r\nAS\r\nBEGIN\r\n    ---- متغیر برای نگهداری تعداد مواردی که یک ItemId بیش از یک LocItemID دارد\r\n    --DECLARE @InvalidItemCount INT;\r\n\r\n    ---- بررسی اینکه هر ItemId مرتبط با LocItemID انتخاب شده فقط یک LocItemID داشته باشد\r\n    --SELECT @InvalidItemCount = COUNT(*)\r\n    --FROM LocItems LI\r\n    --WHERE EXISTS (\r\n    --    SELECT 1 \r\n    --    FROM LocItems LI2\r\n    --    WHERE LI.ItemId = LI2.ItemId\r\n    --    GROUP BY LI2.ItemId\r\n    --    HAVING COUNT(LI2.LocItemID) > 1\r\n    --)\r\n    --AND LI.LocItemID IN (SELECT Value FROM @LocItemIds);\r\n\r\n    ---- اگر تعداد آیتم‌هایی که بیش از یک LocItemID دارند بیشتر از صفر بود، پیام خطا برگردان\r\n    --IF @InvalidItemCount > 0\r\n    --BEGIN\r\n    --    SELECT 'Error: Some LocItems are part of an ItemID that has more than one LocItem. Each ItemID must have only one LocItem.' AS Status;\r\n    --    RETURN;\r\n    --END\r\n\r\n    -- ادامه به‌روزرسانی مکان (Location) در صورتی که شرط معتبر باشد\r\n    UPDATE LocItems\r\n    SET LocationId = @NewLocationId,EditedBy=@userID\r\n    WHERE LocItemID IN (SELECT Value FROM @LocItemIds);\r\n\r\n    -- بازگشت پیام موفقیت\r\n    SELECT 'Success: Location updated successfully.' AS Status;\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateLocItemsLocation2025' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spUpdateNISQty]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateNISQty' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spUpdateNISQty]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spUpdateNISQty]\r\n    @LocItemID INT,\r\n    @NisQty DECIMAL(18, 2),\r\n    @Balance DECIMAL(18, 2)\r\nAS\r\nBEGIN\r\n    -- چک کردن اینکه آیا مقدار NIS از Balance بیشتر است یا خیر\r\n    IF @NisQty > @Balance\r\n    BEGIN\r\n        -- اگر NIS بیشتر از Balance باشد، عملیات متوقف شود\r\n        RAISERROR('NIS quantity cannot be greater than the available balance.', 16, 1);\r\n        RETURN;\r\n    END\r\n\r\n    -- به‌روزرسانی مقدار NISQty و Balance\r\n    UPDATE LocItems\r\n    SET NISQty = @NisQty\r\n    WHERE LocItemID = @LocItemID;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateNISQty' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spUpdateRemarkLocItemID2025]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateRemarkLocItemID2025' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spUpdateRemarkLocItemID2025]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spUpdateRemarkLocItemID2025]\r\n    @ItemId INT,\r\n    @LocItemID INT,\r\n    @RemarkLocitemID NVARCHAR(MAX),\r\n    @EnteredBy INT\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    -- چک کردن اینکه آیا آیتم مورد نظر وجود دارد یا خیر\r\n    IF EXISTS (SELECT 1 FROM LocItems WHERE ItemId = @ItemId AND LocItemID = @LocItemID)\r\n    BEGIN\r\n        -- بروزرسانی فیلد Remark برای آیتم و لوکیشن مشخص\r\n        UPDATE LocItems\r\n        SET RemarkLocitemID = @RemarkLocitemID,\r\n            EditedBy = @EnteredBy,\r\n            EditedDate = GETDATE()\r\n        WHERE ItemId = @ItemId AND LocItemID = @LocItemID;\r\n\r\n        -- در صورت موفقیت آمیز بودن عملیات، پیام \"Success\" برمی‌گردد\r\n        SELECT 'Success' AS Result;\r\n    END\r\n    ELSE\r\n    BEGIN\r\n        -- در صورتی که آیتم مورد نظر وجود نداشته باشد، پیام خطا برمی‌گردد\r\n        SELECT 'Error: Item or LocItemID not found' AS Result;\r\n    END\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateRemarkLocItemID2025' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spUpdateScope]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateScope' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spUpdateScope]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spUpdateScope]\r\n    @ScopeID INT,\r\n    @ScopeName NVARCHAR(100)\r\nAS\r\nBEGIN\r\n    UPDATE Scopes\r\n    SET ScopeName = @ScopeName\r\n    WHERE ScopeID = @ScopeID\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateScope' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[spUpdateUnit]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateUnit' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[spUpdateUnit]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[spUpdateUnit]\r\n    @UnitID INT,\r\n    @UnitName NVARCHAR(100)\r\nAS\r\nBEGIN\r\n    UPDATE Units\r\n    SET UnitName = @UnitName\r\n    WHERE UnitID = @UnitID\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='spUpdateUnit' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[updateHmvCompany]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='updateHmvCompany' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[updateHmvCompany]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","create PROCEDURE [dbo].[updateHmvCompany]\r\n    @RequestNO NVARCHAR(100),\r\n    @HmvCompany int,\r\n    @Success BIT OUTPUT\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n    SET @Success = 0;\r\n\r\n    BEGIN TRANSACTION;\r\n    BEGIN TRY\r\n        UPDATE Requests \r\n        SET CompanyID2 = @HmvCompany \r\n        WHERE TypeID = 3 AND RequestNO = @RequestNO;\r\n\r\n        -- Check if the update affected any rows\r\n        IF @@ROWCOUNT > 0\r\n        BEGIN\r\n            SET @Success = 1;\r\n        END\r\n\r\n        COMMIT TRANSACTION;\r\n    END TRY\r\n    BEGIN CATCH\r\n        ROLLBACK TRANSACTION;\r\n        DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();\r\n        RAISERROR (@ErrorMessage, 16, 1);\r\n    END CATCH\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='updateHmvCompany' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[updateHmvName]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='updateHmvName' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[updateHmvName]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[updateHmvName]\r\n    @RequestNO NVARCHAR(100),\r\n    @HmvNo NVARCHAR(MAX),\r\n    @Success BIT OUTPUT\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n    SET @Success = 0;\r\n\r\n    BEGIN TRANSACTION;\r\n    BEGIN TRY\r\n        UPDATE Requests \r\n        SET HMVNO = @HmvNo \r\n        WHERE TypeID = 3 AND RequestNO = @RequestNO;\r\n\r\n        -- Check if the update affected any rows\r\n        IF @@ROWCOUNT > 0\r\n        BEGIN\r\n            SET @Success = 1;\r\n        END\r\n\r\n        COMMIT TRANSACTION;\r\n    END TRY\r\n    BEGIN CATCH\r\n        ROLLBACK TRANSACTION;\r\n        DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();\r\n        RAISERROR (@ErrorMessage, 16, 1);\r\n    END CATCH\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='updateHmvName' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[UpdateHMVQty2025]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateHMVQty2025' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[UpdateHMVQty2025]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[UpdateHMVQty2025]\r\n    @UpdateMrvQtyTVP dbo.UpdateMrvQtType READONLY\r\nAS\r\nBEGIN\r\n    BEGIN TRANSACTION;\r\n\r\n    BEGIN TRY\r\n        -- استخراج CompanyID مربوط به MRVRequest و TypeID = 2\r\n        DECLARE @CompanyID INT;\r\n\t\tDECLARE @DelHMVQtyLast decimal(18,2);\r\n\t\tDECLARE @DelHMVRejQtyLast decimal(18,2);\r\n\r\n        SELECT TOP 1 @CompanyID = Requests.CompanyID , @DelHMVQtyLast=Requests.DelHmvQty,@DelHMVRejQtyLast=Requests.DelHmvRejQty\r\n        FROM Requests\r\n        WHERE Requests.RequestNO IN (SELECT MRVRequest FROM @UpdateMrvQtyTVP)\r\n          AND TypeID = 3;\r\n\r\n        IF @CompanyID IS NULL\r\n        BEGIN\r\n            THROW 50000, 'CompanyID not found for the provided MRVRequest.', 1;\r\n        END\r\n\r\n\t\t\t\t\t\t-- تعریف جدول موقت\r\n\t\t\tDECLARE @AvailableData TABLE (\r\n\t\t\t\tLocItemID INT,                          -- شناسه موقعیت مکانی آیتم\r\n\t\t\t\tRequestNO NVARCHAR(50),                 -- شماره درخواست\r\n\t\t\t\tTypeName NVARCHAR(50),                  -- نوع درخواست (MIV یا HMV)\r\n\t\t\t\tItemId INT,                             -- شناسه آیتم\r\n\t\t\t\tTag NVARCHAR(50),                       -- برچسب آیتم\r\n\t\t\t\tDescription NVARCHAR(MAX),              -- توضیحات آیتم\r\n\t\t\t\tUnitName NVARCHAR(50),                  -- نام واحد اندازه‌گیری\r\n\t\t\t\tTotalDelMivQty INT,                     -- مقدار کل تحویلی در MIV\r\n\t\t\t\tTotalDelMivRejQty INT,                  -- مقدار کل رد شده در MIV\r\n\t\t\t\tMrvHmvAvailableQty INT,                 -- مقدار قابل دسترس برای MRV و HMV\r\n\t\t\t\tTotalReqMrvQty INT,                     -- مجموع مقادیر درخواست شده در MRV (با علامت منفی)\r\n\t\t\t\tTotalDelMrvQty INT,                     -- مجموع مقادیر تحویل داده شده در MRV (با علامت منفی)\r\n\t\t\t\tTotalDelMrvRejQty INT,                  -- مجموع مقادیر رد شده در MRV (با علامت منفی)\r\n\t\t\t\tTotalDelHmvQty INT,                     -- مجموع مقادیر تحویل داده شده در HMV (با علامت منفی)\r\n\t\t\t\tTotalDelHmvRejQty INT,                  -- مجموع مقادیر رد شده در HMV (با علامت منفی)\r\n\t\t\t\tTotalGetHmvQty INT,                     -- مجموع مقادیر دریافت‌شده در HMV\r\n\t\t\t\tTotalGetHmvRejQty INT                   -- مجموع مقادیر رد شده در HMV\r\n\t\t\t);\r\n\r\n\t\t\t-- درج داده‌ها از پروسجر\r\n\t\t\tINSERT INTO @AvailableData (\r\n\t\t\t\tLocItemID,\r\n\t\t\t\tRequestNO,\r\n\t\t\t\tTypeName,\r\n\t\t\t\tItemId,\r\n\t\t\t\tTag,\r\n\t\t\t\tDescription,\r\n\t\t\t\tUnitName,\r\n\t\t\t\tTotalDelMivQty,\r\n\t\t\t\tTotalDelMivRejQty,\r\n\t\t\t\tMrvHmvAvailableQty,\r\n\t\t\t\tTotalReqMrvQty,\r\n\t\t\t\tTotalDelMrvQty,\r\n\t\t\t\tTotalDelMrvRejQty,\r\n\t\t\t\tTotalDelHmvQty,\r\n\t\t\t\tTotalDelHmvRejQty,\r\n\t\t\t\tTotalGetHmvQty,\r\n\t\t\t\tTotalGetHmvRejQty\r\n\t\t\t)\r\n\t\t\tEXEC dbo.AllMaterialMrvHmvable2025 @CompanyID;\r\n\r\n\r\n        -- بررسی موجودی مجاز بازگشتی برای PLocItemIDforMRV\r\n        DECLARE @ValidationErrors NVARCHAR(MAX);\r\n\r\n        SELECT \r\n            @ValidationErrors = STRING_AGG('LocItemID ' + CAST(tvp.LocItemID AS NVARCHAR) + ' exceeds the available quantity.', CHAR(13))\r\n        FROM @UpdateMrvQtyTVP tvp\r\n        LEFT JOIN @AvailableData AS AvailableData\r\n            ON tvp.LocItemID = AvailableData.LocItemID\r\n        WHERE tvp.DelMrvQty + tvp.DelMrvRejQty > AvailableData.MrvHmvAvailableQty+@DelHMVQtyLast+@DelHMVRejQtyLast;\r\n\r\n        IF @ValidationErrors IS NOT NULL\r\n        BEGIN\r\n            ROLLBACK TRANSACTION;\r\n            THROW 50001, @ValidationErrors, 1;\r\n        END\r\n\r\n        -- به‌روزرسانی مقادیر مورد نظر در جدول هدف\r\n        UPDATE Requests\r\n        SET \r\n            ReqHmvQty = tvp.ReqMrvQty,\r\n            DelHmvQty = tvp.DelMrvQty,\r\n            DelHmvRejQty = tvp.DelMrvRejQty,\r\n            IssuedBy = tvp.EditedBy,\r\n            IssuedDate = tvp.EditedDate\r\n        FROM @UpdateMrvQtyTVP tvp\r\n        WHERE Requests.LocItemID = tvp.LocItemID\r\n          AND Requests.ReqLocItemID = tvp.ReqLocItemID\r\n          AND Requests.RequestNO = tvp.MRVRequest\r\n          AND TypeID = 3;\r\n\r\n\r\n\r\n\t\t  \t\t\t\t\t\t-- تعریف جدول موقت\r\n\t\t\tDECLARE @AvailableData2 TABLE (\r\n\t\t\t\tLocItemID INT,                          -- شناسه موقعیت مکانی آیتم\r\n\t\t\t\tRequestNO NVARCHAR(50),                 -- شماره درخواست\r\n\t\t\t\tTypeName NVARCHAR(50),                  -- نوع درخواست (MIV یا HMV)\r\n\t\t\t\tItemId INT,                             -- شناسه آیتم\r\n\t\t\t\tTag NVARCHAR(50),                       -- برچسب آیتم\r\n\t\t\t\tDescription NVARCHAR(MAX),              -- توضیحات آیتم\r\n\t\t\t\tUnitName NVARCHAR(50),                  -- نام واحد اندازه‌گیری\r\n\t\t\t\tTotalDelMivQty INT,                     -- مقدار کل تحویلی در MIV\r\n\t\t\t\tTotalDelMivRejQty INT,                  -- مقدار کل رد شده در MIV\r\n\t\t\t\tMrvHmvAvailableQty INT,                 -- مقدار قابل دسترس برای MRV و HMV\r\n\t\t\t\tTotalReqMrvQty INT,                     -- مجموع مقادیر درخواست شده در MRV (با علامت منفی)\r\n\t\t\t\tTotalDelMrvQty INT,                     -- مجموع مقادیر تحویل داده شده در MRV (با علامت منفی)\r\n\t\t\t\tTotalDelMrvRejQty INT,                  -- مجموع مقادیر رد شده در MRV (با علامت منفی)\r\n\t\t\t\tTotalDelHmvQty INT,                     -- مجموع مقادیر تحویل داده شده در HMV (با علامت منفی)\r\n\t\t\t\tTotalDelHmvRejQty INT,                  -- مجموع مقادیر رد شده در HMV (با علامت منفی)\r\n\t\t\t\tTotalGetHmvQty INT,                     -- مجموع مقادیر دریافت‌شده در HMV\r\n\t\t\t\tTotalGetHmvRejQty INT                   -- مجموع مقادیر رد شده در HMV\r\n\t\t\t);\r\n\r\n\t\t\t-- درج داده‌ها از پروسجر\r\n\t\t\tINSERT INTO @AvailableData2 (\r\n\t\t\t\tLocItemID,\r\n\t\t\t\tRequestNO,\r\n\t\t\t\tTypeName,\r\n\t\t\t\tItemId,\r\n\t\t\t\tTag,\r\n\t\t\t\tDescription,\r\n\t\t\t\tUnitName,\r\n\t\t\t\tTotalDelMivQty,\r\n\t\t\t\tTotalDelMivRejQty,\r\n\t\t\t\tMrvHmvAvailableQty,\r\n\t\t\t\tTotalReqMrvQty,\r\n\t\t\t\tTotalDelMrvQty,\r\n\t\t\t\tTotalDelMrvRejQty,\r\n\t\t\t\tTotalDelHmvQty,\r\n\t\t\t\tTotalDelHmvRejQty,\r\n\t\t\t\tTotalGetHmvQty,\r\n\t\t\t\tTotalGetHmvRejQty\r\n\t\t\t)\r\n\t\t\tEXEC dbo.AllMaterialMrvHmvable2025 @CompanyID;\r\n\r\n\r\n\r\n\t\n             -- بررسی موجودی مجاز بازگشتی برای PLocItemIDforMRV\r\n        DECLARE @ValidationErrors2 NVARCHAR(MAX);\r\n\r\n        SELECT \r\n            @ValidationErrors2 = STRING_AGG('MrvHmvAvailableQty cannot be negative after update. LocItemID ' + CAST(tvp.LocItemID AS NVARCHAR) + ' exceeds the available quantity.', CHAR(13))\r\n        FROM @UpdateMrvQtyTVP tvp\r\n        LEFT JOIN @AvailableData2 AS AvailableData2\r\n            ON tvp.LocItemID = AvailableData2.LocItemID\r\n        WHERE AvailableData2.MrvHmvAvailableQty<0;\r\n\r\n     IF @ValidationErrors2 IS NOT NULL\r\n\t\tBEGIN\r\n\t\t\tROLLBACK TRANSACTION;\r\n\t\t\tTHROW 50002, @ValidationErrors2, 1;\r\n\t\tEND;\r\n\r\n\r\n\r\n\r\n        COMMIT TRANSACTION;\r\n    END TRY\r\n    BEGIN CATCH\r\n        ROLLBACK TRANSACTION;\r\n        THROW;\r\n    END CATCH;\r\nEND;\r\n\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateHMVQty2025' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[UpdateHMVRemark]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateHMVRemark' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[UpdateHMVRemark]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[UpdateHMVRemark]\r\n    @UpdateMrvRemarkTVP dbo.UpdateMrvRemarkType READONLY\r\nAS\r\nBEGIN\r\n    UPDATE Requests\r\n    SET \r\n        Remark = tvp.RemarkRequests,\r\n        IssuedBy = tvp.EditedBy,\r\n        IssuedDate = tvp.EditedDate\r\n    FROM @UpdateMrvRemarkTVP tvp\r\n    WHERE Requests.LocItemID = tvp.LocItemID and RequestNO = tvp.MRVRequest and TypeID=3;\r\nEND\r\n\r\n\r\n\r\n--CREATE PROCEDURE UpdateMRVRemark\r\n--    @UpdateMrvRemarkMrvTVP dbo.UpdateMrvRemarkType READONLY\r\n--AS\r\n--BEGIN\r\n--    -- مثال از نحوه به‌روزرسانی اطلاعات\r\n--    UPDATE MRVTable\r\n--    SET \r\n--        RemarkRequests = tvp.RemarkRequests,\r\n--        MRVRequest = tvp.MRVRequest,\r\n--        EditedBy = tvp.EditedBy,\r\n--        EditedDate = tvp.EditedDate\r\n--    FROM @UpdateMrvRemarkMrvTVP tvp\r\n--    WHERE MRVTable.LocItemID = tvp.LocItemID;\r\n--END;\r\n--CREATE TYPE dbo.UpdateMrvRemarkType AS TABLE\r\n--(\r\n--    LocItemID INT,\r\n--    RemarkRequests NVARCHAR(255),\r\n--    MRVRequest NVARCHAR(255),\r\n--    EditedBy NVARCHAR(50),\r\n--    EditedDate DATETIME\r\n--);\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateHMVRemark' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[UpdateInspectionDetails]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateInspectionDetails' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[UpdateInspectionDetails]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[UpdateInspectionDetails]\r\n    @PLId INT,\r\n    @IrnId INT,\r\n    @IRN_Conflict BIT,\r\n    @IVR_NO NVARCHAR(50),\r\n    @IVR_IFR NVARCHAR(50),\r\n    @OrderStatus NVARCHAR(100),\r\n    @ThirdParty BIT,\r\n    @OPI BIT,\r\n    @Description NVARCHAR(MAX),\r\n    @IcNo NVARCHAR(50),\r\n    @SubProject NVARCHAR(100),\r\n    @Site BIT,\r\n    @Laydown BIT,\r\n    @Warehouse BIT,\r\n    @OSBL BIT,\r\n    @VisualInspection BIT,\r\n    @QuantityCheck BIT,\r\n    @Marking BIT,\r\n    @Unloading BIT,\r\n    @EditedBy INT,\r\n    @EditedDate DATETIME\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    IF EXISTS (SELECT 1 FROM Inspection WHERE PLId = @PLId)\r\n    BEGIN\r\n        -- به‌روزرسانی رکورد\r\n        UPDATE Inspection\r\n        SET \r\n            IRN_Conflict = @IRN_Conflict,\r\n            IVR_NO = @IVR_NO,\r\n            IVR_IFR = @IVR_IFR,\r\n            OrderStatus = @OrderStatus,\r\n            ThirdParty = @ThirdParty,\r\n            OPI = @OPI,\r\n            Description = @Description,\r\n            IcNo = @IcNo,\r\n            SubProject = @SubProject,\r\n            Site = @Site,\r\n            Laydown = @Laydown,\r\n            Warehouse = @Warehouse,\r\n            OSBL = @OSBL,\r\n            VisualInspection = @VisualInspection,\r\n            QuantityCheck = @QuantityCheck,\r\n            Marking = @Marking,\r\n            Unloading = @Unloading,\r\n            EditedBy = @EditedBy,\r\n            EditedDate = @EditedDate\r\n        WHERE PLId = @PLId;\r\n    END\r\n    ELSE\r\n    BEGIN\r\n        -- درج رکورد جدید\r\n        INSERT INTO Inspection\r\n        (\r\n            PLId,\r\n            IrnId,\r\n            IRN_Conflict,\r\n            IVR_NO,\r\n            IVR_IFR,\r\n            OrderStatus,\r\n            ThirdParty,\r\n            OPI,\r\n            Description,\r\n            IcNo,\r\n            SubProject,\r\n            Site,\r\n            Laydown,\r\n            Warehouse,\r\n            OSBL,\r\n            VisualInspection,\r\n            QuantityCheck,\r\n            Marking,\r\n            Unloading,\r\n            EditedBy,\r\n            EditedDate\r\n        )\r\n        VALUES\r\n        (\r\n            @PLId,\r\n            @IrnId,\r\n            @IRN_Conflict,\r\n            @IVR_NO,\r\n            @IVR_IFR,\r\n            @OrderStatus,\r\n            @ThirdParty,\r\n            @OPI,\r\n            @Description,\r\n            @IcNo,\r\n            @SubProject,\r\n            @Site,\r\n            @Laydown,\r\n            @Warehouse,\r\n            @OSBL,\r\n            @VisualInspection,\r\n            @QuantityCheck,\r\n            @Marking,\r\n            @Unloading,\r\n            @EditedBy,\r\n            @EditedDate\r\n        );\r\n    END\r\nEND\r\n\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateInspectionDetails' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[UpdateIRNPDF]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateIRNPDF' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[UpdateIRNPDF]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[UpdateIRNPDF]\r\n    @IRNName NVARCHAR(255),\r\n    @IRNPDF NVARCHAR(255)\r\nAS\r\nBEGIN\r\n    UPDATE Irns\r\n    SET IrnPdf = @IRNPDF\r\n    WHERE IrnName = @IRNName;\r\n\r\n\t -- Return the number of affected rows\r\n    RETURN @@ROWCOUNT;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateIRNPDF' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[UpdateLocItem]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateLocItem' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[UpdateLocItem]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[UpdateLocItem]\r\n    @LocItemID INT,\r\n    @LocationID INT,\r\n    @Qty DECIMAL(18, 2),\r\n    @OverQty DECIMAL(18, 2),\r\n    @ShortageQty DECIMAL(18, 2),\r\n    @DamageQty DECIMAL(18, 2),\r\n    @RejectQty DECIMAL(18, 2),\r\n    @NISQty DECIMAL(18, 2),\r\n    @EditedBy INT,\r\n    @EditedDate DATETIME\r\nAS\r\nBEGIN\r\n    UPDATE LocItems\r\n    SET LocationID = @LocationID,\r\n        Qty = @Qty,\r\n        OverQty = @OverQty,\r\n        ShortageQty = @ShortageQty,\r\n        DamageQty = @DamageQty,\r\n        RejectQty = @RejectQty,\r\n        NISQty = @NISQty,\r\n        EditedBy = @EditedBy,\r\n        EditedDate = @EditedDate\r\n    WHERE LocItemID = @LocItemID\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateLocItem' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[UpdateLocItemLocation]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateLocItemLocation' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[UpdateLocItemLocation]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[UpdateLocItemLocation]\r\n    @UpdateLocItemLocationTVP dbo.UpdateLocItemLocationType READONLY\r\nAS\r\nBEGIN\r\n    UPDATE LocItems\r\n    SET \r\n        LocationID = tvp.LocationID,\r\n        EditedBy = tvp.EditedBy,\r\n        EditedDate = tvp.EditedDate\r\n    FROM @UpdateLocItemLocationTVP tvp\r\n    WHERE LocItems.LocItemID = tvp.LocItemID;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateLocItemLocation' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[UpdateLocItemRemarkinMrv]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateLocItemRemarkinMrv' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[UpdateLocItemRemarkinMrv]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","create PROCEDURE [dbo].[UpdateLocItemRemarkinMrv]\r\n    @UpdateLocItemRemarkMrvTVP dbo.UpdateLocItemRemarkMrvType READONLY\r\nAS\r\nBEGIN\r\n    UPDATE LocItems\r\n    SET \r\n        RemarkLocitemID = tvp.RemarkLocitemID,\r\n        EditedBy = tvp.EditedBy,\r\n        EditedDate = tvp.EditedDate\r\n    FROM @UpdateLocItemRemarkMrvTVP tvp\r\n    WHERE LocItems.LocItemID = tvp.LocItemID;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateLocItemRemarkinMrv' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[UpdateMivRequestsBulk]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateMivRequestsBulk' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[UpdateMivRequestsBulk]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[UpdateMivRequestsBulk]\r\n@UpdateData dbo.UpdateMivTableType READONLY\r\nAS\r\nBEGIN\r\n    UPDATE Requests\r\n    SET DelMivQty = u.DelMivQty,\r\n        ReserveMivQty = 0\r\n    FROM Requests r\r\n    INNER JOIN @UpdateData u ON r.ReqLocItemID = u.ReqLocItemID\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateMivRequestsBulk' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[UpdateMivRequestsBulk2]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateMivRequestsBulk2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[UpdateMivRequestsBulk2]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","create PROCEDURE [dbo].[UpdateMivRequestsBulk2]\r\n@UpdateData dbo.UpdateMivTableType READONLY,\r\n@userid int\r\nAS\r\nBEGIN\r\n    UPDATE Requests\r\n    SET DelMivQty = u.DelMivQty,\r\n        ReserveMivQty = 0,\r\n\t\tApprovedBy = @userid,\r\n\t\tApprovedDate =GETDATE()\r\n    FROM Requests r\r\n    INNER JOIN @UpdateData u ON r.ReqLocItemID = u.ReqLocItemID\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateMivRequestsBulk2' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[updateMrvCompany]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='updateMrvCompany' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[updateMrvCompany]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","create PROCEDURE [dbo].[updateMrvCompany]\r\n    @RequestNO NVARCHAR(100),\r\n    @MrvCompany int,\r\n    @Success BIT OUTPUT\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n    SET @Success = 0;\r\n\r\n    BEGIN TRANSACTION;\r\n    BEGIN TRY\r\n        UPDATE Requests \r\n        SET CompanyID = @MrvCompany \r\n        WHERE TypeID = 2 AND RequestNO = @RequestNO;\r\n\r\n        -- Check if the update affected any rows\r\n        IF @@ROWCOUNT > 0\r\n        BEGIN\r\n            SET @Success = 1;\r\n        END\r\n\r\n        COMMIT TRANSACTION;\r\n    END TRY\r\n    BEGIN CATCH\r\n        ROLLBACK TRANSACTION;\r\n        DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();\r\n        RAISERROR (@ErrorMessage, 16, 1);\r\n    END CATCH\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='updateMrvCompany' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[updateMrvName]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='updateMrvName' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[updateMrvName]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[updateMrvName]\r\n    @RequestNO NVARCHAR(100),\r\n    @MrvNo NVARCHAR(MAX),\r\n    @Success BIT OUTPUT\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n    SET @Success = 0;\r\n\r\n    BEGIN TRANSACTION;\r\n    BEGIN TRY\r\n        UPDATE Requests \r\n        SET MRVNO = @MrvNo \r\n        WHERE TypeID = 2 AND RequestNO = @RequestNO;\r\n\r\n        -- Check if the update affected any rows\r\n        IF @@ROWCOUNT > 0\r\n        BEGIN\r\n            SET @Success = 1;\r\n        END\r\n\r\n        COMMIT TRANSACTION;\r\n    END TRY\r\n    BEGIN CATCH\r\n        ROLLBACK TRANSACTION;\r\n        DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();\r\n        RAISERROR (@ErrorMessage, 16, 1);\r\n    END CATCH\r\nEND;\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='updateMrvName' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[UpdateMRVQty]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateMRVQty' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[UpdateMRVQty]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[UpdateMRVQty]\r\n    @UpdateMrvQtyTVP dbo.UpdateMrvQtType READONLY\r\nAS\r\nBEGIN\r\n    BEGIN TRANSACTION;\r\n\r\n    BEGIN TRY\r\n        -- استخراج CompanyID مربوط به MRVRequest و TypeID = 2\r\n        DECLARE @CompanyID INT;\r\n        SELECT TOP 1 @CompanyID = Requests.CompanyID\r\n        FROM Requests\r\n        WHERE Requests.RequestNO IN (SELECT MRVRequest FROM @UpdateMrvQtyTVP)\r\n          AND TypeID = 2;\r\n\r\n        IF @CompanyID IS NULL\r\n        BEGIN\r\n            THROW 50000, 'CompanyID not found for the provided MRVRequest.', 1;\r\n        END\r\n\r\n\t\t\tDECLARE @AvailableData TABLE (\r\n\t\t\t\tPLocItemIDforMRV INT,\r\n\t\t\t\tRequestNO NVARCHAR(50),\r\n\t\t\t\tTypeName NVARCHAR(50),\r\n\t\t\t\tItemId INT,\r\n\t\t\t\tTag NVARCHAR(50),\r\n\t\t\t\tDescription NVARCHAR(255),\r\n\t\t\t\tUnitName NVARCHAR(50),\r\n\t\t\t\tMrvHmvAvailableQty DECIMAL(18, 2)\r\n\t\t\t);\r\n\r\n\t\t\t-- اطمینان حاصل کنید که تعداد و نوع ستون‌ها همخوانی دارند\r\n\t\t\tINSERT INTO @AvailableData (PLocItemIDforMRV, RequestNO, TypeName, ItemId, Tag, Description, UnitName, MrvHmvAvailableQty)\r\n\t\t\tEXEC dbo.AllMaterialMrvHmvable2025 @CompanyID;\r\n\r\n        -- بررسی موجودی مجاز بازگشتی برای PLocItemIDforMRV\r\n        DECLARE @ValidationErrors NVARCHAR(MAX);\r\n\r\n        SELECT \r\n            @ValidationErrors = STRING_AGG('PLocItemIDforMRV ' + CAST(tvp.PLocItemIDforMRV AS NVARCHAR) + ' exceeds the available quantity.', CHAR(13))\r\n        FROM @UpdateMrvQtyTVP tvp\r\n        LEFT JOIN @AvailableData AS AvailableData\r\n            ON tvp.PLocItemIDforMRV = AvailableData.PLocItemIDforMRV\r\n        WHERE tvp.DelMrvQty + tvp.DelMrvRejQty > AvailableData.MrvHmvAvailableQty;\r\n\r\n        IF @ValidationErrors IS NOT NULL\r\n        BEGIN\r\n            ROLLBACK TRANSACTION;\r\n            THROW 50001, @ValidationErrors, 1;\r\n        END\r\n\r\n        -- به‌روزرسانی مقادیر مورد نظر در جدول هدف\r\n        UPDATE Requests\r\n        SET \r\n            ReqMrvQty = tvp.ReqMrvQty,\r\n            DelMrvQty = tvp.DelMrvQty,\r\n            DelMrvRejQty = tvp.DelMrvRejQty,\r\n            IssuedBy = tvp.EditedBy,\r\n            IssuedDate = tvp.EditedDate\r\n        FROM @UpdateMrvQtyTVP tvp\r\n        WHERE Requests.LocItemID = tvp.LocItemID\r\n          AND Requests.ReqLocItemID = tvp.ReqLocItemID\r\n          AND Requests.RequestNO = tvp.MRVRequest\r\n          AND TypeID = 2;\r\n\r\n        COMMIT TRANSACTION;\r\n    END TRY\r\n    BEGIN CATCH\r\n        ROLLBACK TRANSACTION;\r\n        THROW;\r\n    END CATCH;\r\nEND;\r\n\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateMRVQty' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[UpdateMRVQty2025]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateMRVQty2025' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[UpdateMRVQty2025]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[UpdateMRVQty2025]\r\n    @UpdateMrvQtyTVP dbo.UpdateMrvQtType READONLY\r\nAS\r\nBEGIN\r\n    BEGIN TRANSACTION;\r\n\r\n    BEGIN TRY\r\n        -- استخراج CompanyID مربوط به MRVRequest و TypeID = 2\r\n        DECLARE @CompanyID INT;\r\n\t\tDECLARE @DelMrvQtyLast decimal(18,2);\r\n\t\tDECLARE @DelMrvRejQtyLast decimal(18,2);\r\n        SELECT TOP 1 @CompanyID = Requests.CompanyID , @DelMrvQtyLast=Requests.DelMrvQty,@DelMrvRejQtyLast=Requests.DelMrvRejQty\r\n        FROM Requests\r\n        WHERE Requests.RequestNO IN (SELECT MRVRequest FROM @UpdateMrvQtyTVP)\r\n          AND TypeID = 2;\r\n\r\n        IF @CompanyID IS NULL\r\n        BEGIN\r\n            THROW 50000, 'CompanyID not found for the provided MRVRequest.', 1;\r\n        END\r\n\r\n\t\t\t\t\t\t-- تعریف جدول موقت\r\n\t\t\tDECLARE @AvailableData TABLE (\r\n\t\t\t\tLocItemID INT,                          -- شناسه موقعیت مکانی آیتم\r\n\t\t\t\tRequestNO NVARCHAR(50),                 -- شماره درخواست\r\n\t\t\t\tTypeName NVARCHAR(50),                  -- نوع درخواست (MIV یا HMV)\r\n\t\t\t\tItemId INT,                             -- شناسه آیتم\r\n\t\t\t\tTag NVARCHAR(50),                       -- برچسب آیتم\r\n\t\t\t\tDescription NVARCHAR(MAX),              -- توضیحات آیتم\r\n\t\t\t\tUnitName NVARCHAR(50),                  -- نام واحد اندازه‌گیری\r\n\t\t\t\tTotalDelMivQty INT,                     -- مقدار کل تحویلی در MIV\r\n\t\t\t\tTotalDelMivRejQty INT,                  -- مقدار کل رد شده در MIV\r\n\t\t\t\tMrvHmvAvailableQty INT,                 -- مقدار قابل دسترس برای MRV و HMV\r\n\t\t\t\tTotalReqMrvQty INT,                     -- مجموع مقادیر درخواست شده در MRV (با علامت منفی)\r\n\t\t\t\tTotalDelMrvQty INT,                     -- مجموع مقادیر تحویل داده شده در MRV (با علامت منفی)\r\n\t\t\t\tTotalDelMrvRejQty INT,                  -- مجموع مقادیر رد شده در MRV (با علامت منفی)\r\n\t\t\t\tTotalDelHmvQty INT,                     -- مجموع مقادیر تحویل داده شده در HMV (با علامت منفی)\r\n\t\t\t\tTotalDelHmvRejQty INT,                  -- مجموع مقادیر رد شده در HMV (با علامت منفی)\r\n\t\t\t\tTotalGetHmvQty INT,                     -- مجموع مقادیر دریافت‌شده در HMV\r\n\t\t\t\tTotalGetHmvRejQty INT                   -- مجموع مقادیر رد شده در HMV\r\n\t\t\t);\r\n\r\n\t\t\t-- درج داده‌ها از پروسجر\r\n\t\t\tINSERT INTO @AvailableData (\r\n\t\t\t\tLocItemID,\r\n\t\t\t\tRequestNO,\r\n\t\t\t\tTypeName,\r\n\t\t\t\tItemId,\r\n\t\t\t\tTag,\r\n\t\t\t\tDescription,\r\n\t\t\t\tUnitName,\r\n\t\t\t\tTotalDelMivQty,\r\n\t\t\t\tTotalDelMivRejQty,\r\n\t\t\t\tMrvHmvAvailableQty,\r\n\t\t\t\tTotalReqMrvQty,\r\n\t\t\t\tTotalDelMrvQty,\r\n\t\t\t\tTotalDelMrvRejQty,\r\n\t\t\t\tTotalDelHmvQty,\r\n\t\t\t\tTotalDelHmvRejQty,\r\n\t\t\t\tTotalGetHmvQty,\r\n\t\t\t\tTotalGetHmvRejQty\r\n\t\t\t)\r\n\t\t\tEXEC dbo.AllMaterialMrvHmvable2025 @CompanyID;\r\n\r\n\r\n        -- بررسی موجودی مجاز بازگشتی برای PLocItemIDforMRV\r\n        DECLARE @ValidationErrors NVARCHAR(MAX);\r\n\r\n        SELECT \r\n            @ValidationErrors = STRING_AGG('PLocItemIDforMRV ' + CAST(tvp.PLocItemIDforMRV AS NVARCHAR) + ' exceeds the available quantity.', CHAR(13))\r\n        FROM @UpdateMrvQtyTVP tvp\r\n        LEFT JOIN @AvailableData AS AvailableData\r\n            ON tvp.PLocItemIDforMRV = AvailableData.LocItemID\r\n        WHERE tvp.DelMrvQty + tvp.DelMrvRejQty > AvailableData.MrvHmvAvailableQty+@DelMrvQtyLast+@DelMrvRejQtyLast;\r\n\r\n        IF @ValidationErrors IS NOT NULL\r\n        BEGIN\r\n            ROLLBACK TRANSACTION;\r\n            THROW 50001, @ValidationErrors, 1;\r\n        END\r\n\r\n        -- به‌روزرسانی مقادیر مورد نظر در جدول هدف\r\n        UPDATE Requests\r\n        SET \r\n            ReqMrvQty = tvp.ReqMrvQty,\r\n            DelMrvQty = tvp.DelMrvQty,\r\n            DelMrvRejQty = tvp.DelMrvRejQty,\r\n            IssuedBy = tvp.EditedBy,\r\n            IssuedDate = tvp.EditedDate\r\n        FROM @UpdateMrvQtyTVP tvp\r\n        WHERE Requests.LocItemID = tvp.LocItemID\r\n          AND Requests.ReqLocItemID = tvp.ReqLocItemID\r\n          AND Requests.RequestNO = tvp.MRVRequest\r\n          AND TypeID = 2;\r\n\r\n\r\n\r\n\t\t  \t\t\t\t\t\t-- تعریف جدول موقت\r\n\t\t\tDECLARE @AvailableData2 TABLE (\r\n\t\t\t\tLocItemID INT,                          -- شناسه موقعیت مکانی آیتم\r\n\t\t\t\tRequestNO NVARCHAR(50),                 -- شماره درخواست\r\n\t\t\t\tTypeName NVARCHAR(50),                  -- نوع درخواست (MIV یا HMV)\r\n\t\t\t\tItemId INT,                             -- شناسه آیتم\r\n\t\t\t\tTag NVARCHAR(50),                       -- برچسب آیتم\r\n\t\t\t\tDescription NVARCHAR(MAX),              -- توضیحات آیتم\r\n\t\t\t\tUnitName NVARCHAR(50),                  -- نام واحد اندازه‌گیری\r\n\t\t\t\tTotalDelMivQty INT,                     -- مقدار کل تحویلی در MIV\r\n\t\t\t\tTotalDelMivRejQty INT,                  -- مقدار کل رد شده در MIV\r\n\t\t\t\tMrvHmvAvailableQty INT,                 -- مقدار قابل دسترس برای MRV و HMV\r\n\t\t\t\tTotalReqMrvQty INT,                     -- مجموع مقادیر درخواست شده در MRV (با علامت منفی)\r\n\t\t\t\tTotalDelMrvQty INT,                     -- مجموع مقادیر تحویل داده شده در MRV (با علامت منفی)\r\n\t\t\t\tTotalDelMrvRejQty INT,                  -- مجموع مقادیر رد شده در MRV (با علامت منفی)\r\n\t\t\t\tTotalDelHmvQty INT,                     -- مجموع مقادیر تحویل داده شده در HMV (با علامت منفی)\r\n\t\t\t\tTotalDelHmvRejQty INT,                  -- مجموع مقادیر رد شده در HMV (با علامت منفی)\r\n\t\t\t\tTotalGetHmvQty INT,                     -- مجموع مقادیر دریافت‌شده در HMV\r\n\t\t\t\tTotalGetHmvRejQty INT                   -- مجموع مقادیر رد شده در HMV\r\n\t\t\t);\r\n\r\n\t\t\t-- درج داده‌ها از پروسجر\r\n\t\t\tINSERT INTO @AvailableData2 (\r\n\t\t\t\tLocItemID,\r\n\t\t\t\tRequestNO,\r\n\t\t\t\tTypeName,\r\n\t\t\t\tItemId,\r\n\t\t\t\tTag,\r\n\t\t\t\tDescription,\r\n\t\t\t\tUnitName,\r\n\t\t\t\tTotalDelMivQty,\r\n\t\t\t\tTotalDelMivRejQty,\r\n\t\t\t\tMrvHmvAvailableQty,\r\n\t\t\t\tTotalReqMrvQty,\r\n\t\t\t\tTotalDelMrvQty,\r\n\t\t\t\tTotalDelMrvRejQty,\r\n\t\t\t\tTotalDelHmvQty,\r\n\t\t\t\tTotalDelHmvRejQty,\r\n\t\t\t\tTotalGetHmvQty,\r\n\t\t\t\tTotalGetHmvRejQty\r\n\t\t\t)\r\n\t\t\tEXEC dbo.AllMaterialMrvHmvable2025 @CompanyID;\r\n\r\n\r\n\r\n\t\n             -- بررسی موجودی مجاز بازگشتی برای PLocItemIDforMRV\r\n        DECLARE @ValidationErrors2 NVARCHAR(MAX);\r\n\r\n        SELECT \r\n            @ValidationErrors2 = STRING_AGG('MrvHmvAvailableQty cannot be negative after update. PLocItemIDforMRV ' + CAST(tvp.PLocItemIDforMRV AS NVARCHAR) + ' exceeds the available quantity.', CHAR(13))\r\n        FROM @UpdateMrvQtyTVP tvp\r\n        LEFT JOIN @AvailableData2 AS AvailableData2\r\n            ON tvp.PLocItemIDforMRV = AvailableData2.LocItemID\r\n        WHERE AvailableData2.MrvHmvAvailableQty<0;\r\n\r\n     IF @ValidationErrors2 IS NOT NULL\r\n\t\tBEGIN\r\n\t\t\tROLLBACK TRANSACTION;\r\n\t\t\tTHROW 50002, @ValidationErrors2, 1;\r\n\t\tEND;\r\n\r\n\r\n\r\n\r\n        COMMIT TRANSACTION;\r\n    END TRY\r\n    BEGIN CATCH\r\n        ROLLBACK TRANSACTION;\r\n        THROW;\r\n    END CATCH;\r\nEND;\r\n\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateMRVQty2025' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[UpdateMRVRemark]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateMRVRemark' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[UpdateMRVRemark]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","create PROCEDURE [dbo].[UpdateMRVRemark]\r\n    @UpdateMrvRemarkTVP dbo.UpdateMrvRemarkType READONLY\r\nAS\r\nBEGIN\r\n    UPDATE Requests\r\n    SET \r\n        Remark = tvp.RemarkRequests,\r\n        IssuedBy = tvp.EditedBy,\r\n        IssuedDate = tvp.EditedDate\r\n    FROM @UpdateMrvRemarkTVP tvp\r\n    WHERE Requests.LocItemID = tvp.LocItemID and RequestNO = tvp.MRVRequest and TypeID=2;\r\nEND\r\n\r\n\r\n\r\n--CREATE PROCEDURE UpdateMRVRemark\r\n--    @UpdateMrvRemarkMrvTVP dbo.UpdateMrvRemarkType READONLY\r\n--AS\r\n--BEGIN\r\n--    -- مثال از نحوه به‌روزرسانی اطلاعات\r\n--    UPDATE MRVTable\r\n--    SET \r\n--        RemarkRequests = tvp.RemarkRequests,\r\n--        MRVRequest = tvp.MRVRequest,\r\n--        EditedBy = tvp.EditedBy,\r\n--        EditedDate = tvp.EditedDate\r\n--    FROM @UpdateMrvRemarkMrvTVP tvp\r\n--    WHERE MRVTable.LocItemID = tvp.LocItemID;\r\n--END;\r\n--CREATE TYPE dbo.UpdateMrvRemarkType AS TABLE\r\n--(\r\n--    LocItemID INT,\r\n--    RemarkRequests NVARCHAR(255),\r\n--    MRVRequest NVARCHAR(255),\r\n--    EditedBy NVARCHAR(50),\r\n--    EditedDate DATETIME\r\n--);\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateMRVRemark' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[UpdateMsrRev2025]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateMsrRev2025' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[UpdateMsrRev2025]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[UpdateMsrRev2025]\r\n    @PLId INT,\r\n    @MSRRev INT,\r\n    @UserID INT,\r\n    @NewMsrNo NVARCHAR(50) OUTPUT\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    BEGIN TRY\r\n        -- دریافت MSRNO مرتبط با PLId\r\n        DECLARE @CurrentMsrNo NVARCHAR(50);\r\n        SELECT TOP 1 @CurrentMsrNo = MSRNO\r\n        FROM Packages\r\n        WHERE PLId = @PLId;\r\n\r\n        -- اگر MSRNO خالی بود، یک خطا برگردانید\r\n        IF @CurrentMsrNo IS NULL\r\n        BEGIN\r\n            RAISERROR ('No MSRNO found for the provided PLId.', 16, 1);\r\n            RETURN;\r\n        END\r\n\r\n        -- به‌روزرسانی MSRRev و تاریخ\r\n        UPDATE Packages\r\n        SET \r\n            MSRRev = @MSRRev,\r\n            MSRRevDate = GETDATE(),\r\n            MSRRevEnteredBy = @UserID\r\n        WHERE PLId = @PLId;\r\n\r\n        -- مقدار خروجی را تنظیم کنید\r\n        SET @NewMsrNo = @CurrentMsrNo;\r\n\r\n    END TRY\r\n    BEGIN CATCH\r\n        -- مدیریت خطاها\r\n        THROW;\r\n    END CATCH\r\nEND;\r\n\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateMsrRev2025' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[UpdatePackage]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdatePackage' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[UpdatePackage]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[UpdatePackage]\r\n    @PKID INT,\r\n    @PLId INT,\r\n    @PK INT,\r\n    @NetW DECIMAL(18,2),\r\n    @GrossW DECIMAL(18,2),\r\n    @Dimension VARCHAR(100),\r\n    @Volume VARCHAR(100), -- تغییر به VARCHAR\r\n    @ArrivalDate DATETIME,\r\n    @Desciption NVARCHAR(500),\r\n    @Remark NVARCHAR(500),\r\n    @EnteredBy INT, -- تغییر به INT\r\n    @EnteredDate DATETIME,\r\n    @EditedBy INT, -- تغییر به INT\r\n    @EditedDate DATETIME,\r\n    @MSRNO NVARCHAR(100),\r\n    @MSRPDF NVARCHAR(100),\r\n    @MSRDate DATETIME,\r\n    @MSREnteredBy INT, -- تغییر به INT\r\n    @MSRStatus BIT, -- تغییر به BIT\r\n    @MSRRev INT,\r\n    @MSRRevEnteredBy INT, -- تغییر به INT\r\n    @MSRRevDate DATETIME\r\nAS\r\nBEGIN\r\n    UPDATE Packages\r\n    SET PLId = @PLId,\r\n        PK = @PK,\r\n        NetW = @NetW,\r\n        GrossW = @GrossW,\r\n        Dimension = @Dimension,\r\n        Volume = @Volume,\r\n        ArrivalDate = @ArrivalDate,\r\n        Desciption = @Desciption,\r\n        Remark = @Remark,\r\n        EnteredBy = @EnteredBy,\r\n        EnteredDate = @EnteredDate,\r\n        EditedBy = @EditedBy,\r\n        EditedDate = @EditedDate,\r\n        MSRNO = @MSRNO,\r\n        MSRPDF = @MSRPDF,\r\n        MSRDate = @MSRDate,\r\n        MSREnteredBy = @MSREnteredBy,\r\n        MSRStatus = @MSRStatus,\r\n        MSRRev = @MSRRev,\r\n        MSRRevEnteredBy = @MSRRevEnteredBy,\r\n        MSRRevDate = @MSRRevDate\r\n    WHERE PKID = @PKID;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdatePackage' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[UpdatePackage2025Pluse]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdatePackage2025Pluse' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[UpdatePackage2025Pluse]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[UpdatePackage2025Pluse]\r\n    @PKID INT,\r\n    @PLId INT,\r\n    @NetW DECIMAL(18,2),\r\n    @GrossW DECIMAL(18,2),\r\n    @Dimension VARCHAR(100),\r\n    @Volume VARCHAR(100),\r\n    @ArrivalDate DATETIME,\r\n    @Desciption NVARCHAR(500),\r\n    @Remark NVARCHAR(500),\r\n    @EditedBy INT\r\nAS\r\nBEGIN\r\n    BEGIN TRY\r\n        UPDATE Packages\r\n        SET \r\n            NetW = @NetW,\r\n            GrossW = @GrossW,\r\n            Dimension = @Dimension,\r\n            Volume = @Volume,\r\n            ArrivalDate = @ArrivalDate,\r\n            Desciption = @Desciption,\r\n            Remark = @Remark,\r\n            EditedBy = @EditedBy,\r\n            EditedDate = GETDATE()\r\n        WHERE PKID = @PKID AND PLId = @PLId;\r\n\r\n        SELECT 'Update successful' AS ResultMessage;\r\n    END TRY\r\n    BEGIN CATCH\r\n        SELECT ERROR_MESSAGE() AS ErrorMessage, ERROR_LINE() AS ErrorLine;\r\n    END CATCH;\r\nEND;\r\n\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdatePackage2025Pluse' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[UpdatePackageINPackingList]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdatePackageINPackingList' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[UpdatePackageINPackingList]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","\r\ncreate PROCEDURE [dbo].[UpdatePackageINPackingList]\r\n    @PKID INT,\r\n    @ArrivalDate DATETIME,\r\n    @MSRNO NVARCHAR(50),\r\n    @MSRPDF NVARCHAR(50),\r\n    @EditedBy NVARCHAR(50),\r\n    @EditedDate DATETIME\r\nAS\r\nBEGIN\r\n    UPDATE Packages\r\n    SET ArrivalDate = @ArrivalDate,\r\n        MSRNO = @MSRNO,\r\n        MSRPDF = @MSRPDF,\r\n        EditedBy = @EditedBy,\r\n        EditedDate = @EditedDate\r\n    WHERE PKID = @PKID;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdatePackageINPackingList' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[UpdatePackingList]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdatePackingList' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[UpdatePackingList]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","\r\nCREATE PROCEDURE [dbo].[UpdatePackingList]\r\n    @PLId INT,\r\n    @ShId INT,\r\n    @MrId INT,\r\n    @PoId INT,\r\n    @IrnId INT,\r\n    @PLName NVARCHAR(300), -- 300 instead of 255\r\n    @ArchiveNO NVARCHAR(50), -- 50 instead of 255\r\n    @PLNO NVARCHAR(50), -- 50 instead of 255\r\n    @OPINO NVARCHAR(50), -- 50 instead of 255\r\n    @Project NVARCHAR(50), -- 50 instead of 255\r\n    @AreaUnitID INT,\r\n    @SupplierId INT,\r\n    @DesciplineId INT,\r\n    @VendorId INT,\r\n    @DescriptionForPkId INT,\r\n    @NetW DECIMAL(18, 2),\r\n    @GrossW DECIMAL(18, 2),\r\n    @Volume NVARCHAR(MAX), -- changed to NVARCHAR(MAX) instead of DECIMAL(18, 2)\r\n    @Vessel NVARCHAR(MAX),\r\n    @EnteredBy INT,\r\n    @EnteredDate DATETIME,\r\n    @MARDate DATETIME,\r\n    @Remark NVARCHAR(MAX),\r\n    @LocalForeign INT,\r\n    @RTINO NVARCHAR(MAX),\r\n    @InvoiceNO NVARCHAR(MAX),\r\n    @IRCNO NVARCHAR(MAX),\r\n    @LCNO NVARCHAR(MAX),\r\n    @BLNO NVARCHAR(MAX),\r\n    @Remarkcustoms NVARCHAR(MAX),\r\n    @EditedBy INT,\r\n    @EditedDate DATETIME,\r\n    @PLDPF NVARCHAR(MAX),\r\n    @Balance BIT,\r\n    @Attachment BIT,\r\n    @SitePL BIT,\r\n    @Success BIT OUTPUT,\r\n    @ErrorMessage NVARCHAR(255) OUTPUT\r\nAS\r\nBEGIN\r\n    BEGIN TRY\r\n        UPDATE PackingLists SET \r\n            ShId = @ShId,\r\n            MrId = @MrId,\r\n            PoId = @PoId,\r\n            IrnId = @IrnId,\r\n            PLName = @PLName,\r\n            ArchiveNO = @ArchiveNO,\r\n            PLNO = @PLNO,\r\n            OPINO = @OPINO,\r\n            Project = @Project,\r\n            AreaUnitID = @AreaUnitID,\r\n            SupplierId = @SupplierId,\r\n            DesciplineId = @DesciplineId,\r\n            VendorId = @VendorId,\r\n            DescriptionForPkId = @DescriptionForPkId,\r\n            NetW = @NetW,\r\n            GrossW = @GrossW,\r\n            Volume = @Volume,\r\n            Vessel = @Vessel,\r\n            EnteredBy = @EnteredBy,\r\n            EnteredDate = @EnteredDate,\r\n            MARDate = @MARDate,\r\n            Remark = @Remark,\r\n            LocalForeign = @LocalForeign,\r\n            RTINO = @RTINO,\r\n            InvoiceNO = @InvoiceNO,\r\n            IRCNO = @IRCNO,\r\n            LCNO = @LCNO,\r\n            BLNO = @BLNO,\r\n            Remarkcustoms = @Remarkcustoms,\r\n            EditedBy = @EditedBy,\r\n            EditedDate = @EditedDate,\r\n            PLDPF = @PLDPF,\r\n            Balance = @Balance,\r\n            Attachment = @Attachment,\r\n            SitePL = @SitePL\r\n        WHERE PLId = @PLId;\r\n\r\n        SET @Success = 1;\r\n        SET @ErrorMessage = NULL;\r\n    END TRY\r\n    BEGIN CATCH\r\n        SET @Success = 0;\r\n        SET @ErrorMessage = ERROR_MESSAGE();\r\n    END CATCH\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdatePackingList' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[UpdatePackingListPLDPF]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdatePackingListPLDPF' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[UpdatePackingListPLDPF]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[UpdatePackingListPLDPF]\r\n    @PLName NVARCHAR(255),\r\n    @PLDPF NVARCHAR(255)\r\nAS\r\nBEGIN\r\n    UPDATE PackingLists\r\n    SET PLDPF = @PLDPF\r\n    WHERE PLName = @PLName;\r\n\r\n    -- Return the number of affected rows\r\n    RETURN @@ROWCOUNT;\r\nEND\r\n\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdatePackingListPLDPF' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[UpdatePKMSRPDF]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdatePKMSRPDF' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[UpdatePKMSRPDF]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[UpdatePKMSRPDF]\r\n    @MSRNO NVARCHAR(255),\r\n    @MSRPDF NVARCHAR(255)\r\nAS\r\nBEGIN\r\n    UPDATE Packages\r\n    SET MSRPDF = @MSRPDF\r\n    WHERE MSRNO = @MSRNO;\r\n\r\n\t -- Return the number of affected rows\r\n    RETURN @@ROWCOUNT;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdatePKMSRPDF' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[UpdateRequestMIVPDF]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateRequestMIVPDF' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[UpdateRequestMIVPDF]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[UpdateRequestMIVPDF]\r\n    @RequestNo NVARCHAR(255),\r\n    @RequestPDF NVARCHAR(255)\r\nAS\r\nBEGIN\r\n    UPDATE Requests\r\n    SET RequestPDF = @RequestPDF\r\n    WHERE RequestNO = @RequestNo;\r\n\r\n\t -- Return the number of affected rows\r\n    RETURN @@ROWCOUNT;\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateRequestMIVPDF' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [dbo].[UpdateStorageCodes]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateStorageCodes' and @Schema='dbo']","object_type":"StoredProcedure"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["/****** Object:  StoredProcedure [dbo].[UpdateStorageCodes]    Script Date: 12/18/2024 10:21:08 PM ******/\r\nSET ANSI_NULLS ON\r\n","GO\r\n","SET QUOTED_IDENTIFIER ON\r\n","GO\r\n","CREATE PROCEDURE [dbo].[UpdateStorageCodes]\r\n    @ItemIds dbo.ItemIDList READONLY,\r\n    @NewStorageCode NVARCHAR(50)\r\nAS\r\nBEGIN\r\n    SET NOCOUNT ON;\r\n\r\n    UPDATE Items\r\n    SET StorageCode = @NewStorageCode\r\n    WHERE ItemId IN (SELECT ItemID FROM @ItemIds);\r\nEND\r\nGO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/StoredProcedure[@Name='UpdateStorageCodes' and @Schema='dbo']","object_type":"StoredProcedure"}},{"cell_type":"markdown","source":["# [MS_Description]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='LocItems' and @Schema='dbo']/Column[@Name='FlagMIVorHMV']/ExtendedProperty[@Name='MS_Description']","object_type":"ExtendedProperty"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Flag for MIV or HMV status' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'LocItems', @level2type=N'COLUMN',@level2name=N'FlagMIVorHMV'\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='LocItems' and @Schema='dbo']/Column[@Name='FlagMIVorHMV']/ExtendedProperty[@Name='MS_Description']","object_type":"ExtendedProperty"}},{"cell_type":"markdown","source":["# [MS_Description]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Requests' and @Schema='dbo']/Column[@Name='PLocItemIDforMRV']/ExtendedProperty[@Name='MS_Description']","object_type":"ExtendedProperty"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Parent LocItemID for MRV process' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'Requests', @level2type=N'COLUMN',@level2name=N'PLocItemIDforMRV'\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']/Table[@Name='Requests' and @Schema='dbo']/Column[@Name='PLocItemIDforMRV']/ExtendedProperty[@Name='MS_Description']","object_type":"ExtendedProperty"}},{"cell_type":"markdown","source":["# [AWMSdb]"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']","object_type":"Database"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["USE [master]\r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']","object_type":"Database"}},{"outputs":[],"execution_count":0,"cell_type":"code","source":["ALTER DATABASE [AWMSdb] SET  READ_WRITE \r\n","GO\r\n"],"metadata":{"urn":"Server[@Name='DESKTOP-M1LC8TO']/Database[@Name='AWMSdb']","object_type":"Database"}}]}